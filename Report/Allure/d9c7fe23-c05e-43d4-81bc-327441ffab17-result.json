{"name": "ATOM extarnal账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_success.Test_transfers_success object at 0x104d1b550>, test_title = 'ATOM extarnal账户转账'\nnetworkCode = 'ATOM', symbol = 'ATOM'\nprivatekey = '4b49226b1669a687fb4f8479fa9048f1cbb79af74529a47bae7a0c07ce97f8c6'\nfrom_add = 'cosmos1l3wqrt20ugmv3nc5xm0jg3pusm92naa54trk68', to_add = 'cosmos1uxezv8wcd44hp340acnmrqhcnzau4wzhlshcag'\namount = '0.1'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n>           assert transfer.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Transfer/Test_External/test_success.py:104: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1672886323125, "stop": 1672886323826}, {"name": "查询from账户holder信息", "status": "passed", "start": 1672886323826, "stop": 1672886323951}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1672886323951, "stop": 1672886323951}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_External/test_success.py\", line 104, in test_custodial\n    assert transfer.status_code == 200\n"}, "start": 1672886323951, "stop": 1672886326975}], "attachments": [{"name": "log", "source": "7d4a560c-efbc-4147-b517-aed5fbdd49fa-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'ATOM extarnal账户转账'"}, {"name": "networkCode", "value": "'ATOM'"}, {"name": "symbol", "value": "'ATOM'"}, {"name": "privatekey", "value": "'4b49226b1669a687fb4f8479fa9048f1cbb79af74529a47bae7a0c07ce97f8c6'"}, {"name": "from_add", "value": "'cosmos1l3wqrt20ugmv3nc5xm0jg3pusm92naa54trk68'"}, {"name": "to_add", "value": "'cosmos1uxezv8wcd44hp340acnmrqhcnzau4wzhlshcag'"}, {"name": "amount", "value": "'0.1'"}], "start": 1672886323125, "stop": 1672886326975, "uuid": "a3f6df8d-1a6e-4cd4-93bf-6606f68d1a7e", "historyId": "592285e4a623a1aec41d699a6cf808a0", "testCaseId": "2d895effda5c005c5782d6bc35b24852", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "story", "value": "Custodial Transfers Success!"}, {"name": "feature", "value": "Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "8005-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_success"}]}