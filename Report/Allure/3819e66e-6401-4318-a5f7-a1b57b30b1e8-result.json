{"name": "MATIC SWAP:USDC->MATIC", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_success.Test_transfers_success object at 0x107cc8100>, test_title = 'MATIC SWAP:USDC->MATIC'\nnetworkCode = 'MATIC', privatekey = 'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'\naddress = '0x25f7f610a1dc5f674a5e2bb9c2846be076814cd7', from_coin = 'USDC', to_coin = 'MATIC', slippage = '1'\nfromamount = '0.0000123'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,privatekey,address,from_coin,to_coin,slippage,fromamount', test_data)\n    def test_custodial(self,test_title,networkCode,privatekey,address,from_coin,to_coin,slippage,fromamount):\n    \n        with allure.step(\"core查询账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=from_coin,address=address)\n            assert holder.status_code ==200\n            quantity = holder.json()[\"list\"][0][\"quantity\"]\n    \n        with allure.step(\"core构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"swap\",\n                \"body\":{\n                    \"address\":address,\n                    \"from\":from_coin,\n                    \"to\":to_coin,\n                    \"fromAmount\":fromamount,\n                    \"slippage\":slippage\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n>           assert transfer.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Swap/Test_Safe/test_success.py:55: AssertionError"}, "steps": [{"name": "core查询账户holder信息", "status": "passed", "start": 1672214814307, "stop": 1672214814865}, {"name": "core构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Swap/Test_Safe/test_success.py\", line 55, in test_custodial\n    assert transfer.status_code == 200\n"}, "start": 1672214814865, "stop": 1672214815488}], "attachments": [{"name": "log", "source": "e344a223-6275-4647-9e5c-b1c8df9b51ed-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'MATIC SWAP:USDC->MATIC'"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "privatekey", "value": "'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'"}, {"name": "address", "value": "'0x25f7f610a1dc5f674a5e2bb9c2846be076814cd7'"}, {"name": "from_coin", "value": "'USDC'"}, {"name": "to_coin", "value": "'MATIC'"}, {"name": "slippage", "value": "'1'"}, {"name": "fromamount", "value": "'0.0000123'"}], "start": 1672214814307, "stop": 1672214815488, "uuid": "27ac27f0-f717-4831-9028-d31ab5c204e6", "historyId": "e12ce394373645e22260ff0cffa6c7ec", "testCaseId": "daf803a7d936806db2f556ddf2351538", "fullName": "Testcase.Test_Cloud.Test_Swap.Test_Safe.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Swap.Test_Safe"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "5560-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Swap.Test_Safe.test_success"}]}