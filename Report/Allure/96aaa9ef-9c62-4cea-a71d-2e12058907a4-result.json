{"name": "BTC创建2-2安全账户 custodial+owner", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'enable' == 'inactive'\n  - inactive\n  + enable", "trace": "self = <test_create_success.Test_create_safe_account object at 0x1075c4b80>\ntest_title = 'BTC创建2-2安全账户 custodial+owner', name = '安全账户BTC2-2-1671018580', networkCode = 'BTC'\nowner = '02e8852463021b47fe5214c599e87e431f2eb1219044946bbff397afd0518b85a6', recovery = ''\n\n    @allure.story(\"Create Safe Account Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,name,networkCode,owner,recovery', test_data)\n    def test_create_account_safe(self, test_title,name,networkCode,owner,recovery):\n    \n        with allure.step(\"创建安全账户\"):\n            safe_account = Http.HttpUtils.create_safe_account(name,networkCode,owner,recovery)\n            assert safe_account.status_code == 200\n            if networkCode == \"GOERLI\":\n                assert safe_account.json()[\"status\"] == \"inactive\"\n            else:\n                assert safe_account.json()[\"status\"] == \"enable\"\n            id = safe_account.json()[\"id\"]\n            address = safe_account.json()[\"address\"]\n    \n        sleep(3)\n        with allure.step(\"查询账户byid\"):\n            account_detail = Http.HttpUtils.account_byid(id)\n            assert account_detail.status_code == 200\n            assert account_detail.json()[\"address\"] == address\n>           assert account_detail.json()[\"status\"] == \"inactive\"\nE           AssertionError: assert 'enable' == 'inactive'\nE             - inactive\nE             + enable\n\nTestcase/Test_Account/Test_Safe_Account/test_create_success.py:52: AssertionError"}, "steps": [{"name": "创建安全账户", "status": "passed", "start": 1671018591479, "stop": 1671018595140}, {"name": "查询账户byid", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'enable' == 'inactive'\n  - inactive\n  + enable\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Account/Test_Safe_Account/test_create_success.py\", line 52, in test_create_account_safe\n    assert account_detail.json()[\"status\"] == \"inactive\"\n"}, "start": 1671018598144, "stop": 1671018598309}], "attachments": [{"name": "log", "source": "60c5b998-68c3-451f-be1e-a3361aa478ef-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'BTC创建2-2安全账户 custodial+owner'"}, {"name": "name", "value": "'安全账户BTC2-2-1671018580'"}, {"name": "networkCode", "value": "'BTC'"}, {"name": "owner", "value": "'02e8852463021b47fe5214c599e87e431f2eb1219044946bbff397afd0518b85a6'"}, {"name": "recovery", "value": "''"}], "start": 1671018591479, "stop": 1671018598309, "uuid": "b889ea7a-2814-4288-8c1c-aa09de7e2f19", "historyId": "3a3e036b4fc2c017b19a6b8068d3cb73", "testCaseId": "92c4dc8ca13a5bfecbfc89a8df792e60", "fullName": "Testcase.Test_Account.Test_Safe_Account.test_create_success.Test_create_safe_account#test_create_account_safe", "labels": [{"name": "story", "value": "Create Safe Account Success!"}, {"name": "feature", "value": "Create Safe Account!"}, {"name": "parentSuite", "value": "Testcase.Test_Account.Test_Safe_Account"}, {"name": "suite", "value": "test_create_success"}, {"name": "subSuite", "value": "Test_create_safe_account"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "6421-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Account.Test_Safe_Account.test_create_success"}]}