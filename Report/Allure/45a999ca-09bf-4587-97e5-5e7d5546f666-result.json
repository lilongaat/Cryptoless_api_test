{"name": "GOERLI Custodial账户转账 nativecoin", "status": "failed", "statusDetails": {"message": "AssertionError: assert Decimal('0.00754324820877755') == Decimal('0.00771657005942255')", "trace": "self = <test_success.Test_transfers_success object at 0x105a77dc0>, test_title = 'GOERLI Custodial账户转账 nativecoin'\nnetworkCode = 'GOERLI', symbol = 'GoerliETH', from_add = '0xcc7a54ec1d39d1cf7b35f2b3b92031ad5fc7b6ca'\nto_add = '0xbdb3bd7b3f3daeadc58d00ef5f15ed9a476b8fe3', amount = '0.00012'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"SIGNED\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n    \n        with allure.step(\"广播交易\"):\n            send = Http.HttpUtils.send(id)\n            assert send.status_code == 200\n            assert send.json()[\"statusDesc\"] == \"PENDING\"\n    \n        with allure.step(\"通过id查询交易记录\"):\n            sleep(30)\n            for n in range(10):\n                transaction = Http.HttpUtils.transactions_byid(id)\n                assert transaction.status_code == 200\n                statusDesc = transaction.json()[\"statusDesc\"]\n                if statusDesc == \"SETTLED\" and len(transaction.json()[\"balanceChanges\"]) > 0:\n                    break\n                else:\n                    sleep(30)\n            sleep(5)\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n>           assert balance == quantity\nE           AssertionError: assert Decimal('0.00754324820877755') == Decimal('0.00771657005942255')\n\nTestcase/Test_Cloud/Test_Transfer/Test_Custodial/test_success.py:133: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1672987961003, "stop": 1672987961401}, {"name": "查询from账户holder信息", "status": "passed", "start": 1672987961401, "stop": 1672987961869}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1672987961870, "stop": 1672987961870}, {"name": "构建交易——instructions", "status": "passed", "start": 1672987961870, "stop": 1672987972662}, {"name": "广播交易", "status": "passed", "start": 1672987972662, "stop": 1672987974933}, {"name": "通过id查询交易记录", "status": "passed", "start": 1672987974933, "stop": 1672988314071}, {"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1672988314071, "stop": 1672988314591}, {"name": "查询from账户holder信息", "status": "passed", "start": 1672988314591, "stop": 1672988314964}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "failed", "statusDetails": {"message": "AssertionError: assert Decimal('0.00754324820877755') == Decimal('0.00771657005942255')\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_Custodial/test_success.py\", line 133, in test_custodial\n    assert balance == quantity\n"}, "start": 1672988314965, "stop": 1672988314965}], "attachments": [{"name": "log", "source": "513e920d-597d-4d55-81a4-b730c47a899a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'GOERLI Custodial账户转账 nativecoin'"}, {"name": "networkCode", "value": "'GOERLI'"}, {"name": "symbol", "value": "'GoerliETH'"}, {"name": "from_add", "value": "'0xcc7a54ec1d39d1cf7b35f2b3b92031ad5fc7b6ca'"}, {"name": "to_add", "value": "'0xbdb3bd7b3f3daeadc58d00ef5f15ed9a476b8fe3'"}, {"name": "amount", "value": "'0.00012'"}], "start": 1672987961003, "stop": 1672988314968, "uuid": "6338a921-d868-440e-ae43-8625ae968a42", "historyId": "41d601a7b33d4ea85e017a41094d4e8c", "testCaseId": "19b7a47abb98a457c189c4a8c9ed58a8", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_Custodial.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Custodial"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "14997-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Custodial.test_success"}]}