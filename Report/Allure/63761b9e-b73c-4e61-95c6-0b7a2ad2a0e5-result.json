{"name": "查询账户余额-cosmos166tuwql86p0sr0nqjr4rq2vkeh87u266dwkm32", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "self = <test_atom_check.Test_accounts_balances object at 0x112dd6910>, address = 'cosmos166tuwql86p0sr0nqjr4rq2vkeh87u266dwkm32'\n\n    @allure.story(\"ATOM Rich_address(Top-100) Balances Check!\")\n    @allure.title('查询账户余额-{address}')\n    @pytest.mark.parametrize('address', accounts)\n    def test_account_balance(self, address):\n    \n        with allure.step(\"mintscan.io查询地址余额\"):\n            response = Httpexplore.ATOM.balance(address)\n            assert response.status_code == 200\n            balance_list = [b.get(\"amount\") for b in response.json()[\"balances\"] if b.get(\"denom\") == \"uatom\"]\n            if len(balance_list) == 0:\n                balance = 0\n            else:\n                balance = (Decimal(int(balance_list[0]))/Decimal(10**6))\n    \n        with allure.step(\"Graphql查询地址余额\"):\n            graphql = Graphql.Graphql.getAccountByAddress(\"ATOM\",address,\"ATOM\")\n            assert graphql.status_code == 200\n            amount = Decimal(graphql.json()[\"data\"][\"getAccountByAddress\"][\"amount\"])\n    \n        with allure.step(\"系统查询地址余额\"):\n            holder = Http.HttpUtils.get_holders(\"ATOM\",\"ATOM\",address,Authorization)\n            assert holder.status_code == 200\n>           quantity = (Decimal(holder.json()[0][\"quantity\"]))\nE           IndexError: list index out of range\n\nTestcase/Test_Sync/Test_accounts_balances/test_atom_check.py:42: IndexError"}, "steps": [{"name": "mintscan.io查询地址余额", "status": "passed", "start": 1662707636587, "stop": 1662707637312}, {"name": "Graphql查询地址余额", "status": "passed", "start": 1662707637312, "stop": 1662707637401}, {"name": "系统查询地址余额", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Sync/Test_accounts_balances/test_atom_check.py\", line 42, in test_account_balance\n    quantity = (Decimal(holder.json()[0][\"quantity\"]))\n"}, "start": 1662707637401, "stop": 1662707637718}], "attachments": [{"name": "log", "source": "c77f16e6-c213-475e-a263-9510d6de07fb-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "address", "value": "'cosmos166tuwql86p0sr0nqjr4rq2vkeh87u266dwkm32'"}], "start": 1662707636587, "stop": 1662707637719, "uuid": "b490a668-a9c3-4409-af19-488a6aae87c7", "historyId": "7205ae4dabfb2658099e6c7a0cdee292", "testCaseId": "1b9aead86894ab5ae8ffa52c10d89a72", "fullName": "Testcase.Test_Sync.Test_accounts_balances.test_atom_check.Test_accounts_balances#test_account_balance", "labels": [{"name": "feature", "value": "Accounts Balances!"}, {"name": "story", "value": "ATOM Rich_address(Top-100) Balances Check!"}, {"name": "parentSuite", "value": "Testcase.Test_Sync.Test_accounts_balances"}, {"name": "suite", "value": "test_atom_check"}, {"name": "subSuite", "value": "Test_accounts_balances"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "24072-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Sync.Test_accounts_balances.test_atom_check"}]}