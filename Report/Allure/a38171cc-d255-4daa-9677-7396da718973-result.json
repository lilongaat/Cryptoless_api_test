{"name": "BTC 3-4share账户转账", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "self = <test_success.Test_transfers_success object at 0x102709ac0>, test_title = 'BTC 3-4share账户转账'\nnetworkCode = 'BTC', symbol = 'BTC'\nprivatekey = ['320e15269f5d12054ff67dbe1e7984c6af2f58db8f4ca3f429e98fe6a01c9e47', 'cb9a013a1eb2aa7e5ce8303f7700c8b6da6bc661ec0c3cb72954be0e09532ad7', 'b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe']\nfrom_add = 'tb1qear90rkncgh46gdh39k42y77xpd6uawfkxh0xw8puz6jdmsys8hs66yacu'\nto_add = 'tb1qagkvxdz2zq76atvr0rzh8n9lewjmlm25umq0xq', amount = '0.000001'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"BUILDING\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n            requiredSignings = transfer.json()[\"_embedded\"][\"transactions\"][0][\"requiredSignings\"]\n            signatures = []\n            for i in range(len(requiredSignings)):\n                hash = requiredSignings[i][\"hash\"]\n                publickeys = requiredSignings[i][\"publicKeys\"]\n                for j in range(len(publickeys)):\n                    signature = {\n                        \"hash\":hash,\n                        \"publicKey\":publickeys[j],\n>                       \"signature\":Conf.Config.sign(privatekey[j],hash)\n    \n                    }\nE                   IndexError: list index out of range\n\nTestcase/Test_Cloud/Test_Transfer/Test_Share/test_success.py:85: IndexError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1673062378707, "stop": 1673062379770}, {"name": "查询from账户holder信息", "status": "passed", "start": 1673062379770, "stop": 1673062380384}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1673062380384, "stop": 1673062380384}, {"name": "构建交易——instructions", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_Share/test_success.py\", line 85, in test_custodial\n    \"signature\":Conf.Config.sign(privatekey[j],hash)\n"}, "start": 1673062380384, "stop": 1673062383735}], "attachments": [{"name": "log", "source": "2b8899db-f483-4471-980e-07267076f4f9-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'BTC 3-4share账户转账'"}, {"name": "networkCode", "value": "'BTC'"}, {"name": "symbol", "value": "'BTC'"}, {"name": "privatekey", "value": "['320e15269f5d12054ff67dbe1e7984c6af2f58db8f4ca3f429e98fe6a01c9e47', 'cb9a013a1eb2aa7e5ce8303f7700c8b6da6bc661ec0c3cb72954be0e09532ad7', 'b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe']"}, {"name": "from_add", "value": "'tb1qear90rkncgh46gdh39k42y77xpd6uawfkxh0xw8puz6jdmsys8hs66yacu'"}, {"name": "to_add", "value": "'tb1qagkvxdz2zq76atvr0rzh8n9lewjmlm25umq0xq'"}, {"name": "amount", "value": "'0.000001'"}], "start": 1673062378707, "stop": 1673062383736, "uuid": "4fe4cc75-22db-4670-aaf4-4d8d3a71e422", "historyId": "bf124b6b0ab1987a49a18e5967ad8619", "testCaseId": "f280abede794e675248cc33ca19ba7e5", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_Share.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "story", "value": "Custodial Transfers Success!"}, {"name": "feature", "value": "Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Share"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "18374-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Share.test_success"}]}