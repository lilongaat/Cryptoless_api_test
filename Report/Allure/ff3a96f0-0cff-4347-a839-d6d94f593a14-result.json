{"name": "查询账户余额-cosmos1nm0rrq86ucezaf8uj35pq9fpwr5r82cl8sc7p5", "status": "broken", "statusDetails": {"message": "KeyError: 0", "trace": "self = <test_ob_account_ATOM.Test_accounts_balances object at 0x1086b27c0>\naddress = 'cosmos1nm0rrq86ucezaf8uj35pq9fpwr5r82cl8sc7p5'\n\n    @allure.story(\"ATOM Rich_address(Top-100) Balances Check!\")\n    @allure.title('查询账户余额-{address}')\n    @pytest.mark.parametrize('address', accounts)\n    def test_account_balance(self, address):\n    \n        with allure.step(\"浏览器查询地址余额\"):\n            response = Httpexplore.ATOM.balance(address)\n            assert response.status_code == 200\n            balance_ = [b.get(\"amount\") for b in response.json()[\"balances\"] if b.get(\"denom\") == \"uatom\"]\n            if len(balance_) == 0:\n                balance = 0\n            else:\n                balance = (Decimal(int(balance_[0]))/Decimal(10**6))\n    \n        with allure.step(\"Graphql查询地址余额\"):\n            graphql = Graphql.Graphql.getAccountByAddress(\"ATOM\",address,\"ATOM\")\n            assert graphql.status_code == 200\n            amount = Decimal(graphql.json()[\"data\"][\"getAccountByAddress\"][\"amount\"])\n    \n        with allure.step(\"系统查询地址余额\"):\n            holder = Http.HttpUtils.holders(\"ATOM\",\"ATOM\",address,ob_token)\n            assert holder.status_code == 200\n            if len(holder.json()) == 0:\n                quantity = 0\n            else:\n>               quantity = (Decimal(holder.json()[0]['quantity']))\nE               KeyError: 0\n\nTestcase/Test_Top_Holders_Check/Test_obaccount_holder.py/test_ob_account_ATOM.py:56: KeyError"}, "steps": [{"name": "浏览器查询地址余额", "status": "passed", "start": 1675159930527, "stop": 1675159931134}, {"name": "Graphql查询地址余额", "status": "passed", "start": 1675159931134, "stop": 1675159931227}, {"name": "系统查询地址余额", "status": "broken", "statusDetails": {"message": "KeyError: 0\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Top_Holders_Check/Test_obaccount_holder.py/test_ob_account_ATOM.py\", line 56, in test_account_balance\n    quantity = (Decimal(holder.json()[0]['quantity']))\n"}, "start": 1675159931227, "stop": 1675159931538}], "attachments": [{"name": "log", "source": "8c0978e6-9b9b-4bca-a033-33e4d5ce037e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "address", "value": "'cosmos1nm0rrq86ucezaf8uj35pq9fpwr5r82cl8sc7p5'"}], "start": 1675159930527, "stop": 1675159931538, "uuid": "10159824-f8ed-4423-9dd6-46d712d0039a", "historyId": "260ae9b194bf1139be576eb06118e664", "testCaseId": "654e4b3e6540827fd267c406d2ffefec", "fullName": "Testcase.Test_Top_Holders_Check.Test_obaccount_holder.py.test_ob_account_ATOM.Test_accounts_balances#test_account_balance", "labels": [{"name": "story", "value": "ATOM Rich_address(Top-100) Balances Check!"}, {"name": "feature", "value": "Accounts Balances!"}, {"name": "parentSuite", "value": "Testcase.Test_Top_Holders_Check.Test_obaccount_holder.py"}, {"name": "suite", "value": "test_ob_account_ATOM"}, {"name": "subSuite", "value": "Test_accounts_balances"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "8503-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Top_Holders_Check.Test_obaccount_holder.py.test_ob_account_ATOM"}]}