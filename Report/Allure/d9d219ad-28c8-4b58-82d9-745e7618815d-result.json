{"name": "MATIC custodail账户 SWAP:MATIC-USDC", "status": "failed", "statusDetails": {"message": "AssertionError: assert Decimal('0.085423668556938706') == Decimal('0.1')", "trace": "self = <test_success.Test_transfers_success object at 0x10ca6a100>, test_title = 'MATIC custodail账户 SWAP:MATIC-USDC'\nnetworkCode = 'MATIC', address = '0x651a23f7bed98b52c7829ad668a4836c48064850', from_coin = 'MATIC', to_coin = 'USDC'\nslippage = '1', fromamount = '0.00012'\n\n    @allure.story(\"Custodial Swap Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,address,from_coin,to_coin,slippage,fromamount', test_data)\n    def test_custodial(self,test_title,networkCode,address,from_coin,to_coin,slippage,fromamount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,address,from_coin)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=from_coin,address=address)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"swap\",\n                \"body\":{\n                    \"address\":address,\n                    \"from\":from_coin,\n                    \"to\":to_coin,\n                    \"fromAmount\":fromamount,\n                    \"slippage\":slippage\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"SIGNED\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n    \n        with allure.step(\"广播交易\"):\n            send = Http.HttpUtils.send(id)\n            assert send.status_code == 200\n            assert send.json()[\"statusDesc\"] == \"PENDING\"\n    \n        with allure.step(\"通过id查询交易记录\"):\n            sleep(30)\n            for n in range(10):\n                transaction = Http.HttpUtils.transactions_byid(id)\n                assert transaction.status_code == 200\n                statusDesc = transaction.json()[\"statusDesc\"]\n                if statusDesc == \"SETTLED\" and len(transaction.json()[\"balanceChanges\"]) > 0:\n                    break\n                else:\n                    sleep(30)\n            sleep(5)\n    \n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,address,from_coin)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=from_coin,address=address)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n>           assert balance == quantity\nE           AssertionError: assert Decimal('0.085423668556938706') == Decimal('0.1')\n\nTestcase/Test_Cloud/Test_Swap/Test_Custodial/test_success.py:103: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1673406430879, "stop": 1673406432239}, {"name": "查询from账户holder信息", "status": "passed", "start": 1673406432239, "stop": 1673406432650}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1673406432651, "stop": 1673406432651}, {"name": "构建交易——instructions", "status": "passed", "start": 1673406432651, "stop": 1673406438299}, {"name": "广播交易", "status": "passed", "start": 1673406438299, "stop": 1673406440743}, {"name": "通过id查询交易记录", "status": "passed", "start": 1673406440743, "stop": 1673406779711}, {"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1673406779718, "stop": 1673406781000}, {"name": "查询from账户holder信息", "status": "passed", "start": 1673406781000, "stop": 1673406781374}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "failed", "statusDetails": {"message": "AssertionError: assert Decimal('0.085423668556938706') == Decimal('0.1')\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Swap/Test_Custodial/test_success.py\", line 103, in test_custodial\n    assert balance == quantity\n"}, "start": 1673406781377, "stop": 1673406781387}], "attachments": [{"name": "log", "source": "573c1d53-70b8-4f9a-9d19-01930d574a23-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'MATIC custodail账户 SWAP:MATIC-USDC'"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "address", "value": "'0x651a23f7bed98b52c7829ad668a4836c48064850'"}, {"name": "from_coin", "value": "'MATIC'"}, {"name": "to_coin", "value": "'USDC'"}, {"name": "slippage", "value": "'1'"}, {"name": "fromamount", "value": "'0.00012'"}], "start": 1673406430878, "stop": 1673406781399, "uuid": "722364b7-af11-4603-a2ef-16704ddbb4db", "historyId": "91f972ffb3349faa45dc9a1f1fcd4dec", "testCaseId": "2fbdefc899c48804f78f2c40b938c36c", "fullName": "Testcase.Test_Cloud.Test_Swap.Test_Custodial.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Swap Success!"}, {"name": "story", "value": "Custodial Swap Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Swap.Test_Custodial"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "31340-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Swap.Test_Custodial.test_success"}]}