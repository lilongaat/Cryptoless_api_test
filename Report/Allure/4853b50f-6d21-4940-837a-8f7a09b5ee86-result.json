{"name": "网络不支持质押", "status": "broken", "statusDetails": {"message": "UnboundLocalError: local variable 'tokenaddress' referenced before assignment", "trace": "self = <test_stake_custodial_fail.Test_stake_success object at 0x10a8ab2e0>, test_title = '网络不支持质押'\nnetworkCode = 'GOERLI', symbol = 'GOERLI', type = 'stake', address = '0xcc7a54ec1d39d1cf7b35f2b3b92031ad5fc7b6ca'\namount = '0.0000001'\n\n    @allure.story(\"Custodial Stake Fail!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,type,address,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,type,address,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n>           balance = Httpexplore.Balances_explore.query(networkCode,address,symbol)\n\nTestcase/Test_Cloud/Test_Stake/Test_Custodial/test_stake_custodial_fail.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nnetworkCode = 'GOERLI', address = '0xcc7a54ec1d39d1cf7b35f2b3b92031ad5fc7b6ca', symbol = 'GOERLI'\n\n    @staticmethod\n    def query(networkCode:str, address:str, symbol=\"USDC\"):\n        if networkCode == \"BTC\":\n            if env_type == 0:\n                response = BTC_Test.balance(address)\n                if response.status_code == 200:\n                    balance = (Decimal(response.json()[\"chain_stats\"][\"funded_txo_sum\"]) - Decimal(response.json()[\"chain_stats\"][\"spent_txo_sum\"]))/Decimal(10**8)\n                else:\n                    balance = None\n            elif env_type == 1:\n                response = BTC.balance(address)\n                if response.status_code == 200:\n                    balance = (Decimal(response.json()[\"chain_stats\"][\"funded_txo_sum\"]) - Decimal(response.json()[\"chain_stats\"][\"spent_txo_sum\"]))/Decimal(10**8)\n        elif networkCode == \"DOGE\":\n            response = DOGE.balance(address)\n            assert response.status_code == 200\n            balance = Decimal(str(response.json()))\n        elif networkCode == \"ETH\":\n            pass\n        elif networkCode == \"GOERLI\":\n            if symbol == \"GoerliETH\":\n                response = GOERLI.balance(address)\n                assert response.status_code == 200\n                balance = Decimal(str(response.json()[\"result\"]))/Decimal(10**18)\n            else:\n                if symbol == \"USDCC\":\n                    tokenaddress = \"0x1eC2CE6108240118Ff2c66eC8AFAC28618D7e066\"\n>               response = GOERLI.balance_erc20(address,tokenaddress)\nE               UnboundLocalError: local variable 'tokenaddress' referenced before assignment\n\nCommon/Httpexplore.py:544: UnboundLocalError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "broken", "statusDetails": {"message": "UnboundLocalError: local variable 'tokenaddress' referenced before assignment\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Stake/Test_Custodial/test_stake_custodial_fail.py\", line 63, in test_custodial\n    balance = Httpexplore.Balances_explore.query(networkCode,address,symbol)\n  File \"/Users/lilong/Documents/Test_Api/Common/Httpexplore.py\", line 544, in query\n    response = GOERLI.balance_erc20(address,tokenaddress)\n"}, "start": 1675914501282, "stop": 1675914501282}], "parameters": [{"name": "test_title", "value": "'网络不支持质押'"}, {"name": "networkCode", "value": "'GOERLI'"}, {"name": "symbol", "value": "'GOERLI'"}, {"name": "type", "value": "'stake'"}, {"name": "address", "value": "'0xcc7a54ec1d39d1cf7b35f2b3b92031ad5fc7b6ca'"}, {"name": "amount", "value": "'0.0000001'"}], "start": 1675914501282, "stop": 1675914501285, "uuid": "276ac5f2-823a-41af-aa46-afc3e42b9aa0", "historyId": "e3e5933a114f26d2b4a11a9e19486263", "testCaseId": "ac4e75e203c8633f0adfd84543a62515", "fullName": "Testcase.Test_Cloud.Test_Stake.Test_Custodial.test_stake_custodial_fail.Test_stake_success#test_custodial", "labels": [{"name": "story", "value": "Custodial Stake Fail!"}, {"name": "feature", "value": "Stake!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Stake.Test_Custodial"}, {"name": "suite", "value": "test_stake_custodial_fail"}, {"name": "subSuite", "value": "Test_stake_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "5970-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Stake.Test_Custodial.test_stake_custodial_fail"}]}