{"name": "IRIS 解除质押", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_success.Test_transfers_success object at 0x110429460>, test_title = 'IRIS 解除质押', networkCode = 'IRIS'\nsymbol = 'IRIS', type = 'un_stake', privatekey = 'd10003ebe2876bd53bf2bb2200eb873a089520a3395b63a4f04330c00e9a885b'\naddress = 'iaa1ed68xf6453t7u4ttsmphdrwqflx2l90e6ymuaq', amount = '0.0012'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,type,privatekey,address,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,type,privatekey,address,amount):\n    \n        with allure.step(\"core查询账户holder信息\"):\n            holder = Httpcore.HttpCoreUtils.holder(networkCode=networkCode,symbol=symbol,address=address)\n            assert holder.status_code ==200\n            quantity = holder.json()[\"list\"][0][\"quantity\"]\n    \n        with allure.step(\"core查询账户质押信息\"):\n            delegated = Httpcore.HttpCoreUtils.core_delegators(networkCode,address)\n            assert delegated.status_code ==200\n            delegated = delegated.json()[0][\"staked\"]\n    \n        with allure.step(\"core构建交易——stake\"):\n            if type == \"stake\" or type == \"un_stake\":\n                body_ = {\n                    \"delegator\":address,\n                    \"coinSymbol\":symbol,\n                    \"amount\":amount\n                }\n            elif type == \"claim\":\n                body_ = {\n                    \"delegator\":address,\n                    \"coinSymbol\":symbol\n                }\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":type,\n                \"body\":body_\n            }\n            transfer = Httpcore.HttpCoreUtils.core_instructions(body)\n>           assert transfer.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcasecore/Test_Instructions/Test_Stake/Test_Owner/test_success.py:68: AssertionError"}, "steps": [{"name": "core查询账户holder信息", "status": "passed", "start": 1671696429854, "stop": 1671696430164}, {"name": "core查询账户质押信息", "status": "passed", "start": 1671696430164, "stop": 1671696430579}, {"name": "core构建交易——stake", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcasecore/Test_Instructions/Test_Stake/Test_Owner/test_success.py\", line 68, in test_custodial\n    assert transfer.status_code == 200\n"}, "start": 1671696430579, "stop": 1671696431085}], "attachments": [{"name": "log", "source": "92cce5a5-2b6d-464b-b4a5-958a1f75dc51-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'IRIS 解除质押'"}, {"name": "networkCode", "value": "'IRIS'"}, {"name": "symbol", "value": "'IRIS'"}, {"name": "type", "value": "'un_stake'"}, {"name": "privatekey", "value": "'d10003ebe2876bd53bf2bb2200eb873a089520a3395b63a4f04330c00e9a885b'"}, {"name": "address", "value": "'iaa1ed68xf6453t7u4ttsmphdrwqflx2l90e6ymuaq'"}, {"name": "amount", "value": "'0.0012'"}], "start": 1671696429854, "stop": 1671696431086, "uuid": "f831485a-bbce-4415-8c6f-b4d2ef8f1c5f", "historyId": "744fe4c4cbc6bf7d2965ae8b2b87f5fa", "testCaseId": "c672c8938bfcf3bee33d8425c296ccc6", "fullName": "Testcasecore.Test_Instructions.Test_Stake.Test_Owner.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "story", "value": "Custodial Transfers Success!"}, {"name": "feature", "value": "Transfers Success!"}, {"name": "parentSuite", "value": "Testcasecore.Test_Instructions.Test_Stake.Test_Owner"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "1296-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcasecore.Test_Instructions.Test_Stake.Test_Owner.test_success"}]}