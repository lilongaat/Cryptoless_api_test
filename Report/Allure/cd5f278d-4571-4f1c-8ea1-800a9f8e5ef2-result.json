{"name": "payer_relay 自付激活账户", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_active_success.Test_create_safe_account_payer object at 0x111464a00>, test_title = 'payer_relay 自付激活账户'\naddress = '0xbb80978baa828a7296a5ae45f7d77a02ff5bcd72'\npayer_prv = 'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da', payer_pub = ''\n\n    @allure.story(\"Create Safe Account Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,address,payer_prv,payer_pub', test_data)\n    def test_create_account_safe(self, test_title,address,payer_prv,payer_pub):\n    \n        with allure.step(\"账户根据地址查询id\"):\n            acc = Http.HttpUtils.accounts(address=address)\n            assert acc.status_code == 200\n            id_acc = acc.json()[\"list\"][0][\"id\"]\n    \n    \n        with allure.step(\"payer创建激活安全账户交易\"):\n            activation_safe_account = Http.HttpUtils.activation_safe_account(id_acc,payer_pub)\n            assert activation_safe_account.status_code == 200\n    \n        if len(payer_prv) == 0:\n            pass\n        else:\n            with allure.step(\"payer签名交易\"):\n                id = activation_safe_account.json()[\"id\"]\n                hash = activation_safe_account.json()[\"requiredSignings\"][0][\"hash\"]\n                publickey = activation_safe_account.json()[\"requiredSignings\"][0][\"publicKeys\"][0]\n                signatures = {\n                        \"hash\":hash,\n                        \"publicKey\":publickey,\n                        \"signature\":Conf.Config.sign(payer_prv,hash)\n    \n                    }\n    \n                sign1 = Http.HttpUtils.sign(id,signatures)\n>               assert sign1.status_code == 200\nE               assert 400 == 200\nE                +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Account/Test_Safe_Account/test_active_success.py:57: AssertionError"}, "steps": [{"name": "账户根据地址查询id", "status": "passed", "start": 1672370724929, "stop": 1672370725317}, {"name": "payer创建激活安全账户交易", "status": "passed", "start": 1672370725318, "stop": 1672370730133}, {"name": "payer签名交易", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Account/Test_Safe_Account/test_active_success.py\", line 57, in test_create_account_safe\n    assert sign1.status_code == 200\n"}, "start": 1672370730133, "stop": 1672370734426}], "attachments": [{"name": "log", "source": "cf8a857d-5a67-4790-b51a-e5a945261a49-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'payer_relay 自付激活账户'"}, {"name": "address", "value": "'0xbb80978baa828a7296a5ae45f7d77a02ff5bcd72'"}, {"name": "payer_prv", "value": "'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'"}, {"name": "payer_pub", "value": "''"}], "start": 1672370724928, "stop": 1672370734427, "uuid": "053b0fc1-c6b7-4e15-b044-197b9b3bfb7f", "historyId": "acff5d1490a54ca5fcdbf1f1a0a86974", "testCaseId": "02b93707040497592794f4f20c71079c", "fullName": "Testcase.Test_Account.Test_Safe_Account.test_active_success.Test_create_safe_account_payer#test_create_account_safe", "labels": [{"name": "feature", "value": "Create Safe Account!"}, {"name": "story", "value": "Create Safe Account Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Account.Test_Safe_Account"}, {"name": "suite", "value": "test_active_success"}, {"name": "subSuite", "value": "Test_create_safe_account_payer"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "12039-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Account.Test_Safe_Account.test_active_success"}]}