{"name": "External账户Goerli转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <test_success_sc.Test_transfers_success object at 0x1123a4c70>, test_title = 'External账户Goerli转账'\nprivatekey = ['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'], networkCode = 'GOERLI', symbol = 'goerliETH'\nfrom_add = '0xe525E7cd17f6Dc950492755A089E452fd5d9d44f', to_add = '0x2B0EfCF16EC1E4C5eD82dBB4Fce9B4811485e650', amount = '2.447'\n\n    @allure.story(\"External_Transfers_Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,privatekey,networkCode,symbol,from_add,to_add,amount', test_data)\n    def test_external(self,test_title,privatekey,networkCode,symbol,from_add,to_add,amount):\n    \n        with allure.step(\"查询From账户holders信息——holders\"):\n            holders = Http.HttpUtils.get_holders(networkCode,symbol,from_add)\n            assert holders.status_code == 200\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"from\":from_add,\n                \"to\":to_add,\n                \"symbol\":symbol,\n                \"amount\":amount\n            }\n            transactionParams = {\n                \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n            }\n            transfer = Http.HttpUtils.instructions(\"transfer\",body,networkCode,[],transactionParams)\n    \n>           assert transfer.status_code == 200\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\nTestcase/Test_Instructions/Test_Transfer/Test_External/test_success_sc.py:69: AssertionError"}, "steps": [{"name": "查询From账户holders信息——holders", "status": "passed", "start": 1666853734125, "stop": 1666853734467}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions/Test_Transfer/Test_External/test_success_sc.py\", line 69, in test_external\n    assert transfer.status_code == 200\n"}, "start": 1666853734467, "stop": 1666853734844}], "attachments": [{"name": "log", "source": "97c68b53-2369-4fab-a86d-0cc67f74279c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'External账户Goerli转账'"}, {"name": "privatekey", "value": "['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da']"}, {"name": "networkCode", "value": "'GOERLI'"}, {"name": "symbol", "value": "'goerliETH'"}, {"name": "from_add", "value": "'0xe525E7cd17f6Dc950492755A089E452fd5d9d44f'"}, {"name": "to_add", "value": "'0x2B0EfCF16EC1E4C5eD82dBB4Fce9B4811485e650'"}, {"name": "amount", "value": "'2.447'"}], "start": 1666853734124, "stop": 1666853734845, "uuid": "e365b43d-d576-409b-b40d-d0e1a7523d95", "historyId": "bbc9c637e55cdcebeae2a0933f866ba4", "testCaseId": "5c8836d9e995bafea54f764b918426cd", "fullName": "Testcase.Test_Instructions.Test_Transfer.Test_External.test_success_sc.Test_transfers_success#test_external", "labels": [{"name": "story", "value": "External_Transfers_Success!"}, {"name": "feature", "value": "Transfers_Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions.Test_Transfer.Test_External"}, {"name": "suite", "value": "test_success_sc"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "40577-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions.Test_Transfer.Test_External.test_success_sc"}]}