{"name": "BTC多签账户账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_multisig_success.Test_transfer_success object at 0x10b564f10>, test_title = 'BTC多签账户账户转账'\nprivatekey = ['b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe']\npublickey = ['02e8852463021b47fe5214c599e87e431f2eb1219044946bbff397afd0518b85a6'], networkCode = 'BTC'\nfromaddress = 'tb1qxrunvz3ywjtpzaasfgjjek96a33sxks740v58x7lzke0kc9urvgs0cczgd'\ntoaddress = ['tb1q0558s53xchyghw34tqm4x8t2n8swf666nvhffq'], value = ['100']\n\n    @allure.story(\"Transfer Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,privatekey,publickey,networkCode,fromaddress,toaddress,value', test_data)\n    def test_custodial(self,test_title,privatekey,publickey,networkCode,fromaddress,toaddress,value):\n    \n        with allure.step(\"查询地址UTXO\"):\n            utxo = Httpcore.HttpCoreUtils.query_utxo(networkCode,fromaddress)\n            assert utxo.status_code == 200\n            utxos = []\n            for i in range(len(utxo.json())):\n                utxo_ = {\n                    \"amount\": utxo.json()[i][\"value\"],\n                    \"witnessScript\": Conf.Config.witnessScript([\"0231e263a7e95bf5107b88b85b49918841b937305cce5dae7dd7ba9b86fc460f70\",\"02e8852463021b47fe5214c599e87e431f2eb1219044946bbff397afd0518b85a6\"]),\n                    \"signers\":publickey,\n                    \"txid\": utxo.json()[i][\"mintTxid\"],\n                    \"vout\": utxo.json()[i][\"mintIndex\"],\n                }\n                utxos.append(utxo_)\n    \n        with allure.step(\"构建交易\"):\n            recipients = []\n            for i in range(len(toaddress)):\n                recipient = {\n                    \"address\": toaddress[i],\n                    \"value\": value[i]\n                }\n                recipients.append(recipient)\n            body = {\n                    \"networkCode\": networkCode,\n                    \"payload\": {\n                        \"changer\": fromaddress,\n                        \"recipients\": recipients,\n                        \"utxos\": utxos\n                    },\n                    \"type\": \"TRANSACTION\"\n                }\n    \n            ts = Http.HttpUtils.transactions(body)\n            assert ts.status_code == 200\n            id = ts.json()[\"id\"]\n            requiredSignings = ts.json()[\"requiredSignings\"]\n    \n            signatures = []\n            for i in range(len(requiredSignings)):\n                hash = requiredSignings[i][\"hash\"]\n                for j in range(len(requiredSignings[i][\"publicKeys\"])):\n                    signature = {\n                        \"hash\":hash,\n                        \"publicKey\":requiredSignings[i][\"publicKeys\"][j],\n                        \"signature\":Conf.Config.sign(privatekey[j],hash)\n    \n                    }\n                    signatures.append(signature)\n    \n        with allure.step(\"Sign交易\"):\n            sign = Http.HttpUtils.sign(id,signatures)\n>           assert sign.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Instructions_new/Test_Transactions/Test_Safe/Test_BTC/test_multisig_success.py:85: AssertionError"}, "steps": [{"name": "查询地址UTXO", "status": "passed", "start": 1670920046564, "stop": 1670920047382}, {"name": "构建交易", "status": "passed", "start": 1670920047382, "stop": 1670920047648}, {"name": "Sign交易", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions_new/Test_Transactions/Test_Safe/Test_BTC/test_multisig_success.py\", line 85, in test_custodial\n    assert sign.status_code == 200\n"}, "start": 1670920047648, "stop": 1670920047839}], "attachments": [{"name": "log", "source": "827f8ca2-4d61-4d36-be22-d63d61e15a21-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'BTC多签账户账户转账'"}, {"name": "privatekey", "value": "['b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe']"}, {"name": "publickey", "value": "['02e8852463021b47fe5214c599e87e431f2eb1219044946bbff397afd0518b85a6']"}, {"name": "networkCode", "value": "'BTC'"}, {"name": "fromaddress", "value": "'tb1qxrunvz3ywjtpzaasfgjjek96a33sxks740v58x7lzke0kc9urvgs0cczgd'"}, {"name": "toaddress", "value": "['tb1q0558s53xchyghw34tqm4x8t2n8swf666nvhffq']"}, {"name": "value", "value": "['100']"}], "start": 1670920046564, "stop": 1670920047840, "uuid": "84ce254c-b4d1-43ee-8f1d-56c7eb7e59e6", "historyId": "813acd76984243bcb6aeeee01f104fe9", "testCaseId": "a8f611565a745f8d5d8107755432ad71", "fullName": "Testcase.Test_Instructions_new.Test_Transactions.Test_Safe.Test_BTC.test_multisig_success.Test_transfer_success#test_custodial", "labels": [{"name": "story", "value": "Transfer Success!"}, {"name": "feature", "value": "Transfer Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions_new.Test_Transactions.Test_Safe.Test_BTC"}, {"name": "suite", "value": "test_multisig_success"}, {"name": "subSuite", "value": "Test_transfer_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "16206-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions_new.Test_Transactions.Test_Safe.Test_BTC.test_multisig_success"}]}