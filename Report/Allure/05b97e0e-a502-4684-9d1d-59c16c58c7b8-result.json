{"name": "GOERLI Custodial账户转账 erc20coin", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_success.Test_transfers_success object at 0x102a65cd0>, test_title = 'GOERLI Custodial账户转账 erc20coin'\nnetworkCode = 'GOERLI', symbol = 'USDCC', from_add = '0xcc7a54ec1d39d1cf7b35f2b3b92031ad5fc7b6ca'\nto_add = '0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2', amount = '1000000'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,from_add,to_add,amount):\n    \n        with allure.step(\"查询账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = holder.json()[\"list\"][0][\"quantity\"]\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n>           assert transfer.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Instructions/Test_Custodial/test_success.py:57: AssertionError"}, "steps": [{"name": "查询账户holder信息", "status": "passed", "start": 1670987310088, "stop": 1670987310303}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Instructions/Test_Custodial/test_success.py\", line 57, in test_custodial\n    assert transfer.status_code == 200\n"}, "start": 1670987310303, "stop": 1670987310734}], "attachments": [{"name": "log", "source": "7f5a71cc-182b-4b15-8f70-9c3d2b9d9475-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'GOERLI Custodial账户转账 erc20coin'"}, {"name": "networkCode", "value": "'GOERLI'"}, {"name": "symbol", "value": "'USDCC'"}, {"name": "from_add", "value": "'0xcc7a54ec1d39d1cf7b35f2b3b92031ad5fc7b6ca'"}, {"name": "to_add", "value": "'0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2'"}, {"name": "amount", "value": "'1000000'"}], "start": 1670987310088, "stop": 1670987310734, "uuid": "dcabd41c-8e39-43d5-a2ef-8f8e1215854d", "historyId": "a777c0428ee80a4eb5b5a3e6fa7414ff", "testCaseId": "78478b54bc242ec6fd12850950e1add6", "fullName": "Testcase.Test_Cloud.Test_Instructions.Test_Custodial.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Instructions.Test_Custodial"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "18556-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Instructions.Test_Custodial.test_success"}]}