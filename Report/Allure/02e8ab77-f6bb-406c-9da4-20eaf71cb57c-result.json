{"name": "BTC普通账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_success.Test_transfer_success object at 0x1104bea60>, test_title = 'BTC普通账户转账'\nprivatekey = ['b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe'], networkCode = 'BTC'\nfromaddress = 'tb1qhcuul2fcyv5rvr5mc5cy5saz0q5p3kx0gsy3c0', toaddress = 'tb1qhcuul2fcyv5rvr5mc5cy5saz0q5p3kx0gsy3c0', value = '100'\n\n    @allure.story(\"Transfer Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,privatekey,networkCode,fromaddress,toaddress,value', test_data)\n    def test_custodial(self,test_title,privatekey,networkCode,fromaddress,toaddress,value):\n    \n        with allure.step(\"查询地址UTXO\"):\n            utxo = Httpcore.HttpCoreUtils.query_utxo(networkCode,fromaddress)\n            assert utxo.status_code == 200\n            utxos = []\n            for i in range(len(utxo.json())):\n                utxo_ = {\n                    \"amount\": utxo.json()[i][\"value\"],\n                    \"txid\": utxo.json()[i][\"mintTxid\"],\n                    \"vout\": utxo.json()[i][\"mintIndex\"],\n                }\n                utxos.append(utxo_)\n            logger.error(utxos)\n    \n        with allure.step(\"Build交易\"):\n            body = {\n                    \"networkCode\": networkCode,\n                    \"payload\": {\n                        \"changer\": fromaddress,\n                        \"recipients\": [\n                            {\n                                \"address\": toaddress,\n                                \"value\": value\n                            }\n                        ],\n                        \"utxos\": utxos\n                    },\n                    \"type\": \"TRANSACTION\"\n                }\n    \n            ts = Httpcore.HttpCoreUtils.core_build(body)\n>           assert ts.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcasecore/Test_Transactions/Test_Transfer/Test_Transfer_BTC/test_success.py:63: AssertionError"}, "steps": [{"name": "查询地址UTXO", "status": "passed", "start": 1669947818070, "stop": 1669947821304}, {"name": "Build交易", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcasecore/Test_Transactions/Test_Transfer/Test_Transfer_BTC/test_success.py\", line 63, in test_custodial\n    assert ts.status_code == 200\n"}, "start": 1669947821304, "stop": 1669947823717}], "attachments": [{"name": "log", "source": "fdf8c333-af30-44cf-a3b9-fdb24caa1733-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'BTC普通账户转账'"}, {"name": "privatekey", "value": "['b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe']"}, {"name": "networkCode", "value": "'BTC'"}, {"name": "fromaddress", "value": "'tb1qhcuul2fcyv5rvr5mc5cy5saz0q5p3kx0gsy3c0'"}, {"name": "toaddress", "value": "'tb1qhcuul2fcyv5rvr5mc5cy5saz0q5p3kx0gsy3c0'"}, {"name": "value", "value": "'100'"}], "start": 1669947818070, "stop": 1669947823717, "uuid": "5c0dbab6-f2a4-467a-9b6f-30e4c019517c", "historyId": "df7a9ec3a68d9348ec991e3f399c784f", "testCaseId": "492d3f1d90543904ec0223cce54ea25b", "fullName": "Testcasecore.Test_Transactions.Test_Transfer.Test_Transfer_BTC.test_success.Test_transfer_success#test_custodial", "labels": [{"name": "story", "value": "Transfer Success!"}, {"name": "feature", "value": "Transfer Success!"}, {"name": "parentSuite", "value": "Testcasecore.Test_Transactions.Test_Transfer.Test_Transfer_BTC"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfer_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "51260-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcasecore.Test_Transactions.Test_Transfer.Test_Transfer_BTC.test_success"}]}