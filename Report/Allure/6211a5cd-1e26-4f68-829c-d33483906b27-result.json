{"name": "MATIC SWAP:MATIC-USDC", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_success.Test_transfers_success object at 0x110a95b50>, test_title = 'MATIC SWAP:MATIC-USDC'\nprivatekey = 'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'\naddress = '0xe525E7cd17f6Dc950492755A089E452fd5d9d44f', networkCode = 'MATIC', from_coin = 'USDC'\ntoCrossChainAddress = '0x3d7f18ad2cea9b59e54dfaf09b327c1ccd899591', toNetworkCode = 'BSC', to_coin = 'USDT'\nslippage = '1', fromamount = '0.000012'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,privatekey,address,networkCode,from_coin,toCrossChainAddress,toNetworkCode,to_coin,slippage,fromamount', test_data)\n    def test_custodial(self,test_title,privatekey,address,networkCode,from_coin,toCrossChainAddress,toNetworkCode,to_coin,slippage,fromamount):\n    \n        with allure.step(\"查询账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=from_coin,address=address)\n            assert holder.status_code ==200\n            quantity = holder.json()[\"list\"][0][\"quantity\"]\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"CROSS_CHAIN\",\n                \"body\":{\n                    \"address\":address,\n                    \"from\":from_coin,\n                    \"to\":to_coin,\n                    \"amount\":fromamount,\n                    \"toNetworkCode\":toNetworkCode,\n                    \"toCrossChainAddress\":toCrossChainAddress,\n                    \"slippage\":slippage\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n>           assert transfer.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Cross_Chain/Test_External/test_success.py:56: AssertionError"}, "steps": [{"name": "查询账户holder信息", "status": "passed", "start": 1672220861030, "stop": 1672220861445}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Cross_Chain/Test_External/test_success.py\", line 56, in test_custodial\n    assert transfer.status_code == 200\n"}, "start": 1672220861445, "stop": 1672220861927}], "attachments": [{"name": "log", "source": "56cbf760-ba6e-4f78-ba62-6456dcec37c3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'MATIC SWAP:MATIC-USDC'"}, {"name": "privatekey", "value": "'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'"}, {"name": "address", "value": "'0xe525E7cd17f6Dc950492755A089E452fd5d9d44f'"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "from_coin", "value": "'USDC'"}, {"name": "toCrossChainAddress", "value": "'0x3d7f18ad2cea9b59e54dfaf09b327c1ccd899591'"}, {"name": "toNetworkCode", "value": "'BSC'"}, {"name": "to_coin", "value": "'USDT'"}, {"name": "slippage", "value": "'1'"}, {"name": "fromamount", "value": "'0.000012'"}], "start": 1672220861029, "stop": 1672220861928, "uuid": "d5c88497-9eb6-47b9-b486-8420be5a79c0", "historyId": "8094fd5f509d7e615865e29c0f10a5fd", "testCaseId": "58b84f37c4a31bc5a3d92322a9ed6b92", "fullName": "Testcase.Test_Cloud.Test_Cross_Chain.Test_External.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Cross_Chain.Test_External"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "6289-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Cross_Chain.Test_External.test_success"}]}