{"name": "CLV 3-4shared账户转账", "status": "broken", "statusDetails": {"message": "Exception: 请求异常", "trace": "self = <test_success.Test_transfers_success object at 0x10c932400>, test_title = 'CLV 3-4shared账户转账'\nnetworkCode = 'CLV', symbol = 'CLV'\nprivatekey = ['7967c43bd3f3874ccfa6ff6ceda5faa8c699ad0fe2be33f44c8bb8abcb23a2fd', '7cc57c9ab4d60f6991dd32827927266c90a7c165db6c71ea344c86a05e582b68', 'b7eb71a716e21bbc82bce03318c386cacb64b2b8eab0b341749b4aed92fc5136']\nfrom_add = '5DyVmFJSPXRu4Ufv1Q46y1w7MejCpS5VrLvJwXKNMppzg9Nk'\nto_add = '5HWsR2E9YLKqfz6ybMufU5t1qyjUMzmBwFjppsaEwZHegViT', amount = '0.0000161'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"BUILDING\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n            requiredSignings = transfer.json()[\"_embedded\"][\"transactions\"][0][\"requiredSignings\"]\n            signatures = []\n            for i in range(len(requiredSignings)):\n                hash = requiredSignings[i][\"hash\"]\n                publickeys = requiredSignings[i][\"publicKeys\"]\n                threshold = requiredSignings[i][\"threshold\"]\n                for j in range(threshold):\n                    signature = {\n                        \"hash\":hash,\n                        \"publicKey\":publickeys[j],\n                        \"signature\":Conf.Config.sign(privatekey[j],hash)\n    \n                    }\n                    signatures.append(signature)\n    \n        with allure.step(\"签名交易\"):\n            sign  =Http.HttpUtils.sign(id,signatures)\n            assert sign.status_code == 200\n    \n        with allure.step(\"广播交易\"):\n            send = Http.HttpUtils.send(id)\n            assert send.status_code == 200\n            assert send.json()[\"statusDesc\"] == \"PENDING\"\n    \n            hash = send.json()[\"hash\"]\n    \n        # logger.error(\"\\n\\n\"+networkCode+\"--\"+symbol+\"--\"+test_title+\"\\n\"+from_add+\"--\"+quantity+\"\\n\"+hash+\"\\n\\n\")\n    \n        with allure.step(\"通过id查询交易记录\"):\n            sleep(30)\n            for n in range(10):\n>               transaction = Http.HttpUtils.transactions_byid(id)\n\nTestcase/Test_Cloud/Test_Transfer/Test_Share/test_success.py:117: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nid = '1611631375529738242'\nAuthorization = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNjAxMDQzOTMwMjg3NDExMjAyIiwiZXhwIjoxNzAyMDg5NjAwLCJpYXQiOjE2NzA1NTM2MDAsInVzZXJJZCI6MTYwMTA0MzkzMDI4NzQxMTIwMn0.fZVc267JNsgy5tB_Wn89l2Zgd3ZgXJfaMg_T9lc3j-o'\n\n    @staticmethod\n    def transactions_byid(id:str, Authorization=token):\n        url = url_ + '/vault/transactions/' + id\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": Authorization\n        }\n    \n        logger.info('\\n'+\"<-----Query Transactions byid----->\"+\"\\n\"+\"Url:\"+url+'\\n\\n'+'Headers:'+json.dumps(headers))\n        res = requests.get(url=url, headers=headers, timeout=timeout_)\n        if res.status_code == 200:\n            logger.info('\\n'+\"<-----Query Transactions Response----->\"+\"\\n\"+(res.text))\n            return res\n        else:\n            logger.error('\\n'+'<-----Query Transactions Response Error----->'+(res.text))\n>           raise Exception(\"请求异常\")\nE           Exception: 请求异常\n\nCommon/Http.py:487: Exception"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1673077833994, "stop": 1673077834416}, {"name": "查询from账户holder信息", "status": "passed", "start": 1673077834416, "stop": 1673077834952}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1673077834953, "stop": 1673077834953}, {"name": "构建交易——instructions", "status": "passed", "start": 1673077834953, "stop": 1673077840828}, {"name": "签名交易", "status": "passed", "start": 1673077840828, "stop": 1673077841362}, {"name": "广播交易", "status": "passed", "start": 1673077841362, "stop": 1673077841791}, {"name": "通过id查询交易记录", "status": "broken", "statusDetails": {"message": "Exception: 请求异常\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_Share/test_success.py\", line 117, in test_custodial\n    transaction = Http.HttpUtils.transactions_byid(id)\n  File \"/Users/lilong/Documents/Test_Api/Common/Http.py\", line 487, in transactions_byid\n    raise Exception(\"请求异常\")\n"}, "start": 1673077841791, "stop": 1673077963264}], "attachments": [{"name": "log", "source": "665e7e0a-37d2-419d-9962-f2bff2319acd-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'CLV 3-4shared账户转账'"}, {"name": "networkCode", "value": "'CLV'"}, {"name": "symbol", "value": "'CLV'"}, {"name": "privatekey", "value": "['7967c43bd3f3874ccfa6ff6ceda5faa8c699ad0fe2be33f44c8bb8abcb23a2fd', '7cc57c9ab4d60f6991dd32827927266c90a7c165db6c71ea344c86a05e582b68', 'b7eb71a716e21bbc82bce03318c386cacb64b2b8eab0b341749b4aed92fc5136']"}, {"name": "from_add", "value": "'5DyVmFJSPXRu4Ufv1Q46y1w7MejCpS5VrLvJwXKNMppzg9Nk'"}, {"name": "to_add", "value": "'5HWsR2E9YLKqfz6ybMufU5t1qyjUMzmBwFjppsaEwZHegViT'"}, {"name": "amount", "value": "'0.0000161'"}], "start": 1673077833994, "stop": 1673077963269, "uuid": "8db95f94-6f84-432a-a64b-ce074c7b419c", "historyId": "211a9d2581f344598f1fc0b9fe02ce17", "testCaseId": "f280abede794e675248cc33ca19ba7e5", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_Share.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "story", "value": "Custodial Transfers Success!"}, {"name": "feature", "value": "Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Share"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "19621-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Share.test_success"}]}