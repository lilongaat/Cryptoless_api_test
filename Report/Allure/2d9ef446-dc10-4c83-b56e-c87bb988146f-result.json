{"name": "BTC Custodial账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_success.Test_transfers_success object at 0x106937820>, test_title = 'BTC Custodial账户转账'\nnetworkCode = 'BTC', symbol = 'BTC', from_add = 'tb1q7ymdm79ryug7vttw4jrf87pdcmn67n3p9rgc5x'\nto_add = 'tb1qagkvxdz2zq76atvr0rzh8n9lewjmlm25umq0xq', amount = '0.000008'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,from_add,to_add,amount):\n    \n        # with allure.step(\"查询账户holder信息\"):\n        #     holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n        #     assert holder.status_code ==200\n        #     quantity = holder.json()[\"list\"][0][\"quantity\"]\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n>           assert transfer.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Instructions/Test_Custodial/test_success.py:63: AssertionError"}, "steps": [{"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Instructions/Test_Custodial/test_success.py\", line 63, in test_custodial\n    assert transfer.status_code == 200\n"}, "start": 1671257578263, "stop": 1671257581975}], "attachments": [{"name": "log", "source": "83ad2162-7604-42fa-ab10-aa68f95ea9d0-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'BTC Custodial账户转账'"}, {"name": "networkCode", "value": "'BTC'"}, {"name": "symbol", "value": "'BTC'"}, {"name": "from_add", "value": "'tb1q7ymdm79ryug7vttw4jrf87pdcmn67n3p9rgc5x'"}, {"name": "to_add", "value": "'tb1qagkvxdz2zq76atvr0rzh8n9lewjmlm25umq0xq'"}, {"name": "amount", "value": "'0.000008'"}], "start": 1671257578263, "stop": 1671257581976, "uuid": "3e031423-de54-43ee-84be-70a8681387c5", "historyId": "ce25cb9d41ae721cc4245eec061837b6", "testCaseId": "78478b54bc242ec6fd12850950e1add6", "fullName": "Testcase.Test_Cloud.Test_Instructions.Test_Custodial.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Instructions.Test_Custodial"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "3054-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Instructions.Test_Custodial.test_success"}]}