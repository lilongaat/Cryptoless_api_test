{"name": "test_price_check[MKR]", "status": "broken", "statusDetails": {"message": "KeyError: 'test_title'", "trace": "self = <allure_pytest.listener.AllureListener object at 0x10d3b99a0>, item = <Function test_price_check[MKR]>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_runtest_setup(self, item):\n        if not self._cache.get(item.nodeid):\n            uuid = self._cache.push(item.nodeid)\n            test_result = TestResult(name=item.name, uuid=uuid, start=now(), stop=now())\n            self.allure_logger.schedule_test(uuid, test_result)\n    \n        yield\n    \n        uuid = self._cache.get(item.nodeid)\n        test_result = self.allure_logger.get_test(uuid)\n        for fixturedef in _test_fixtures(item):\n            group_uuid = self._cache.get(fixturedef)\n            if not group_uuid:\n                group_uuid = self._cache.push(fixturedef)\n                group = TestResultContainer(uuid=group_uuid)\n                self.allure_logger.start_group(group_uuid, group)\n            self.allure_logger.update_group(group_uuid, children=uuid)\n        params = item.callspec.params if hasattr(item, 'callspec') else {}\n    \n>       test_result.name = allure_name(item, params)\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/allure_pytest/listener.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nitem = <Function test_price_check[MKR]>, parameters = {'symbol': 'MKR'}\n\n    def allure_name(item, parameters):\n        name = escape_name(item.name)\n        title = allure_title(item)\n>       return title.format(**{**parameters, **item.funcargs}) if title else name\nE       KeyError: 'test_title'\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/allure_pytest/utils.py:114: KeyError"}, "start": 1673853800904, "stop": 1673853800904, "uuid": "083fa8df-e804-4ea2-af85-3205a81ea482", "labels": [{"name": "story", "value": "prices Height Check!"}, {"name": "feature", "value": "Prices Height!"}, {"name": "parentSuite", "value": "Testcase.Test_NetworkCode.Test_price"}, {"name": "suite", "value": "test_price_check"}, {"name": "subSuite", "value": "Test_price_height_check"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "4821-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_NetworkCode.Test_price.test_price_check"}]}