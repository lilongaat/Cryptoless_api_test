{"name": "BTC extarnal账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_transfer_external_success.Test_transfers_success object at 0x102dbeb80>, test_title = 'BTC extarnal账户转账'\nnetworkCode = 'BTC', symbol = 'BTC', privatekey = 'b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe'\nfrom_add = 'tb1qhcuul2fcyv5rvr5mc5cy5saz0q5p3kx0gsy3c0', to_add = 'tb1qagkvxdz2zq76atvr0rzh8n9lewjmlm25umq0xq'\namount = '0.000008'\n\n    @allure.story(\"External Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"BUILDING\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n            requiredSignings = transfer.json()[\"_embedded\"][\"transactions\"][0][\"requiredSignings\"]\n            signatures = []\n            for i in range(len(requiredSignings)):\n                hash = requiredSignings[i][\"hash\"]\n                publickey = requiredSignings[i][\"publicKeys\"][0]\n                signature = {\n                    \"hash\":hash,\n                    \"publicKey\":publickey,\n                    \"signature\":Conf.Config.sign(privatekey,hash)\n    \n                }\n                signatures.append(signature)\n    \n        with allure.step(\"签名交易\"):\n            sign  =Http.HttpUtils.sign(id,signatures)\n            assert sign.status_code == 200\n    \n        with allure.step(\"广播交易\"):\n            send = Http.HttpUtils.send(id)\n>           assert send.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Transfer/Test_External/test_transfer_external_success.py:130: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1674041485725, "stop": 1674041488219}, {"name": "查询from账户holder信息", "status": "passed", "start": 1674041488219, "stop": 1674041489129}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1674041489129, "stop": 1674041489129}, {"name": "构建交易——instructions", "status": "passed", "start": 1674041489130, "stop": 1674041493135}, {"name": "签名交易", "status": "passed", "start": 1674041493135, "stop": 1674041493647}, {"name": "广播交易", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_External/test_transfer_external_success.py\", line 130, in test_custodial\n    assert send.status_code == 200\n"}, "start": 1674041493647, "stop": 1674041524023}], "attachments": [{"name": "log", "source": "c72462ea-643b-41ec-9b84-d94c67ef8f0e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'BTC extarnal账户转账'"}, {"name": "networkCode", "value": "'BTC'"}, {"name": "symbol", "value": "'BTC'"}, {"name": "privatekey", "value": "'b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe'"}, {"name": "from_add", "value": "'tb1qhcuul2fcyv5rvr5mc5cy5saz0q5p3kx0gsy3c0'"}, {"name": "to_add", "value": "'tb1qagkvxdz2zq76atvr0rzh8n9lewjmlm25umq0xq'"}, {"name": "amount", "value": "'0.000008'"}], "start": 1674041485725, "stop": 1674041524528, "uuid": "f3ed13b7-6c1a-4463-af37-a58c6e44e10b", "historyId": "27f02e668d40a8471c7567f994871819", "testCaseId": "65267c09bc1866ae423928ea307e4d69", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_transfer_external_success.Test_transfers_success#test_custodial", "labels": [{"name": "story", "value": "External Transfers Success!"}, {"name": "feature", "value": "Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External"}, {"name": "suite", "value": "test_transfer_external_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "2264-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_transfer_external_success"}]}