{"name": "IRIS extarnal账户转账", "status": "broken", "statusDetails": {"message": "TypeError: conversion from dict to Decimal is not supported", "trace": "self = <test_success.Test_transfers_success object at 0x105a2ff70>, test_title = 'IRIS extarnal账户转账'\nnetworkCode = 'IRIS', symbol = 'IRIS'\nprivatekey = 'a8cb5ffed23dda8a84d2612b5b7f17a7739b208640a3cc04b1b28cd4239fcd0c'\nfrom_add = 'iaa18j8rds5hqwp88s4qsrytq5w4eafu288cfza9th', to_add = 'iaa15h0lvaa6slvj0hg4d64548j2c5fds2zv8tkvgs'\namount = '0.0001'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            if networkCode == \"BTC\":\n                pass\n            elif networkCode == \"DOGE\":\n                response = Httpexplore.DOGE.balance(from_add)\n                assert response.status_code == 200\n                balance = Decimal(str(response.json()))\n            elif networkCode == \"ETH\":\n                pass\n            elif networkCode == \"BSC\":\n                if symbol == \"BNB\":\n                    response = Httpexplore.BSC.balance(from_add)\n                    assert response.status_code == 200\n                    balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n                else:\n                    response = Httpexplore.BSC.balance_erc20(from_add,\"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\")\n                    assert response.status_code == 200\n                    balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n            elif networkCode == \"MATIC\":\n                if symbol == \"MATIC\":\n                    response = Httpexplore.MATIC.balance(from_add)\n                    assert response.status_code == 200\n                    balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n                else:\n                    response = Httpexplore.MATIC.balance_erc20(from_add,\"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\")\n                    assert response.status_code == 200\n                    balance = Decimal(response.json()[\"result\"])/Decimal(10**6)\n    \n            elif networkCode == \"IRIS\":\n                response = Httpexplore.IRIS.balance(from_add)\n                assert response.status_code == 200\n                balance_detail = [b for b in response.json()[\"balances\"] if b.get(\"denom\") == \"uiris\"][0]\n>               balance = Decimal(balance_detail)/Decimal(10**6)\nE               TypeError: conversion from dict to Decimal is not supported\n\nTestcase/Test_Cloud/Test_Transfer/Test_External/test_success.py:105: TypeError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "broken", "statusDetails": {"message": "TypeError: conversion from dict to Decimal is not supported\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_External/test_success.py\", line 105, in test_custodial\n    balance = Decimal(balance_detail)/Decimal(10**6)\n"}, "start": 1672819314748, "stop": 1672819316002}], "parameters": [{"name": "test_title", "value": "'IRIS extarnal账户转账'"}, {"name": "networkCode", "value": "'IRIS'"}, {"name": "symbol", "value": "'IRIS'"}, {"name": "privatekey", "value": "'a8cb5ffed23dda8a84d2612b5b7f17a7739b208640a3cc04b1b28cd4239fcd0c'"}, {"name": "from_add", "value": "'iaa18j8rds5hqwp88s4qsrytq5w4eafu288cfza9th'"}, {"name": "to_add", "value": "'iaa15h0lvaa6slvj0hg4d64548j2c5fds2zv8tkvgs'"}, {"name": "amount", "value": "'0.0001'"}], "start": 1672819314748, "stop": 1672819316003, "uuid": "f12d9be9-640b-4f68-815c-3c31c5280d94", "historyId": "6a76eb2f408ab575151b8ecaf55d90b2", "testCaseId": "2d895effda5c005c5782d6bc35b24852", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "5503-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_success"}]}