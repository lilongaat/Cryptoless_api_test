{"name": "正常Swap(USDC-MATIC)!", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_success_sc.Test_swap_success object at 0x1065972b0>, test_title = '正常Swap(USDC-MATIC)!', networkCode = 'MATIC'\nfrom_coin = 'USDC', to_coin = 'MATIC', address = '0x343d0b801Fcb032ccEB7D5411cd404816d203B91', slippage = '1', fromAmount = '0.004'\n\n    @allure.story(\"Custodial_Swap_Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,from_coin,to_coin,address,slippage,fromAmount', test_data)\n    def test_custodial(self,test_title,networkCode,from_coin,to_coin,address,slippage,fromAmount):\n    \n        # with allure.step(\"查询账户from_coin holders信息——holder\"):\n        #     from_holder = Http.HttpUtils.get_holders(networkCode,from_coin,address)\n        #     assert from_holder.status_code == 200\n        #     from_holder_before = from_holder.json()[0][\"quantity\"]\n    \n        # with allure.step(\"查询账户to_coin holders信息——holder\"):\n        #     to_holder = Http.HttpUtils.get_holders(networkCode,to_coin,address)\n        #     assert to_holder.status_code == 200\n        #     to_holder_before = to_holder.json()[0][\"quantity\"]\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"from\":from_coin,\n                \"to\":to_coin,\n                \"address\":address,\n                \"fromAmount\":fromAmount,\n                \"slippage\":slippage\n            }\n            transactionParams = {\n                \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n            }\n            swap = Http.HttpUtils.instructions(\"swap\",body,networkCode,[],transactionParams)\n    \n>           assert swap.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Instructions/Test_Swap/Test_Custodial/test_success_sc.py:67: AssertionError"}, "steps": [{"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions/Test_Swap/Test_Custodial/test_success_sc.py\", line 67, in test_custodial\n    assert swap.status_code == 200\n"}, "start": 1668150256346, "stop": 1668150257669}], "attachments": [{"name": "log", "source": "3d9b5fec-fd1b-4ede-9784-1639fe120aa7-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'正常Swap(USDC-MATIC)!'"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "from_coin", "value": "'USDC'"}, {"name": "to_coin", "value": "'MATIC'"}, {"name": "address", "value": "'0x343d0b801Fcb032ccEB7D5411cd404816d203B91'"}, {"name": "slippage", "value": "'1'"}, {"name": "fromAmount", "value": "'0.004'"}], "start": 1668150256346, "stop": 1668150257669, "uuid": "9087b424-c167-4555-a825-85bc33ca0c37", "historyId": "cf52c5257547376487226c33b8b066bc", "testCaseId": "ac86cf2a947038fa35616bc583264f03", "fullName": "Testcase.Test_Instructions.Test_Swap.Test_Custodial.test_success_sc.Test_swap_success#test_custodial", "labels": [{"name": "story", "value": "Custodial_Swap_Success!"}, {"name": "feature", "value": "Swap_Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions.Test_Swap.Test_Custodial"}, {"name": "suite", "value": "test_success_sc"}, {"name": "subSuite", "value": "Test_swap_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "25406-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions.Test_Swap.Test_Custodial.test_success_sc"}]}