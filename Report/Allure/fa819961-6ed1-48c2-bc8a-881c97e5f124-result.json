{"name": "查询账户余额-5HEXpNGEtudYvBybMTZLLbWw7PpaMwY2Cx27j944H6Dj4jKd", "status": "failed", "statusDetails": {"message": "AssertionError: explore!=holder\nassert Decimal('11809.53111471175009407') == Decimal('6418.669407669704355766')", "trace": "self = <test_ob_account_CLV.Test_accounts_balances object at 0x10474a190>, address = '5HEXpNGEtudYvBybMTZLLbWw7PpaMwY2Cx27j944H6Dj4jKd'\n\n    @allure.story(\"CLV Rich_address(Top-100) Balances Check!\")\n    @allure.title('查询账户余额-{address}')\n    @pytest.mark.parametrize('address', accounts)\n    def test_account_balance(self, address):\n    \n        with allure.step(\"clover.subscan.io查询地址余额\"):\n            response = Httpexplore.CLV.balance(address)\n            assert response.status_code == 200\n            balance_detail = [b for b in response.json()[\"data\"][\"native\"] if b.get(\"symbol\") == \"CLV\"][0]\n            balance = (Decimal(balance_detail[\"balance\"]) - Decimal(balance_detail[\"lock\"]) - Decimal(balance_detail[\"reserved\"]))/Decimal(10**18)\n    \n        with allure.step(\"Graphql查询地址余额\"):\n            graphql = Graphql.Graphql.getAccountByAddress(\"CLV\",address,\"CLV\")\n            assert graphql.status_code == 200\n            amount = Decimal(graphql.json()[\"data\"][\"getAccountByAddress\"][\"amount\"])\n    \n        with allure.step(\"系统查询地址余额\"):\n            holder = Http.HttpUtils.holders(\"CLV\",\"CLV\",address,ob_token)\n            assert holder.status_code == 200\n            if len(holder.json()) == 0:\n                quantity = 0\n            else:\n                quantity = (Decimal(holder.json()[0]['quantity']))\n    \n        with allure.step(\"验证地址余额:explore==Graphql\"):\n            assert balance == amount,\"explore!=Graphql\"\n    \n        with allure.step(\"验证地址余额:explore==holder\"):\n>           assert balance == quantity,\"explore!=holder\"\nE           AssertionError: explore!=holder\nE           assert Decimal('11809.53111471175009407') == Decimal('6418.669407669704355766')\n\nTestcase/Test_Top_Holders_Check/Test_obaccount_holder.py/test_ob_account_CLV.py:59: AssertionError"}, "steps": [{"name": "clover.subscan.io查询地址余额", "status": "passed", "start": 1669630036928, "stop": 1669630037244}, {"name": "Graphql查询地址余额", "status": "passed", "start": 1669630037244, "stop": 1669630037327}, {"name": "系统查询地址余额", "status": "passed", "start": 1669630037327, "stop": 1669630037516}, {"name": "验证地址余额:explore==Graphql", "status": "passed", "start": 1669630037517, "stop": 1669630037517}, {"name": "验证地址余额:explore==holder", "status": "failed", "statusDetails": {"message": "AssertionError: explore!=holder\nassert Decimal('11809.53111471175009407') == Decimal('6418.669407669704355766')\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Top_Holders_Check/Test_obaccount_holder.py/test_ob_account_CLV.py\", line 59, in test_account_balance\n    assert balance == quantity,\"explore!=holder\"\n"}, "start": 1669630037517, "stop": 1669630037517}], "attachments": [{"name": "log", "source": "ef4e5895-8d4c-432c-95e3-f33cf401ebf3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "address", "value": "'5HEXpNGEtudYvBybMTZLLbWw7PpaMwY2Cx27j944H6Dj4jKd'"}], "start": 1669630036928, "stop": 1669630037517, "uuid": "c0977782-62a1-4da8-8783-5a249636a3a4", "historyId": "34de519b8e8bf06f2a0a9efff46d7905", "testCaseId": "146f0b2a9e00d5801e658a287a4fa79d", "fullName": "Testcase.Test_Top_Holders_Check.Test_obaccount_holder.py.test_ob_account_CLV.Test_accounts_balances#test_account_balance", "labels": [{"name": "story", "value": "CLV Rich_address(Top-100) Balances Check!"}, {"name": "feature", "value": "Accounts Balances!"}, {"name": "parentSuite", "value": "Testcase.Test_Top_Holders_Check.Test_obaccount_holder.py"}, {"name": "suite", "value": "test_ob_account_CLV"}, {"name": "subSuite", "value": "Test_accounts_balances"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "33133-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Top_Holders_Check.Test_obaccount_holder.py.test_ob_account_CLV"}]}