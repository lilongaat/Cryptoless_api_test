{"name": "ATOM extarnal账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_transfer_fail_sign.Test_transfers_success object at 0x102c5a760>, test_title = 'ATOM extarnal账户转账'\nnetworkCode = 'ATOM', symbol = 'ATOM'\nprivatekey = '3fd8cd13dcf592b21f3c1c63b557b10ad8ebd3de9e9014927d97315879ce4783'\nfrom_add = 'cosmos1uxezv8wcd44hp340acnmrqhcnzau4wzhlshcag', to_add = 'cosmos1tzk5mhnala4ncj6w8dlw9lwpqmrhee92lyjx06'\namount = '0.0000016', status_code = 400, code = 2100000\n\n    @allure.story(\"External Transfers Fail Sign!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount,status_code,code', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount,status_code,code):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n>           assert transfer.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Transfer/Test_External/test_transfer_fail_sign.py:97: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1675841732796, "stop": 1675841735098}, {"name": "查询from账户holder信息", "status": "passed", "start": 1675841735098, "stop": 1675841735329}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1675841735330, "stop": 1675841735330}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_External/test_transfer_fail_sign.py\", line 97, in test_custodial\n    assert transfer.status_code == 200\n"}, "start": 1675841735330, "stop": 1675841737148}], "attachments": [{"name": "log", "source": "b55a5b38-aded-4af9-8f36-9128a0a88580-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'ATOM extarnal账户转账'"}, {"name": "networkCode", "value": "'ATOM'"}, {"name": "symbol", "value": "'ATOM'"}, {"name": "privatekey", "value": "'3fd8cd13dcf592b21f3c1c63b557b10ad8ebd3de9e9014927d97315879ce4783'"}, {"name": "from_add", "value": "'cosmos1uxezv8wcd44hp340acnmrqhcnzau4wzhlshcag'"}, {"name": "to_add", "value": "'cosmos1tzk5mhnala4ncj6w8dlw9lwpqmrhee92lyjx06'"}, {"name": "amount", "value": "'0.0000016'"}, {"name": "status_code", "value": "400"}, {"name": "code", "value": "2100000"}], "start": 1675841732796, "stop": 1675841737148, "uuid": "730f904d-3d0f-4f8a-8736-a44baac7fed1", "historyId": "4c26d36edb1ab7ff9db0ce09544ff23c", "testCaseId": "2e5b7bf8a89161590a61671205be3376", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_transfer_fail_sign.Test_transfers_success#test_custodial", "labels": [{"name": "story", "value": "External Transfers Fail Sign!"}, {"name": "feature", "value": "Transfers!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External"}, {"name": "suite", "value": "test_transfer_fail_sign"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "1862-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_transfer_fail_sign"}]}