{"name": "GOERLI Safe创建+relay激活账户+转账 erc20coin", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <Test_create_active_transfer_success.Test_transfers_success object at 0x109706970>\ntest_title = 'GOERLI Safe创建+relay激活账户+转账 erc20coin'\nprivatekey = ['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da']\npublickey = ['0244fb46bba2e912f26a73126b89742ed7f521f593ee084953ae008172553a0113'], networkCode = 'GOERLI'\nsymbol = 'USDCC', to_add = '0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2', amount = '0.000123'\n\n    @allure.story(\"Safe Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,privatekey,publickey,networkCode,symbol,to_add,amount', test_data)\n    def test_safe(self,test_title,privatekey,publickey,networkCode,symbol,to_add,amount):\n    \n        with allure.step(\"创建安全账户\"):\n            acc = Http.HttpUtils.create_safe_account(\"safe\",networkCode,publickey[0])\n            assert acc.status_code == 200\n            assert acc.json()[\"status\"] == \"inactive\"\n            from_add = acc.json()[\"address\"]\n    \n        with allure.step(\"母账户转账nativecoin到多签账户\"):\n            Httpcore.HttpCoreUtils.core_parent_account_transfer_nativecoin(networkCode,from_add)\n    \n        with allure.step(\"母账户转账erc20coin:USDC到多签账户\"):\n            if networkCode == \"MATIC\": # USDC\n                tokenaddress = \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\"\n            elif networkCode == \"GOERLI\": # USDCC\n                tokenaddress = \"0x1eC2CE6108240118Ff2c66eC8AFAC28618D7e066\"\n    \n            Httpcore.HttpCoreUtils.core_parent_account_transfer_erc20coin(networkCode,tokenaddress,from_add,\"100000000\")\n    \n        sleep(30)\n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n>           assert transfer.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Instructions_new/Test_Transfer/Test_Safe/Test_EVM/Test_create_active_transfer_success.py:71: AssertionError"}, "steps": [{"name": "创建安全账户", "status": "passed", "start": 1670813227458, "stop": 1670813231783}, {"name": "母账户转账nativecoin到多签账户", "status": "passed", "start": 1670813231783, "stop": 1670813236716}, {"name": "母账户转账erc20coin:USDC到多签账户", "status": "passed", "start": 1670813236717, "stop": 1670813240564}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions_new/Test_Transfer/Test_Safe/Test_EVM/Test_create_active_transfer_success.py\", line 71, in test_safe\n    assert transfer.status_code == 200\n"}, "start": 1670813270570, "stop": 1670813271123}], "attachments": [{"name": "log", "source": "1340b071-527b-46e1-a1fd-e52da0ba4ad3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'GOERLI Safe创建+relay激活账户+转账 erc20coin'"}, {"name": "privatekey", "value": "['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da']"}, {"name": "publickey", "value": "['0244fb46bba2e912f26a73126b89742ed7f521f593ee084953ae008172553a0113']"}, {"name": "networkCode", "value": "'GOERLI'"}, {"name": "symbol", "value": "'USDCC'"}, {"name": "to_add", "value": "'0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2'"}, {"name": "amount", "value": "'0.000123'"}], "start": 1670813227457, "stop": 1670813271129, "uuid": "adc493bd-1f51-468c-b7ee-5a80d7634dcb", "historyId": "7b950c9a8d1c202d5bf3f18e399f7d72", "testCaseId": "bd75c0c4dce78fca738b7f697e3af173", "fullName": "Testcase.Test_Instructions_new.Test_Transfer.Test_Safe.Test_EVM.Test_create_active_transfer_success.Test_transfers_success#test_safe", "labels": [{"name": "story", "value": "Safe Transfers Success!"}, {"name": "feature", "value": "Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions_new.Test_Transfer.Test_Safe.Test_EVM"}, {"name": "suite", "value": "Test_create_active_transfer_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "7730-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions_new.Test_Transfer.Test_Safe.Test_EVM.Test_create_active_transfer_success"}]}