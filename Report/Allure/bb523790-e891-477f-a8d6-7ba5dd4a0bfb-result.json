{"name": "GOERLI 多safe账户构建+签名交易后同时广播", "status": "failed", "statusDetails": {"message": "AssertionError: assert Decimal('0.00326694117128727') == Decimal('0.004')", "trace": "self = <Test_Relay_Nonce.Test_transfers_success object at 0x1055963a0>, test_title = 'GOERLI 多safe账户构建+签名交易后同时广播'\nnetworkCode = 'GOERLI', symbol = 'GoerliETH'\nprivatekey = 'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'\nfrom_adds = ['0xf4c4b7803447dc6d3a00ed765e10fdb1bfa1ec23', '0xacd5c6a98407469856b47d333309ed814fc64ebe']\nto_add = '0x2B0EfCF16EC1E4C5eD82dBB4Fce9B4811485e650', amount = '0.00000005'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_adds,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_adds,to_add,amount):\n    \n        ids = []\n        hashs = []\n        for n in range(len(from_adds)):\n    \n            with allure.step(\"浏览器查询from账户balance信息\"):\n                balance = Httpexplore.Balances_explore.query(networkCode,from_adds[n],symbol)\n    \n            with allure.step(\"查询from账户holder信息\"):\n                holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_adds[n])\n                assert holder.status_code ==200\n                quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n            logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n            logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n            with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n>               assert balance == quantity\nE               AssertionError: assert Decimal('0.00326694117128727') == Decimal('0.004')\n\nTestcase/Test_Cloud/Test_Transfer/Test_Safe/Test_Relay_Nonce.py:56: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1672995944957, "stop": 1672995945463}, {"name": "查询from账户holder信息", "status": "passed", "start": 1672995945464, "stop": 1672995945941}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "failed", "statusDetails": {"message": "AssertionError: assert Decimal('0.00326694117128727') == Decimal('0.004')\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_Safe/Test_Relay_Nonce.py\", line 56, in test_custodial\n    assert balance == quantity\n"}, "start": 1672995945942, "stop": 1672995945942}], "attachments": [{"name": "log", "source": "1c8564b7-f17e-478a-9430-abd992769f5f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'GOERLI 多safe账户构建+签名交易后同时广播'"}, {"name": "networkCode", "value": "'GOERLI'"}, {"name": "symbol", "value": "'GoerliETH'"}, {"name": "privatekey", "value": "'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'"}, {"name": "from_adds", "value": "['0xf4c4b7803447dc6d3a00ed765e10fdb1bfa1ec23', '0xacd5c6a98407469856b47d333309ed814fc64ebe']"}, {"name": "to_add", "value": "'0x2B0EfCF16EC1E4C5eD82dBB4Fce9B4811485e650'"}, {"name": "amount", "value": "'0.00000005'"}], "start": 1672995944957, "stop": 1672995945943, "uuid": "833bb514-55f1-4aca-8424-bb9a52ceb6c7", "historyId": "dd7a9734bffe341afb8d93c826a2a18b", "testCaseId": "aefed52ddc727ea6f398e08d74f5e493", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_Safe.Test_Relay_Nonce.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Safe"}, {"name": "suite", "value": "Test_Relay_Nonce"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "16339-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Safe.Test_Relay_Nonce"}]}