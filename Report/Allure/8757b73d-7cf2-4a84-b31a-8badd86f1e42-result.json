{"name": "ATOM safe账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_transfer_safe_success.Test_transfers_success object at 0x101be02b0>, test_title = 'ATOM safe账户转账'\nnetworkCode = 'ATOM', symbol = 'ATOM'\nprivatekey = '4b49226b1669a687fb4f8479fa9048f1cbb79af74529a47bae7a0c07ce97f8c6'\nfrom_add = 'cosmos1gkcgpprzv4wkjteteynjr6l7hpq2xkxuuz0ulm', to_add = 'cosmos1tzk5mhnala4ncj6w8dlw9lwpqmrhee92lyjx06'\namount = '0.0000106'\n\n    @allure.story(\"Safe Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n>           assert transfer.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Transfer/Test_Safe/test_transfer_safe_success.py:103: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1675335739368, "stop": 1675335740084}, {"name": "查询from账户holder信息", "status": "passed", "start": 1675335740084, "stop": 1675335740296}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1675335740296, "stop": 1675335740296}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_Safe/test_transfer_safe_success.py\", line 103, in test_custodial\n    assert transfer.status_code == 200\n"}, "start": 1675335740296, "stop": 1675335740861}], "attachments": [{"name": "log", "source": "578e34ca-b3f6-4bdc-92ec-6af31b38aab1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'ATOM safe账户转账'"}, {"name": "networkCode", "value": "'ATOM'"}, {"name": "symbol", "value": "'ATOM'"}, {"name": "privatekey", "value": "'4b49226b1669a687fb4f8479fa9048f1cbb79af74529a47bae7a0c07ce97f8c6'"}, {"name": "from_add", "value": "'cosmos1gkcgpprzv4wkjteteynjr6l7hpq2xkxuuz0ulm'"}, {"name": "to_add", "value": "'cosmos1tzk5mhnala4ncj6w8dlw9lwpqmrhee92lyjx06'"}, {"name": "amount", "value": "'0.0000106'"}], "start": 1675335739368, "stop": 1675335740868, "uuid": "949fb6f3-6441-4dde-82e9-6eab61a98c76", "historyId": "f760ca7d16d2a833dd57de1fda9875bb", "testCaseId": "5e06a0d119d297ad117f7f843b7cae1b", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_Safe.test_transfer_safe_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers!"}, {"name": "story", "value": "Safe Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Safe"}, {"name": "suite", "value": "test_transfer_safe_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "19313-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Safe.test_transfer_safe_success"}]}