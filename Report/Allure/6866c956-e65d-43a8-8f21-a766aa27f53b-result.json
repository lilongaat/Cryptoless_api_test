{"name": "创建安全账户+payer激活", "status": "broken", "statusDetails": {"message": "Exception: 请求异常", "trace": "self = <test_create_success.Test_create_safe_account object at 0x1060f86d0>, test_title = '创建安全账户+payer激活'\nname = '安全账户MATIC2-2-1667985693'\npayer_prv = ['4d87c72cee9d4b257368f448f4f7406d0ce98947eb30fcaa8194319303534b13', '9ff56ed61c94b8af33481f27826ae574adfa2a9640d9e68b7115594fb16934e0']\npayer_pub = ['02e5230ff44191de07476a79c8908374bec9cb7eefb4218513379b0450cd0e381d', '022c8955ff17013456fd8b268afcc28dc091e65c6f217b5138d3b4d585924d7dda']\nPublicKeys = ['0244fb46bba2e912f26a73126b89742ed7f521f593ee084953ae008172553a0113', ''], networkCode = 'MATIC'\n\n    @allure.story(\"Create Safe Account Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,name,payer_prv,payer_pub,PublicKeys,networkCode', test_data)\n    def test_create_account_safe(self, test_title, name, payer_prv, payer_pub, PublicKeys, networkCode):\n    \n        with allure.step(\"创建安全账户\"):\n            safe_account = Http.HttpUtils.create_safe_account(name,networkCode,PublicKeys[0],PublicKeys[1])\n            assert safe_account.status_code == 200\n            assert safe_account.json()[\"status\"] == \"inactive\"\n            id = safe_account.json()[\"id\"]\n            address = safe_account.json()[\"address\"]\n    \n        with allure.step(\"查询账户byid\"):\n            account_detail = Http.HttpUtils.get_account_byid(id)\n            assert account_detail.status_code == 200\n            assert account_detail.json()[\"address\"] == address\n            assert account_detail.json()[\"status\"] == \"inactive\"\n    \n        with allure.step(\"payer1创建激活安全账户交易\"):\n            activation1_safe_account = Http.HttpUtils.activation_safe_account(id,payer_pub[0])\n            assert activation1_safe_account.status_code == 200\n    \n            id1 = activation1_safe_account.json()[\"transaction\"][\"id\"]\n            hash1 = activation1_safe_account.json()[\"transaction\"][\"requiredSignings\"][0][\"hash\"]\n            publickey1 = activation1_safe_account.json()[\"transaction\"][\"requiredSignings\"][0][\"publicKeys\"][0]\n            signatures1 = {\n                    \"hash\":hash1,\n                    \"publicKey\":publickey1,\n                    \"signature\":Conf.Config.sign(payer_prv[0],hash1)\n    \n                }\n    \n        with allure.step(\"payer2创建激活安全账户交易\"):\n            activation2_safe_account = Http.HttpUtils.activation_safe_account(id,payer_pub[0])\n            assert activation2_safe_account.status_code == 200\n    \n            id2 = activation2_safe_account.json()[\"transaction\"][\"id\"]\n            hash2 = activation2_safe_account.json()[\"transaction\"][\"requiredSignings\"][0][\"hash\"]\n            publickey2 = activation2_safe_account.json()[\"transaction\"][\"requiredSignings\"][0][\"publicKeys\"][0]\n            signatures2 = {\n                    \"hash\":hash2,\n                    \"publicKey\":publickey2,\n                    \"signature\":Conf.Config.sign(payer_prv[1],hash2)\n    \n                }\n    \n        with allure.step(\"签名交易——instructions\"):\n            sign1 = Http.HttpUtils.sign(id1,signatures1,\"\")\n            assert sign1.status_code == 200\n            assert sign1.json()[\"status\"] == \"SIGNED\"\n    \n        with allure.step(\"签名交易——instructions\"):\n>           sign2 = Http.HttpUtils.sign(id1,signatures1,\"\")\n\nTestcase/Test_Account/Test_Safe_Account/test_create_success.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nid = '1590273401003962369'\nsignatures = {'hash': '67609c7122a1480be214ac32a3e78b181ee89e4cd510e55d7886f688a99eacfd', 'publicKey': '02e5230ff44191de07476a79c89...3ccf0a6a76ae7246ef63961a06c5cf9f7354ff4a532245c9afb0b8373c03dbcc75aa65e0721b4ea68fa629d0c52f8fb4d3ed833de9c501a824001'}\nserialized = ''\nAuthorization = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNTg1MTAyNzkxNDY2NDg3ODEwIiwiZXhwIjoxNjk4Mjg4OTM1LCJpYXQiOjE2NjY3NTI5MzUsInVzZXJJZCI6MTU4NTEwMjc5MTQ2NjQ4NzgxMH0.4o43r1upI2Qzcs46wf3gqb2Kq6kq0I7qGST6qPspfjY'\n\n    @staticmethod\n    # sign\n    def sign(id: str, signatures: list, serialized: str, Authorization=token):\n        url = url_ + \"/vault/transactions/\" + id + \"/signatures\"\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": Authorization\n        }\n        body = {\n            \"signatures\":signatures,\n            \"serialized\": serialized\n        }\n        logger.info('\\n'+\"<-----Sign----->\"+\"\\n\"+\"Url:\"+url+'\\n\\n'+'Headers:'+json.dumps(headers)+'\\n\\n'+'Body:'+json.dumps(body))\n    \n        res = requests.post(url=url, json=body, headers=headers, timeout=timeout_)\n        if res.status_code == 200:\n            logger.info('\\n'+\"<-----Sign Response----->\"+\"\\n\"+(res.text))\n            return res\n        else:\n            logger.info('\\n'+\"<-----Sign Response Error----->\"+\"\\n\"+str(res.status_code)+\"\\n\"+(res.text))\n>           raise Exception(\"请求异常\")\nE           Exception: 请求异常\n\nCommon/Http.py:627: Exception"}, "steps": [{"name": "创建安全账户", "status": "passed", "start": 1667985693493, "stop": 1667985698691}, {"name": "查询账户byid", "status": "passed", "start": 1667985698692, "stop": 1667985699041}, {"name": "payer1创建激活安全账户交易", "status": "passed", "start": 1667985699042, "stop": 1667985701138}, {"name": "payer2创建激活安全账户交易", "status": "passed", "start": 1667985701138, "stop": 1667985702805}, {"name": "签名交易——instructions", "status": "passed", "start": 1667985702806, "stop": 1667985703266}, {"name": "签名交易——instructions", "status": "broken", "statusDetails": {"message": "Exception: 请求异常\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Account/Test_Safe_Account/test_create_success.py\", line 75, in test_create_account_safe\n    sign2 = Http.HttpUtils.sign(id1,signatures1,\"\")\n  File \"/Users/lilong/Documents/Test_Api/Common/Http.py\", line 627, in sign\n    raise Exception(\"请求异常\")\n"}, "start": 1667985703266, "stop": 1667985703616}], "attachments": [{"name": "log", "source": "a5f8c843-34fd-40e6-8354-7f903a3f32b4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'创建安全账户+payer激活'"}, {"name": "name", "value": "'安全账户MATIC2-2-1667985693'"}, {"name": "payer_prv", "value": "['4d87c72cee9d4b257368f448f4f7406d0ce98947eb30fcaa8194319303534b13', '9ff56ed61c94b8af33481f27826ae574adfa2a9640d9e68b7115594fb16934e0']"}, {"name": "payer_pub", "value": "['02e5230ff44191de07476a79c8908374bec9cb7eefb4218513379b0450cd0e381d', '022c8955ff17013456fd8b268afcc28dc091e65c6f217b5138d3b4d585924d7dda']"}, {"name": "PublicKeys", "value": "['0244fb46bba2e912f26a73126b89742ed7f521f593ee084953ae008172553a0113', '']"}, {"name": "networkCode", "value": "'MATIC'"}], "start": 1667985693493, "stop": 1667985703619, "uuid": "37af57b5-a66f-4cc4-b693-b0440c31379b", "historyId": "13d3ed3a430ee219fc133328208ab2e5", "testCaseId": "92c4dc8ca13a5bfecbfc89a8df792e60", "fullName": "Testcase.Test_Account.Test_Safe_Account.test_create_success.Test_create_safe_account#test_create_account_safe", "labels": [{"name": "feature", "value": "Create Safe Account!"}, {"name": "story", "value": "Create Safe Account Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Account.Test_Safe_Account"}, {"name": "suite", "value": "test_create_success"}, {"name": "subSuite", "value": "Test_create_safe_account"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "13543-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Account.Test_Safe_Account.test_create_success"}]}