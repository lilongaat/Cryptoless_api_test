{"name": "Custodial账户IRIS质押", "status": "failed", "statusDetails": {"message": "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code", "trace": "self = <test_success_sc.Test_stake_success object at 0x108424940>, test_title = 'Custodial账户IRIS质押', networkCode = 'IRIS', symbol = 'IRIS'\ntype = 'stake', address = 'iaa1vywcfmff44nlhud05nlzlpw0hrlxenptn9ff7r', amount = '0.0009'\n\n    @allure.story(\"Custodial_Stake_Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,type,address,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,type,address,amount):\n    \n        with allure.step(\"查询账户holders信息\"):\n            holders = Http.HttpUtils.get_holders(networkCode,symbol,address)\n            assert holders.status_code == 200\n    \n        with allure.step(\"查询账户staking信息\"):\n            staking = Http.HttpUtils.get_staking(networkCode,symbol,address)\n            assert staking.status_code == 200\n    \n        with allure.step(\"构建交易——instructions\"):\n            if type == \"claim\":\n                body = {\n                    \"delegator\":address,\n                    \"coinSymbol\":symbol,\n                }\n            else:\n                body = {\n                    \"delegator\":address,\n                    \"coinSymbol\":symbol,\n                    \"amount\":amount\n                }\n            transactionParams = {\n                \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n            }\n            stake = Http.HttpUtils.instructions(type,body,networkCode,[],transactionParams)\n    \n>           assert stake.status_code == 200\nE           assert 401 == 200\nE            +  where 401 = <Response [401]>.status_code\n\nTestcase/Test_Instructions/Test_Stake/Test_Custodial/test_success_sc.py:73: AssertionError"}, "steps": [{"name": "查询账户holders信息", "status": "passed", "start": 1668070193411, "stop": 1668070193923}, {"name": "查询账户staking信息", "status": "passed", "start": 1668070193923, "stop": 1668070194176}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions/Test_Stake/Test_Custodial/test_success_sc.py\", line 73, in test_custodial\n    assert stake.status_code == 200\n"}, "start": 1668070194176, "stop": 1668070194435}], "attachments": [{"name": "log", "source": "c89ae819-304e-46ce-ae23-683cc05a6298-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'Custodial账户IRIS质押'"}, {"name": "networkCode", "value": "'IRIS'"}, {"name": "symbol", "value": "'IRIS'"}, {"name": "type", "value": "'stake'"}, {"name": "address", "value": "'iaa1vywcfmff44nlhud05nlzlpw0hrlxenptn9ff7r'"}, {"name": "amount", "value": "'0.0009'"}], "start": 1668070193410, "stop": 1668070194436, "uuid": "f85a647a-4549-4d6b-b3cd-a62b7978f504", "historyId": "0dae1e6218c73506f54be370fdeb9440", "testCaseId": "b85badcc9faa1d6063cccf807d6adbcb", "fullName": "Testcase.Test_Instructions.Test_Stake.Test_Custodial.test_success_sc.Test_stake_success#test_custodial", "labels": [{"name": "story", "value": "Custodial_Stake_Success!"}, {"name": "feature", "value": "Stake Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions.Test_Stake.Test_Custodial"}, {"name": "suite", "value": "test_success_sc"}, {"name": "subSuite", "value": "Test_stake_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "19278-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions.Test_Stake.Test_Custodial.test_success_sc"}]}