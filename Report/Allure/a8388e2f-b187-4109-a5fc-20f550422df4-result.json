{"name": "GOERLI Custodial账户批量转账 nativecoin", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_native_success.Test_transfers_success object at 0x102ca2730>\ntest_title = 'GOERLI Custodial账户批量转账 nativecoin', networkCode = 'GOERLI', symbol = 'goerliETH'\nprivatekey = ['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da']\nfrom_add = '0xe525e7cd17f6dc950492755a089e452fd5d9d44f'\nto_adds = ['0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2', '0x9d055026eb8d83ef561d5d8084f2dd02e7ad2c17']\nvalues = ['0x64', '0x1']\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_adds,values', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_adds,values):\n    \n        if len(to_adds) == 1: #普通转账\n            payload = {\n                \"from\":from_add,\n                \"to\":to_adds[0],\n                \"value\":values[0]\n                }\n            type = \"TRANSACTION\"\n        elif len(to_adds) > 1: #批量转账\n            calls =[]\n            for i in range(len(to_adds)):\n                call = {\n                    \"to\":to_adds[i],\n                    \"value\":values[i]\n                }\n                calls.append(call)\n    \n            payload = {\n                \"from\":from_add,\n                \"calls\":calls\n                }\n            type = \"MULTISEND_TRANSACTION\"\n    \n        with allure.step(\"构建交易——transactions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"payload\":payload,\n                \"type\":type\n            }\n            transfer = Http.HttpUtils.transactions(body)\n>           assert transfer.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Transactions/Test_External/Test_EVM/test_native_success.py:63: AssertionError"}, "steps": [{"name": "构建交易——transactions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transactions/Test_External/Test_EVM/test_native_success.py\", line 63, in test_custodial\n    assert transfer.status_code == 200\n"}, "start": 1672393628008, "stop": 1672393628780}], "attachments": [{"name": "log", "source": "fbc492c2-32b3-471f-8e86-16ed8c6c1790-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'GOERLI Custodial账户批量转账 nativecoin'"}, {"name": "networkCode", "value": "'GOERLI'"}, {"name": "symbol", "value": "'goerliETH'"}, {"name": "privatekey", "value": "['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da']"}, {"name": "from_add", "value": "'0xe525e7cd17f6dc950492755a089e452fd5d9d44f'"}, {"name": "to_adds", "value": "['0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2', '0x9d055026eb8d83ef561d5d8084f2dd02e7ad2c17']"}, {"name": "values", "value": "['0x64', '0x1']"}], "start": 1672393628008, "stop": 1672393628780, "uuid": "54085242-6e7b-4f50-9256-c434ef64a881", "historyId": "8a17bb1b12a7520a6bdfa1fd0a2a5892", "testCaseId": "bc07edf8202be9e3ef7055de5801d5d9", "fullName": "Testcase.Test_Cloud.Test_Transactions.Test_External.Test_EVM.test_native_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transactions.Test_External.Test_EVM"}, {"name": "suite", "value": "test_native_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "13214-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transactions.Test_External.Test_EVM.test_native_success"}]}