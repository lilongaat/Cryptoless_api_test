{"name": "Custodial账户ERC20转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert '9.411207331059519' == 9.411207331059519", "trace": "self = <test_success.Test_transfers_success object at 0x10ad433d0>, test_title = 'Custodial账户ERC20转账', networkCode = 'GOERLI'\nsymbol = 'Long', from_add = '0x821647aF7f50717500E008dE239f8692216cBC67', to_add = '0xbDb3bd7b3F3DAEADC58D00EF5f15ED9a476B8fe3'\namount = 9.411207331059519\n\n    @allure.story(\"Custodial_Transfers_Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,from_add,to_add,amount):\n    \n        with allure.step(\"查询From账户holders信息——holders\"):\n            holders = Http.HttpUtils.get_holders(networkCode,symbol,from_add)\n            assert holders.status_code == 200\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"from\":from_add,\n                \"to\":to_add,\n                \"symbol\":symbol,\n                \"amount\":amount\n            }\n            transactionParams = {\n                \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n            }\n            transfer = Http.HttpUtils.instructions(\"transfer\",body,networkCode,[],transactionParams)\n    \n            assert transfer.status_code == 200\n            assert transfer.json()[\"body\"][\"symbol\"] == symbol\n>           assert transfer.json()[\"body\"][\"amount\"] == amount\nE           AssertionError: assert '9.411207331059519' == 9.411207331059519\n\nTestcase/Test_Instructions/Test_Transfer/Test_Custodial/test_success.py:79: AssertionError"}, "steps": [{"name": "查询From账户holders信息——holders", "status": "passed", "start": 1667551848045, "stop": 1667551848303}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert '9.411207331059519' == 9.411207331059519\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions/Test_Transfer/Test_Custodial/test_success.py\", line 79, in test_custodial\n    assert transfer.json()[\"body\"][\"amount\"] == amount\n"}, "start": 1667551848303, "stop": 1667551855445}], "attachments": [{"name": "log", "source": "14c29ef4-ad5a-4386-912f-9b27c77ada4a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'Custodial账户ERC20转账'"}, {"name": "networkCode", "value": "'GOERLI'"}, {"name": "symbol", "value": "'Long'"}, {"name": "from_add", "value": "'0x821647aF7f50717500E008dE239f8692216cBC67'"}, {"name": "to_add", "value": "'0xbDb3bd7b3F3DAEADC58D00EF5f15ED9a476B8fe3'"}, {"name": "amount", "value": "9.411207331059519"}], "start": 1667551848045, "stop": 1667551855445, "uuid": "2fa6aadc-20ff-4b72-a331-1d53d716a2b4", "historyId": "13b8084b96d4b0158bf38dc1683333b0", "testCaseId": "011f91c18ce423aec58f0862efb6dff8", "fullName": "Testcase.Test_Instructions.Test_Transfer.Test_Custodial.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "story", "value": "Custodial_Transfers_Success!"}, {"name": "feature", "value": "Transfers_Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions.Test_Transfer.Test_Custodial"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "11049-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions.Test_Transfer.Test_Custodial.test_success"}]}