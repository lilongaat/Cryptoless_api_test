{"name": "ATOM safe账户转账", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "self = <test_success.Test_transfers_success object at 0x1092cd580>, test_title = 'ATOM safe账户转账'\nnetworkCode = 'ATOM', symbol = 'ATOM'\nprivatekey = '4b49226b1669a687fb4f8479fa9048f1cbb79af74529a47bae7a0c07ce97f8c6'\nfrom_add = 'cosmos1gkcgpprzv4wkjteteynjr6l7hpq2xkxuuz0ulm', to_add = 'cosmos1tzk5mhnala4ncj6w8dlw9lwpqmrhee92lyjx06'\namount = '0.000106'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n>           balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n\nTestcase/Test_Cloud/Test_Transfer/Test_Safe/test_success.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nnetworkCode = 'ATOM', address = 'cosmos1gkcgpprzv4wkjteteynjr6l7hpq2xkxuuz0ulm', symbol = 'ATOM'\n\n    @staticmethod\n    def query(networkCode:str, address:str, symbol=\"USDC\"):\n        if networkCode == \"BTC\":\n                    pass\n        elif networkCode == \"DOGE\":\n            response = DOGE.balance(address)\n            assert response.status_code == 200\n            balance = Decimal(str(response.json()))\n        elif networkCode == \"ETH\":\n            pass\n        elif networkCode == \"BSC\":\n            if symbol == \"BNB\":\n                response = BSC.balance(address)\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n            else:\n                response = BSC.balance_erc20(address,\"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\")\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n        elif networkCode == \"MATIC\":\n            if symbol == \"MATIC\":\n                response = MATIC.balance(address)\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n            else:\n                response = MATIC.balance_erc20(address,\"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\")\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**6)\n        elif networkCode == \"ATOM\":\n            response = ATOM.balance(address)\n            assert response.status_code == 200\n            balance_ = [b.get(\"amount\") for b in response.json()[\"balances\"] if b.get(\"denom\") == \"uatom\"]\n>           balance = (Decimal(int(balance_[0]))/Decimal(10**6))\nE           IndexError: list index out of range\n\nCommon/Httpexplore.py:448: IndexError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_Safe/test_success.py\", line 71, in test_custodial\n    balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n  File \"/Users/lilong/Documents/Test_Api/Common/Httpexplore.py\", line 448, in query\n    balance = (Decimal(int(balance_[0]))/Decimal(10**6))\n"}, "start": 1672902106721, "stop": 1672902108125}], "attachments": [{"name": "log", "source": "54b1446e-9b74-4ff7-9782-fc298e24d80a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'ATOM safe账户转账'"}, {"name": "networkCode", "value": "'ATOM'"}, {"name": "symbol", "value": "'ATOM'"}, {"name": "privatekey", "value": "'4b49226b1669a687fb4f8479fa9048f1cbb79af74529a47bae7a0c07ce97f8c6'"}, {"name": "from_add", "value": "'cosmos1gkcgpprzv4wkjteteynjr6l7hpq2xkxuuz0ulm'"}, {"name": "to_add", "value": "'cosmos1tzk5mhnala4ncj6w8dlw9lwpqmrhee92lyjx06'"}, {"name": "amount", "value": "'0.000106'"}], "start": 1672902106721, "stop": 1672902108128, "uuid": "be7d9366-b298-4961-aeae-ad5fada6485a", "historyId": "c7478dc32b693ace6ab639ee7f5ab329", "testCaseId": "7cb3b18117425d778a8f4e38cad1766c", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_Safe.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Safe"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "9768-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Safe.test_success"}]}