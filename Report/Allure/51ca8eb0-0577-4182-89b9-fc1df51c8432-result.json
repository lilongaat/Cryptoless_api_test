{"name": "GOERLI Custodial账户转账 nativecoin 手续费不足", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2100000 == 2101000", "trace": "self = <test_transfer_custodial_feepool.Test_transfers_success object at 0x10b190910>\ntest_title = 'GOERLI Custodial账户转账 nativecoin 手续费不足', networkCode = 'GOERLI', symbol = 'GoerliETH'\nfrom_add = '0x57d8daBDF8C9eD5D9FF512F1033576303Ff9Aa20', to_add = '0xbdb3bd7b3f3daeadc58d00ef5f15ed9a476b8fe3'\namount = '0.001', status_code = 400, code = 2101000\n\n    @allure.story(\"Custodial Transfers Fail Feepool!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,from_add,to_add,amount,status_code,code', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,from_add,to_add,amount,status_code,code):\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == status_code\n>           assert transfer.json()[\"code\"] == code\nE           assert 2100000 == 2101000\n\nTestcase/Test_Cloud/Test_Transfer/Test_Custodial/test_transfer_custodial_feepool.py:64: AssertionError"}, "steps": [{"name": "查询from账户holder信息", "status": "passed", "start": 1676370642968, "stop": 1676370643602}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2100000 == 2101000\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_Custodial/test_transfer_custodial_feepool.py\", line 64, in test_custodial\n    assert transfer.json()[\"code\"] == code\n"}, "start": 1676370643602, "stop": 1676370646909}], "attachments": [{"name": "log", "source": "95b5a04d-4c72-4358-a769-49cc79fdfdf0-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'GOERLI Custodial账户转账 nativecoin 手续费不足'"}, {"name": "networkCode", "value": "'GOERLI'"}, {"name": "symbol", "value": "'GoerliETH'"}, {"name": "from_add", "value": "'0x57d8daBDF8C9eD5D9FF512F1033576303Ff9Aa20'"}, {"name": "to_add", "value": "'0xbdb3bd7b3f3daeadc58d00ef5f15ed9a476b8fe3'"}, {"name": "amount", "value": "'0.001'"}, {"name": "status_code", "value": "400"}, {"name": "code", "value": "2101000"}], "start": 1676370642968, "stop": 1676370646910, "uuid": "d53d5b27-6c53-4b47-b398-9c79f262d2c3", "historyId": "7023f0e204e88a4daa890353a6ad08f1", "testCaseId": "d50dc5e6a67fcd262065b30ee813d0b0", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_Custodial.test_transfer_custodial_feepool.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers!"}, {"name": "story", "value": "Custodial Transfers Fail Feepool!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Custodial"}, {"name": "suite", "value": "test_transfer_custodial_feepool"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "7810-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Custodial.test_transfer_custodial_feepool"}]}