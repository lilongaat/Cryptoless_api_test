{"name": "MATIC safe2-3账户转账nativecoin", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_transfer_safe_success.Test_transfers_success object at 0x1028a5bb0>\ntest_title = 'MATIC safe2-3账户转账nativecoin', networkCode = 'MATIC', symbol = 'MATIC'\nprivatekey = '100e876b446ee8a356cf2fa8082e12d8b5ff6792aa8fac7a01b534163cbefc33'\nfrom_add = '0xa2109b6a714bb32854f4b9db01859b3b7f092088', to_add = '0x3d7f18Ad2cEa9B59E54dFAf09b327C1CCd899591'\namount = '0.0000015'\n\n    @allure.story(\"Safe Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n            # assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"SIGNING\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n            requiredSignings = transfer.json()[\"_embedded\"][\"transactions\"][0][\"requiredSignings\"]\n            signatures = []\n            for i in range(len(requiredSignings)):\n                hash = requiredSignings[i][\"hash\"]\n                publickey = requiredSignings[i][\"publicKeys\"][0]\n                signature = {\n                    \"hash\":hash,\n                    \"publicKey\":publickey,\n                    \"signature\":Conf.Config.sign(privatekey,hash)\n    \n                }\n                signatures.append(signature)\n    \n        with allure.step(\"签名交易\"):\n            sign  =Http.HttpUtils.sign(id,signatures)\n            assert sign.status_code == 200\n    \n        with allure.step(\"广播交易\"):\n            send = Http.HttpUtils.send(id)\n>           assert send.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Transfer/Test_Safe/test_transfer_safe_success.py:129: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1675851968811, "stop": 1675851970080}, {"name": "查询from账户holder信息", "status": "passed", "start": 1675851970080, "stop": 1675851970564}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1675851970564, "stop": 1675851970565}, {"name": "构建交易——instructions", "status": "passed", "start": 1675851970565, "stop": 1675851973120}, {"name": "签名交易", "status": "passed", "start": 1675851973121, "stop": 1675851975784}, {"name": "广播交易", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_Safe/test_transfer_safe_success.py\", line 129, in test_custodial\n    assert send.status_code == 200\n"}, "start": 1675851975784, "stop": 1675851976497}], "attachments": [{"name": "log", "source": "a353eeda-499e-44d9-97f6-4eca13f0ba03-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'MATIC safe2-3账户转账nativecoin'"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "symbol", "value": "'MATIC'"}, {"name": "privatekey", "value": "'100e876b446ee8a356cf2fa8082e12d8b5ff6792aa8fac7a01b534163cbefc33'"}, {"name": "from_add", "value": "'0xa2109b6a714bb32854f4b9db01859b3b7f092088'"}, {"name": "to_add", "value": "'0x3d7f18Ad2cEa9B59E54dFAf09b327C1CCd899591'"}, {"name": "amount", "value": "'0.0000015'"}], "start": 1675851968811, "stop": 1675851976498, "uuid": "2d267104-60d3-44d6-9501-ea394831165f", "historyId": "d1612c6ab9acd2b2269a8be1de8cce6d", "testCaseId": "5e06a0d119d297ad117f7f843b7cae1b", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_Safe.test_transfer_safe_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers!"}, {"name": "story", "value": "Safe Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Safe"}, {"name": "suite", "value": "test_transfer_safe_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "3763-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Safe.test_transfer_safe_success"}]}