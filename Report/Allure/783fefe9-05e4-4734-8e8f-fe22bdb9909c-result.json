{"name": "查询账户余额-cosmos1th4k6hj64sdxx0g56ggv66j26huqpmc3y0x9t5", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "self = <test_atom_check.Test_accounts_balances object at 0x1074e6400>, address = 'cosmos1th4k6hj64sdxx0g56ggv66j26huqpmc3y0x9t5'\n\n    @allure.story(\"ATOM Rich_address(Top-100) Balances Check!\")\n    @allure.title('查询账户余额-{address}')\n    @pytest.mark.parametrize('address', accounts)\n    def test_account_balance(self, address):\n    \n        with allure.step(\"mintscan.io查询地址余额\"):\n            response = Httpexplore.ATOM.balance(address)\n            assert response.status_code == 200\n>           balance = (Decimal(int([b.get(\"amount\") for b in response.json()[\"balances\"] if b.get(\"denom\") == \"uatom\"][0]))/Decimal(10**6))\nE           IndexError: list index out of range\n\nTestcase/Test_Sync/Test_accounts_balances/test_atom_check.py:27: IndexError"}, "steps": [{"name": "mintscan.io查询地址余额", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Sync/Test_accounts_balances/test_atom_check.py\", line 27, in test_account_balance\n    balance = (Decimal(int([b.get(\"amount\") for b in response.json()[\"balances\"] if b.get(\"denom\") == \"uatom\"][0]))/Decimal(10**6))\n"}, "start": 1662703998038, "stop": 1662703998457}], "attachments": [{"name": "log", "source": "789cf5eb-4925-4137-8b7a-4687e697b011-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "address", "value": "'cosmos1th4k6hj64sdxx0g56ggv66j26huqpmc3y0x9t5'"}], "start": 1662703998038, "stop": 1662703998457, "uuid": "9934f1d6-aaab-4a1a-8d15-68a0924c4eae", "historyId": "f2c842ffb644d8f7c3a55ba36a1e3123", "testCaseId": "1b9aead86894ab5ae8ffa52c10d89a72", "fullName": "Testcase.Test_Sync.Test_accounts_balances.test_atom_check.Test_accounts_balances#test_account_balance", "labels": [{"name": "feature", "value": "Accounts Balances!"}, {"name": "story", "value": "ATOM Rich_address(Top-100) Balances Check!"}, {"name": "parentSuite", "value": "Testcase.Test_Sync.Test_accounts_balances"}, {"name": "suite", "value": "test_atom_check"}, {"name": "subSuite", "value": "Test_accounts_balances"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "22755-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Sync.Test_accounts_balances.test_atom_check"}]}