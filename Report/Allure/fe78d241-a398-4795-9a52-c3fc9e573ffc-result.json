{"name": "CLV 多签账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_polkdot_success.Test_transfers_success object at 0x1050ce310>, test_title = 'CLV 多签账户转账'\nnetworkCode = 'CLV', symbol = 'CLV'\nprivatekey = ['7967c43bd3f3874ccfa6ff6ceda5faa8c699ad0fe2be33f44c8bb8abcb23a2fd', '7cc57c9ab4d60f6991dd32827927266c90a7c165db6c71ea344c86a05e582b68']\nfrom_add = '5EwMcCvUPD7RKUTs86NoLPame9oCg8edtdKCdbcsxTFL3aTQ'\nto_add = '5HWsR2E9YLKqfz6ybMufU5t1qyjUMzmBwFjppsaEwZHegViT', amount = '0.0001'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"查询账户holder信息\"):\n            holder = Httpcore.HttpCoreUtils.holder(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = holder.json()[\"list\"][0][\"quantity\"]\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Httpcore.HttpCoreUtils.core_instructions(body)\n            assert transfer.status_code == 200\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"BUILDING\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n            requiredSignings = transfer.json()[\"_embedded\"][\"transactions\"][0][\"requiredSignings\"]\n            signatures = []\n            for i in range(len(requiredSignings)):\n                hash = requiredSignings[i][\"hash\"]\n                publickeys = requiredSignings[i][\"publicKeys\"]\n                for j in range(len(publickeys)):\n                    signature = {\n                        \"hash\":hash,\n                        \"publicKey\":publickeys[j],\n                        \"signature\":Conf.Config.sign(privatekey[j],hash)\n    \n                    }\n                    signatures.append(signature)\n    \n        with allure.step(\"签名交易\"):\n            sign  =Httpcore.HttpCoreUtils.core_sign(id,signatures)\n            assert sign.status_code == 200\n    \n        with allure.step(\"广播交易\"):\n            send = Httpcore.HttpCoreUtils.core_send(id)\n>           assert send.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcasecore/Test_Instructions/Test_transfer/Test_Multi/test_polkdot_success.py:78: AssertionError"}, "steps": [{"name": "查询账户holder信息", "status": "passed", "start": 1672280613516, "stop": 1672280613909}, {"name": "构建交易——instructions", "status": "passed", "start": 1672280613909, "stop": 1672280619548}, {"name": "签名交易", "status": "passed", "start": 1672280619548, "stop": 1672280619956}, {"name": "广播交易", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcasecore/Test_Instructions/Test_transfer/Test_Multi/test_polkdot_success.py\", line 78, in test_custodial\n    assert send.status_code == 200\n"}, "start": 1672280619956, "stop": 1672280622620}], "attachments": [{"name": "log", "source": "36604550-d250-4056-b5fa-f507f0878e4a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'CLV 多签账户转账'"}, {"name": "networkCode", "value": "'CLV'"}, {"name": "symbol", "value": "'CLV'"}, {"name": "privatekey", "value": "['7967c43bd3f3874ccfa6ff6ceda5faa8c699ad0fe2be33f44c8bb8abcb23a2fd', '7cc57c9ab4d60f6991dd32827927266c90a7c165db6c71ea344c86a05e582b68']"}, {"name": "from_add", "value": "'5EwMcCvUPD7RKUTs86NoLPame9oCg8edtdKCdbcsxTFL3aTQ'"}, {"name": "to_add", "value": "'5HWsR2E9YLKqfz6ybMufU5t1qyjUMzmBwFjppsaEwZHegViT'"}, {"name": "amount", "value": "'0.0001'"}], "start": 1672280613516, "stop": 1672280622621, "uuid": "8c1a49ed-7b59-4d61-9805-519e222e5425", "historyId": "a8c0168b86ba5e92036b2ae14a6a4133", "testCaseId": "3f07e1851f5a3132ea8cfa4a5a286357", "fullName": "Testcasecore.Test_Instructions.Test_transfer.Test_Multi.test_polkdot_success.Test_transfers_success#test_custodial", "labels": [{"name": "story", "value": "Custodial Transfers Success!"}, {"name": "feature", "value": "Transfers Success!"}, {"name": "parentSuite", "value": "Testcasecore.Test_Instructions.Test_transfer.Test_Multi"}, {"name": "suite", "value": "test_polkdot_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "7620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcasecore.Test_Instructions.Test_transfer.Test_Multi.test_polkdot_success"}]}