{"name": "DOGE safe2-3账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_transfer_safe_success.Test_transfers_success object at 0x10f1fdb80>, test_title = 'DOGE safe2-3账户转账'\nnetworkCode = 'DOGE', symbol = 'DOGE'\nprivatekey = '6a7e8dceb20664b93a7a901e23ba05c34b4378a58e8b409cfceac35a3740345f'\nfrom_add = 'A19FU4dm95VZQ6JECwvZMaDEFc3QTkLbFC', to_add = 'D9HfYYym4Ca49VE9FTTvmucCcyHTPspA3j', amount = '0.1002'\n\n    @allure.story(\"Safe Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n            # assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"SIGNING\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n            requiredSignings = transfer.json()[\"_embedded\"][\"transactions\"][0][\"requiredSignings\"]\n            signatures = []\n            for i in range(len(requiredSignings)):\n                hash = requiredSignings[i][\"hash\"]\n                publickey = requiredSignings[i][\"publicKeys\"][0]\n                signature = {\n                    \"hash\":hash,\n                    \"publicKey\":publickey,\n                    \"signature\":Conf.Config.sign(privatekey,hash)\n    \n                }\n                signatures.append(signature)\n    \n        with allure.step(\"签名交易\"):\n            sign  =Http.HttpUtils.sign(id,signatures)\n>           assert sign.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Transfer/Test_Safe/test_transfer_safe_success.py:126: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1675912951395, "stop": 1675912952398}, {"name": "查询from账户holder信息", "status": "passed", "start": 1675912952398, "stop": 1675912952844}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1675912952845, "stop": 1675912952845}, {"name": "构建交易——instructions", "status": "passed", "start": 1675912952845, "stop": 1675912954699}, {"name": "签名交易", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_Safe/test_transfer_safe_success.py\", line 126, in test_custodial\n    assert sign.status_code == 200\n"}, "start": 1675912954699, "stop": 1675912955303}], "attachments": [{"name": "log", "source": "da8977a8-a900-447f-a357-5bf8d3799625-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'DOGE safe2-3账户转账'"}, {"name": "networkCode", "value": "'DOGE'"}, {"name": "symbol", "value": "'DOGE'"}, {"name": "privatekey", "value": "'6a7e8dceb20664b93a7a901e23ba05c34b4378a58e8b409cfceac35a3740345f'"}, {"name": "from_add", "value": "'A19FU4dm95VZQ6JECwvZMaDEFc3QTkLbFC'"}, {"name": "to_add", "value": "'D9HfYYym4Ca49VE9FTTvmucCcyHTPspA3j'"}, {"name": "amount", "value": "'0.1002'"}], "start": 1675912951395, "stop": 1675912955303, "uuid": "aac9ac33-3f50-4f63-8702-5deac801ed9a", "historyId": "dd1c37e0b46551db055f73a57c1666cf", "testCaseId": "5e06a0d119d297ad117f7f843b7cae1b", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_Safe.test_transfer_safe_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers!"}, {"name": "story", "value": "Safe Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Safe"}, {"name": "suite", "value": "test_transfer_safe_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "5497-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Safe.test_transfer_safe_success"}]}