{"name": "GOERLI safe账户转账 erc20coin", "status": "failed", "statusDetails": {"message": "AssertionError: assert 503 == 200\n +  where 503 = <Response [503]>.status_code", "trace": "self = <test_success.Test_transfers_success object at 0x1090ae310>, test_title = 'GOERLI safe账户转账 erc20coin'\nnetworkCode = 'GOERLI', symbol = 'USDCC'\nprivatekey = 'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'\nfrom_add = '0xc53ce86d5b3fcf72963df2faa0856a3d9bc7a1ae', to_add = '0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2'\namount = '0.000123'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"查询账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n>           assert holder.status_code ==200\nE           assert 503 == 200\nE            +  where 503 = <Response [503]>.status_code\n\nTestcase/Test_Cloud/Test_Instructions/Test_Safe/test_success.py:43: AssertionError"}, "steps": [{"name": "查询账户holder信息", "status": "failed", "statusDetails": {"message": "AssertionError: assert 503 == 200\n +  where 503 = <Response [503]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Instructions/Test_Safe/test_success.py\", line 43, in test_custodial\n    assert holder.status_code ==200\n"}, "start": 1671090015050, "stop": 1671090015250}], "attachments": [{"name": "log", "source": "3e313ac1-6fb0-481a-ab86-17a076037718-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'GOERLI safe账户转账 erc20coin'"}, {"name": "networkCode", "value": "'GOERLI'"}, {"name": "symbol", "value": "'USDCC'"}, {"name": "privatekey", "value": "'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'"}, {"name": "from_add", "value": "'0xc53ce86d5b3fcf72963df2faa0856a3d9bc7a1ae'"}, {"name": "to_add", "value": "'0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2'"}, {"name": "amount", "value": "'0.000123'"}], "start": 1671090015050, "stop": 1671090015251, "uuid": "14885337-9947-4ffb-82a3-4568385ede8a", "historyId": "8e1e1ee96978b548075b711f433414cb", "testCaseId": "927e8a84362acdff3985f7860f09f223", "fullName": "Testcase.Test_Cloud.Test_Instructions.Test_Safe.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Instructions.Test_Safe"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "9268-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Instructions.Test_Safe.test_success"}]}