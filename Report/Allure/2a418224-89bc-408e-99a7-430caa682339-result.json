{"name": "Custodial账户IRISclaim", "status": "failed", "statusDetails": {"message": "AssertionError: assert Decimal('0.115892') == Decimal('0.140762')", "trace": "self = <test_success.Test_stake_success object at 0x107d13c70>, test_title = 'Custodial账户IRISclaim'\nnetworkCode = 'IRIS', symbol = 'IRIS', type = 'claim', address = 'iaa1j9vswglv54xlmrza98ww44jgnm0j0hncw2t7v9'\namount = 0\n\n    @allure.story(\"Custodial_Stake_Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,type,address,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,type,address,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,address,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=address)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"查询账户staking信息\"):\n            staking = Http.HttpUtils.staking(networkCode,address)\n            assert staking.status_code == 200\n    \n        with allure.step(\"构建交易——instructions\"):\n            if type == \"claim\":\n                body = {\n                    \"networkCode\": networkCode,\n                    \"type\": type,\n                    \"body\": {\n                        \"delegator\":address,\n                        \"coinSymbol\":symbol\n                    },\n                    \"transactionParams\":{\n                        \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                    }\n                }\n            else:\n                body = {\n                    \"networkCode\": networkCode,\n                    \"type\": type,\n                    \"body\": {\n                        \"delegator\":address,\n                        \"coinSymbol\":symbol,\n                        \"amount\":amount\n                    },\n                    \"transactionParams\":{\n                        \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                    }\n                }\n    \n            stake = Http.HttpUtils.instructions(body)\n    \n            assert stake.status_code == 200\n            assert stake.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"SIGNED\"\n    \n            id = stake.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n    \n        with allure.step(\"广播交易\"):\n            send = Http.HttpUtils.send(id)\n            assert send.status_code == 200\n            assert send.json()[\"statusDesc\"] == \"PENDING\"\n    \n        with allure.step(\"通过id查询交易记录\"):\n            sleep(30)\n            for n in range(10):\n                transaction = Http.HttpUtils.transactions_byid(id)\n                assert transaction.status_code == 200\n                statusDesc = transaction.json()[\"statusDesc\"]\n                if statusDesc == \"SETTLED\" and len(transaction.json()[\"balanceChanges\"]) > 0:\n                    break\n                else:\n                    sleep(30)\n            sleep(5)\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,address,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=address)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n>           assert balance == quantity\nE           AssertionError: assert Decimal('0.115892') == Decimal('0.140762')\n\nTestcase/Test_Cloud/Stake/Custodial/test_success.py:139: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1672911775835, "stop": 1672911777411}, {"name": "查询from账户holder信息", "status": "passed", "start": 1672911777412, "stop": 1672911777512}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1672911777514, "stop": 1672911777514}, {"name": "查询账户staking信息", "status": "passed", "start": 1672911777514, "stop": 1672911777713}, {"name": "构建交易——instructions", "status": "passed", "start": 1672911777713, "stop": 1672911779173}, {"name": "广播交易", "status": "passed", "start": 1672911779173, "stop": 1672911782963}, {"name": "通过id查询交易记录", "status": "passed", "start": 1672911782963, "stop": 1672912119311}, {"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1672912119312, "stop": 1672912120998}, {"name": "查询from账户holder信息", "status": "passed", "start": 1672912120999, "stop": 1672912121102}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "failed", "statusDetails": {"message": "AssertionError: assert Decimal('0.115892') == Decimal('0.140762')\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Stake/Custodial/test_success.py\", line 139, in test_custodial\n    assert balance == quantity\n"}, "start": 1672912121103, "stop": 1672912121105}], "attachments": [{"name": "log", "source": "d40ed709-c8db-4dc1-9505-210ed3c351c0-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'Custodial账户IRISclaim'"}, {"name": "networkCode", "value": "'IRIS'"}, {"name": "symbol", "value": "'IRIS'"}, {"name": "type", "value": "'claim'"}, {"name": "address", "value": "'iaa1j9vswglv54xlmrza98ww44jgnm0j0hncw2t7v9'"}, {"name": "amount", "value": "0"}], "start": 1672911775835, "stop": 1672912121109, "uuid": "f86cb5bd-f05f-4627-a459-f9d5c1701b39", "historyId": "cbd54a310afe05ec33dd211ec5a4d624", "testCaseId": "63f9550c0c0e229cfb4fc56179bc7f17", "fullName": "Testcase.Test_Cloud.Stake.Custodial.test_success.Test_stake_success#test_custodial", "labels": [{"name": "feature", "value": "Stake Success!"}, {"name": "story", "value": "Custodial_Stake_Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Stake.Custodial"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_stake_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "11270-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Stake.Custodial.test_success"}]}