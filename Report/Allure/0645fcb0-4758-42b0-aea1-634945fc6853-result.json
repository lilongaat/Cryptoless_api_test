{"name": "Custodial账户质押networkcode不支持", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 400\n +  where 404 = <Response [404]>.status_code", "trace": "self = <test_fail.Test_stake_fail object at 0x105246ac0>, test_title = 'Custodial账户质押networkcode不支持', networkCode = 'ETH', symbol = 'ETH'\ntype = 'stake', address = '0x821647aF7f50717500E008dE239f8692216cBC67', amount = '0.00005', status_check = 400, code_check = 2200000\n\n    @allure.story(\"Custodial_Stake_Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,type,address,amount,status_check,code_check', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,type,address,amount,status_check,code_check):\n    \n        with allure.step(\"构建交易——instructions\"):\n            if type == \"claim\":\n                body = {\n                    \"delegator\":address,\n                    \"coinSymbol\":symbol,\n                }\n            else:\n                body = {\n                    \"delegator\":address,\n                    \"coinSymbol\":symbol,\n                    \"amount\":amount\n                }\n            transactionParams = {\n                \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n            }\n            stake = Http.HttpUtils.instructions(type,body,networkCode,[],transactionParams)\n    \n        with allure.step(\"交易断言\"):\n>           assert stake.status_code == status_check\nE           assert 404 == 400\nE            +  where 404 = <Response [404]>.status_code\n\nTestcase/Test_Instructions/Test_Stake/Test_Custodial/test_fail.py:108: AssertionError"}, "steps": [{"name": "构建交易——instructions", "status": "passed", "start": 1668138066966, "stop": 1668138067346}, {"name": "交易断言", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 400\n +  where 404 = <Response [404]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions/Test_Stake/Test_Custodial/test_fail.py\", line 108, in test_custodial\n    assert stake.status_code == status_check\n"}, "start": 1668138067346, "stop": 1668138067347}], "attachments": [{"name": "log", "source": "c87786bd-eee9-48d7-9619-230f6a7cfca8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'Custodial账户质押networkcode不支持'"}, {"name": "networkCode", "value": "'ETH'"}, {"name": "symbol", "value": "'ETH'"}, {"name": "type", "value": "'stake'"}, {"name": "address", "value": "'0x821647aF7f50717500E008dE239f8692216cBC67'"}, {"name": "amount", "value": "'0.00005'"}, {"name": "status_check", "value": "400"}, {"name": "code_check", "value": "2200000"}], "start": 1668138066966, "stop": 1668138067347, "uuid": "c655f96a-9349-48c1-be6f-d0dae8a40307", "historyId": "1c7665919b24db37c0a62f120486fabc", "testCaseId": "c6ab16c88b5bfac0d9df421d5f02b8b5", "fullName": "Testcase.Test_Instructions.Test_Stake.Test_Custodial.test_fail.Test_stake_fail#test_custodial", "labels": [{"name": "story", "value": "Custodial_Stake_Success!"}, {"name": "feature", "value": "Stake_Fail!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions.Test_Stake.Test_Custodial"}, {"name": "suite", "value": "test_fail"}, {"name": "subSuite", "value": "Test_stake_fail"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "24065-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions.Test_Stake.Test_Custodial.test_fail"}]}