{"name": "网络不支持赎回", "status": "failed", "statusDetails": {"message": "AssertionError: assert 1100000 == 2100000", "trace": "self = <test_stake_custodial_fail.Test_stake_success object at 0x107a235b0>, test_title = '网络不支持赎回'\nnetworkCode = 'DOGE', symbol = 'DOGE', type = 'un_stake', address = 'D9vakMz4cLhRXjjQyhSxMX7Wg3xmoFMeQ6'\namount = '0.0000001', status_code = 400, code = 2100000\n\n    @allure.story(\"Custodial Stake Fail!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,type,address,amount,status_code,code', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,type,address,amount,status_code,code):\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=address)\n            assert holder.status_code ==200\n    \n        with allure.step(\"查询账户staking信息\"):\n            staking = Http.HttpUtils.staking(networkCode,address)\n            assert staking.status_code == 200\n    \n        with allure.step(\"构建交易——instructions\"):\n            if type == \"claim\":\n                body = {\n                    \"networkCode\": networkCode,\n                    \"type\": type,\n                    \"body\": {\n                        \"delegator\":address,\n                        \"coinSymbol\":symbol\n                    },\n                    \"transactionParams\":{\n                        \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                    }\n                }\n            else:\n                body = {\n                    \"networkCode\": networkCode,\n                    \"type\": type,\n                    \"body\": {\n                        \"delegator\":address,\n                        \"coinSymbol\":symbol,\n                        \"amount\":amount\n                    },\n                    \"transactionParams\":{\n                        \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                    }\n                }\n    \n            stake = Http.HttpUtils.instructions(body)\n    \n            assert stake.status_code == status_code\n>           assert stake.json()[\"code\"] == code\nE           assert 1100000 == 2100000\n\nTestcase/Test_Cloud/Test_Stake/Test_Custodial/test_stake_custodial_fail.py:114: AssertionError"}, "steps": [{"name": "查询from账户holder信息", "status": "passed", "start": 1675929431786, "stop": 1675929431984}, {"name": "查询账户staking信息", "status": "passed", "start": 1675929431984, "stop": 1675929432200}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 1100000 == 2100000\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Stake/Test_Custodial/test_stake_custodial_fail.py\", line 114, in test_custodial\n    assert stake.json()[\"code\"] == code\n"}, "start": 1675929432200, "stop": 1675929432424}], "attachments": [{"name": "log", "source": "963f0e1f-5fa0-43be-940d-53fae9632ad9-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'网络不支持赎回'"}, {"name": "networkCode", "value": "'DOGE'"}, {"name": "symbol", "value": "'DOGE'"}, {"name": "type", "value": "'un_stake'"}, {"name": "address", "value": "'D9vakMz4cLhRXjjQyhSxMX7Wg3xmoFMeQ6'"}, {"name": "amount", "value": "'0.0000001'"}, {"name": "status_code", "value": "400"}, {"name": "code", "value": "2100000"}], "start": 1675929431786, "stop": 1675929432424, "uuid": "0a8f9a2f-2be5-4e3d-a224-b26a901ab8a9", "historyId": "99b7322b515b2f491167f4bf734d3854", "testCaseId": "ac4e75e203c8633f0adfd84543a62515", "fullName": "Testcase.Test_Cloud.Test_Stake.Test_Custodial.test_stake_custodial_fail.Test_stake_success#test_custodial", "labels": [{"name": "feature", "value": "Stake!"}, {"name": "story", "value": "Custodial Stake Fail!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Stake.Test_Custodial"}, {"name": "suite", "value": "test_stake_custodial_fail"}, {"name": "subSuite", "value": "Test_stake_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "1537-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Stake.Test_Custodial.test_stake_custodial_fail"}]}