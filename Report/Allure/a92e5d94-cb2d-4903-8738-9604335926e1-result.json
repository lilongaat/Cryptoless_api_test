{"name": "创建安全账户+payer激活", "status": "broken", "statusDetails": {"message": "Exception: 请求异常", "trace": "self = <test_create_success.Test_create_safe_account object at 0x10a552760>, test_title = '创建安全账户+payer激活'\nname = '安全账户Goerli2-2-1667985008'\npayer_prv = ['4d87c72cee9d4b257368f448f4f7406d0ce98947eb30fcaa8194319303534b13', '9ff56ed61c94b8af33481f27826ae574adfa2a9640d9e68b7115594fb16934e0']\npayer_pub = ['02e5230ff44191de07476a79c8908374bec9cb7eefb4218513379b0450cd0e381d', '022c8955ff17013456fd8b268afcc28dc091e65c6f217b5138d3b4d585924d7dda']\nPublicKeys = ['0244fb46bba2e912f26a73126b89742ed7f521f593ee084953ae008172553a0113', ''], networkCode = 'GOERLI'\n\n    @allure.story(\"Create Safe Account Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,name,payer_prv,payer_pub,PublicKeys,networkCode', test_data)\n    def test_create_account_safe(self, test_title, name, payer_prv, payer_pub, PublicKeys, networkCode):\n    \n        with allure.step(\"创建安全账户\"):\n            safe_account = Http.HttpUtils.create_safe_account(name,networkCode,PublicKeys[0],PublicKeys[1])\n            assert safe_account.status_code == 200\n            assert safe_account.json()[\"status\"] == \"inactive\"\n            id = safe_account.json()[\"id\"]\n            address = safe_account.json()[\"address\"]\n    \n        with allure.step(\"查询账户byid\"):\n            account_detail = Http.HttpUtils.get_account_byid(id)\n            assert account_detail.status_code == 200\n            assert account_detail.json()[\"address\"] == address\n            assert account_detail.json()[\"status\"] == \"inactive\"\n    \n        with allure.step(\"payer1创建激活安全账户交易\"):\n            activation1_safe_account = Http.HttpUtils.activation_safe_account(id,payer_pub[0])\n            assert activation1_safe_account.status_code == 200\n            id = activation1_safe_account.json()[\"transaction\"][\"id\"]\n            hash = activation1_safe_account.json()[\"transaction\"][\"requiredSignings\"][0][\"hash\"]\n            publickey = activation1_safe_account.json()[\"transaction\"][\"requiredSignings\"][0][\"publicKeys\"][0]\n    \n            signatures = {\n                    \"hash\":hash,\n                    \"publicKey\":publickey,\n                    \"signature\":Conf.Config.sign(payer_prv[0],hash)\n    \n                }\n    \n        with allure.step(\"签名交易——instructions\"):\n            sign = Http.HttpUtils.sign(id,signatures,\"\")\n            assert sign.status_code == 200\n            assert sign.json()[\"status\"] == \"SIGNED\"\n    \n        sleep(20)\n    \n        with allure.step(\"payer1创建激活安全账户交易\"):\n>           activation2_safe_account = Http.HttpUtils.activation_safe_account(id,payer_pub[0])\n\nTestcase/Test_Account/Test_Safe_Account/test_create_success.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nid = '1590270531181473794', payer = '02e5230ff44191de07476a79c8908374bec9cb7eefb4218513379b0450cd0e381d'\nAuthorization = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNTg1MTAyNzkxNDY2NDg3ODEwIiwiZXhwIjoxNjk4Mjg4OTM1LCJpYXQiOjE2NjY3NTI5MzUsInVzZXJJZCI6MTU4NTEwMjc5MTQ2NjQ4NzgxMH0.4o43r1upI2Qzcs46wf3gqb2Kq6kq0I7qGST6qPspfjY'\n\n    @staticmethod\n    # 激活安全账户\n    def activation_safe_account(id: str, payer: str, Authorization=token):\n        url = url_ + '/vault/accounts/activations'\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": Authorization\n        }\n        body = {\n            \"accountId\":id,\n            \"payer\": payer\n        }\n    \n        logger.info('\\n'+\"<-----Activation Safe Account------>\"+\"\\n\"+\"Url:\"+url+'\\n\\n'+'Headers:'+json.dumps(headers)+'\\n\\n'+'Body:'+json.dumps(body))\n        res = requests.post(url=url, json=body, headers=headers, timeout=timeout_)\n        if res.status_code == 200:\n            logger.info('\\n'+\"<-----Activation account Response----->\"+\"\\n\"+(res.text))\n            return res\n        else:\n            logger.error('\\n'+'<-----Activation account Response Error----->'+(res.text))\n>           raise Exception(\"请求异常\")\nE           Exception: 请求异常\n\nCommon/Http.py:233: Exception"}, "steps": [{"name": "创建安全账户", "status": "passed", "start": 1667985008980, "stop": 1667985014282}, {"name": "查询账户byid", "status": "passed", "start": 1667985014283, "stop": 1667985014695}, {"name": "payer1创建激活安全账户交易", "status": "passed", "start": 1667985014695, "stop": 1667985016425}, {"name": "签名交易——instructions", "status": "passed", "start": 1667985016425, "stop": 1667985016860}, {"name": "payer1创建激活安全账户交易", "status": "broken", "statusDetails": {"message": "Exception: 请求异常\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Account/Test_Safe_Account/test_create_success.py\", line 67, in test_create_account_safe\n    activation2_safe_account = Http.HttpUtils.activation_safe_account(id,payer_pub[0])\n  File \"/Users/lilong/Documents/Test_Api/Common/Http.py\", line 233, in activation_safe_account\n    raise Exception(\"请求异常\")\n"}, "start": 1667985036866, "stop": 1667985037147}], "attachments": [{"name": "log", "source": "97e04861-607c-450a-b760-854130b8d2df-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'创建安全账户+payer激活'"}, {"name": "name", "value": "'安全账户Goerli2-2-1667985008'"}, {"name": "payer_prv", "value": "['4d87c72cee9d4b257368f448f4f7406d0ce98947eb30fcaa8194319303534b13', '9ff56ed61c94b8af33481f27826ae574adfa2a9640d9e68b7115594fb16934e0']"}, {"name": "payer_pub", "value": "['02e5230ff44191de07476a79c8908374bec9cb7eefb4218513379b0450cd0e381d', '022c8955ff17013456fd8b268afcc28dc091e65c6f217b5138d3b4d585924d7dda']"}, {"name": "PublicKeys", "value": "['0244fb46bba2e912f26a73126b89742ed7f521f593ee084953ae008172553a0113', '']"}, {"name": "networkCode", "value": "'GOERLI'"}], "start": 1667985008980, "stop": 1667985037148, "uuid": "8f8f4af5-896a-4033-be9a-6d44ea7348dd", "historyId": "f53815c3e9be2f5a417012337a7bb2df", "testCaseId": "92c4dc8ca13a5bfecbfc89a8df792e60", "fullName": "Testcase.Test_Account.Test_Safe_Account.test_create_success.Test_create_safe_account#test_create_account_safe", "labels": [{"name": "story", "value": "Create Safe Account Success!"}, {"name": "feature", "value": "Create Safe Account!"}, {"name": "parentSuite", "value": "Testcase.Test_Account.Test_Safe_Account"}, {"name": "suite", "value": "test_create_success"}, {"name": "subSuite", "value": "Test_create_safe_account"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "13343-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Account.Test_Safe_Account.test_create_success"}]}