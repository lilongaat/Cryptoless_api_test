{"name": "MATIC多签账户转账nativecoin", "status": "broken", "statusDetails": {"message": "KeyError: '_embedded'", "trace": "self = <test_safe_success.Test_transfer_success object at 0x103bebd00>, test_title = 'MATIC多签账户转账nativecoin'\nprivatekey = ['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da', '0fbde0fc6a050c10f98ea3fd2921d2b52780667eed2871a132b60c7aab3ff51d']\nnetworkCode = 'MATIC', symbol = 'MATIC', privatekey_relay = 'bb719944343ce55509268baac8ae4c748064ce81cbebbb11064c1c75ff96dcd7'\npublickey_relay = '025c380e0b51894f3593a803fa38c79b4ac004f27c1d8ebd5567828a6d1634654e'\naddress_relay = '0x10f564F105Ba1DeC06087FE09329959dbD6b862D', fromaddress = '0x6490C1b13A4576128159576F9d3acadF79e8dd6f'\ntoaddress = '0xe525e7cd17f6dc950492755a089e452fd5d9d44f', amount = '0.0001'\n\n    @allure.story(\"Transfer Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,privatekey,networkCode,symbol,privatekey_relay,publickey_relay,address_relay,fromaddress,toaddress,amount', test_data)\n    def test_custodial(self,test_title,privatekey,networkCode,symbol,privatekey_relay,publickey_relay,address_relay,fromaddress,toaddress,amount):\n    \n        with allure.step(\"Instruction交易\"):\n            body = {\n                    \"networkCode\": networkCode,\n                    \"body\": {\n                        \"from\": fromaddress,\n                        \"to\": toaddress,\n                        \"symbol\":symbol,\n                        \"amount\": amount\n                    },\n                    \"agentPublicKey\":publickey_relay,\n                    \"type\": \"TRANSFER\"\n                }\n    \n            ts = Httpcore.HttpCoreUtils.core_instructions(body)\n            assert ts.status_code == 200\n            id = ts.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n            requiredSignings = ts.json()[\"_embedded\"][\"transactions\"][0][\"requiredSignings\"]\n            signatures = []\n            for i in range(len(requiredSignings)):\n                hash = requiredSignings[i][\"hash\"]\n                publickey = requiredSignings[i][\"publicKeys\"][0]\n                signature = {\n                    \"hash\":hash,\n                    \"publicKey\":publickey,\n                    \"signature\":Conf.Config.sign(privatekey[0],hash)\n    \n                }\n                signatures.append(signature)\n    \n        with allure.step(\"Sign交易\"):\n            sign = Httpcore.HttpCoreUtils.core_sign(id,signatures)\n            assert sign.status_code == 200\n>           id_ = sign.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\nE           KeyError: '_embedded'\n\nTestcasecore/Test_Instructions/Test_transfer/Test_EVM/test_safe_success.py:69: KeyError"}, "steps": [{"name": "Instruction交易", "status": "passed", "start": 1670411017733, "stop": 1670411020484}, {"name": "Sign交易", "status": "broken", "statusDetails": {"message": "KeyError: '_embedded'\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcasecore/Test_Instructions/Test_transfer/Test_EVM/test_safe_success.py\", line 69, in test_custodial\n    id_ = sign.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n"}, "start": 1670411020484, "stop": 1670411020690}], "attachments": [{"name": "log", "source": "2ef2fa0e-02f2-403a-b6fe-9e786ecbcf05-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'MATIC多签账户转账nativecoin'"}, {"name": "privatekey", "value": "['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da', '0fbde0fc6a050c10f98ea3fd2921d2b52780667eed2871a132b60c7aab3ff51d']"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "symbol", "value": "'MATIC'"}, {"name": "privatekey_relay", "value": "'bb719944343ce55509268baac8ae4c748064ce81cbebbb11064c1c75ff96dcd7'"}, {"name": "publickey_relay", "value": "'025c380e0b51894f3593a803fa38c79b4ac004f27c1d8ebd5567828a6d1634654e'"}, {"name": "address_relay", "value": "'0x10f564F105Ba1DeC06087FE09329959dbD6b862D'"}, {"name": "fromaddress", "value": "'0x6490C1b13A4576128159576F9d3acadF79e8dd6f'"}, {"name": "toaddress", "value": "'0xe525e7cd17f6dc950492755a089e452fd5d9d44f'"}, {"name": "amount", "value": "'0.0001'"}], "start": 1670411017733, "stop": 1670411020691, "uuid": "1c8a20e4-ba54-456b-b599-4107d0734f74", "historyId": "c7f850f52425574d52264c7e6efd2237", "testCaseId": "5344654084307d5bf1cb9781ac31c676", "fullName": "Testcasecore.Test_Instructions.Test_transfer.Test_EVM.test_safe_success.Test_transfer_success#test_custodial", "labels": [{"name": "story", "value": "Transfer Success!"}, {"name": "feature", "value": "Transfer Success!"}, {"name": "parentSuite", "value": "Testcasecore.Test_Instructions.Test_transfer.Test_EVM"}, {"name": "suite", "value": "test_safe_success"}, {"name": "subSuite", "value": "Test_transfer_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "13884-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcasecore.Test_Instructions.Test_transfer.Test_EVM.test_safe_success"}]}