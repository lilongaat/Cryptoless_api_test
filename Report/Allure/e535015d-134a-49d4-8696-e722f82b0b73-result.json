{"name": "Custodial账户IRIS质押手续费不足", "status": "broken", "statusDetails": {"message": "Exception: 请求异常", "trace": "self = <test_fail_send.Test_stake_fail object at 0x10712b220>, test_title = 'Custodial账户IRIS质押手续费不足', networkCode = 'IRIS', symbol = 'IRIS'\ntype = 'stake', address = 'iaa180qh39f68devetnda4t28drsrhgxnjha5eqhus', amount = '0.000001', status_check = 400, code_check = 2102001\n\n    @allure.story(\"Custodial_Stake_Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,type,address,amount,status_check,code_check', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,type,address,amount,status_check,code_check):\n    \n        with allure.step(\"构建交易——instructions\"):\n            if type == \"claim\":\n                body = {\n                    \"delegator\":address,\n                    \"coinSymbol\":symbol,\n                }\n            else:\n                body = {\n                    \"delegator\":address,\n                    \"coinSymbol\":symbol,\n                    \"amount\":amount\n                }\n            transactionParams = {\n                \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n            }\n            stake = Http.HttpUtils.instructions(type,body,networkCode,[],transactionParams)\n            assert stake.status_code == 200\n            assert stake.json()[\"_embedded\"][\"transactions\"][0][\"status\"] == \"SIGNED\"\n    \n            id = stake.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n    \n        with allure.step(\"广播交易\"):\n>           send = Http.HttpUtils.send(id)\n\nTestcase/Test_Instructions/Test_Stake/Test_Custodial/test_fail_send.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nid = '1590957611184275457'\nAuthorization = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNTg1MTAyNzkxNDY2NDg3ODEwIiwiZXhwIjoxNjk5NjAyNjg2LCJpYXQiOjE2NjgwNjY2ODYsInVzZXJJZCI6MTU4NTEwMjc5MTQ2NjQ4NzgxMH0.crnXQzc0JOD7wPow9R3P3-uZrJmzOeUF6WOqy5OhxqY'\n\n    @staticmethod\n    # send\n    def send(id: str, Authorization=token):\n        url = url_ + \"/vault/transactions/\" + id\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": Authorization\n        }\n    \n        logger.info('\\n'+\"<-----Send----->\"+\"\\n\"+\"Url:\"+url+'\\n\\n'+'Headers:'+json.dumps(headers)+'\\n\\n')\n    \n        res = requests.patch(url=url, headers=headers, timeout=timeout_)\n        if res.status_code == 200:\n            logger.info('\\n'+\"<-----Send Response----->\"+\"\\n\"+(res.text))\n            return res\n        else:\n            logger.info('\\n'+\"<-----Send Response Error----->\"+\"\\n\"+str(res.status_code)+\"\\n\"+(res.text))\n>           raise Exception(\"请求异常\")\nE           Exception: 请求异常\n\nCommon/Http.py:649: Exception"}, "steps": [{"name": "构建交易——instructions", "status": "passed", "start": 1668148827281, "stop": 1668148831513}, {"name": "广播交易", "status": "broken", "statusDetails": {"message": "Exception: 请求异常\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions/Test_Stake/Test_Custodial/test_fail_send.py\", line 64, in test_custodial\n    send = Http.HttpUtils.send(id)\n  File \"/Users/lilong/Documents/Test_Api/Common/Http.py\", line 649, in send\n    raise Exception(\"请求异常\")\n"}, "start": 1668148831513, "stop": 1668148832004}], "attachments": [{"name": "log", "source": "a90427f8-918e-44c7-b0b9-817ddb6939e5-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'Custodial账户IRIS质押手续费不足'"}, {"name": "networkCode", "value": "'IRIS'"}, {"name": "symbol", "value": "'IRIS'"}, {"name": "type", "value": "'stake'"}, {"name": "address", "value": "'iaa180qh39f68devetnda4t28drsrhgxnjha5eqhus'"}, {"name": "amount", "value": "'0.000001'"}, {"name": "status_check", "value": "400"}, {"name": "code_check", "value": "2102001"}], "start": 1668148827281, "stop": 1668148832007, "uuid": "123f7f55-1da5-4650-bf8e-fc1dfe94a102", "historyId": "ee936d12f1aa6b8ccc6e7dc15d3eb4b8", "testCaseId": "be3100f8b8376e5e2d1e0aadbd9fcf0e", "fullName": "Testcase.Test_Instructions.Test_Stake.Test_Custodial.test_fail_send.Test_stake_fail#test_custodial", "labels": [{"name": "story", "value": "Custodial_Stake_Success!"}, {"name": "feature", "value": "Stake_Fail!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions.Test_Stake.Test_Custodial"}, {"name": "suite", "value": "test_fail_send"}, {"name": "subSuite", "value": "Test_stake_fail"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "24953-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions.Test_Stake.Test_Custodial.test_fail_send"}]}