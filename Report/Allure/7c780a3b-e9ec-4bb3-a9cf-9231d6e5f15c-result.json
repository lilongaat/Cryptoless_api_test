{"name": "Custodial账户质押金额大于余额", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2102001 == 2400000", "trace": "self = <test_fail.Test_stake_fail object at 0x105246880>, test_title = 'Custodial账户质押金额大于余额', networkCode = 'IRIS', symbol = 'IRIS'\ntype = 'stake', address = 'iaa1vywcfmff44nlhud05nlzlpw0hrlxenptn9ff7r', amount = '100000', status_check = 400, code_check = 2400000\n\n    @allure.story(\"Custodial_Stake_Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,type,address,amount,status_check,code_check', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,type,address,amount,status_check,code_check):\n    \n        with allure.step(\"构建交易——instructions\"):\n            if type == \"claim\":\n                body = {\n                    \"delegator\":address,\n                    \"coinSymbol\":symbol,\n                }\n            else:\n                body = {\n                    \"delegator\":address,\n                    \"coinSymbol\":symbol,\n                    \"amount\":amount\n                }\n            transactionParams = {\n                \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n            }\n            stake = Http.HttpUtils.instructions(type,body,networkCode,[],transactionParams)\n    \n        with allure.step(\"交易断言\"):\n            assert stake.status_code == status_check\n>           assert stake.json()[\"code\"] == code_check\nE           assert 2102001 == 2400000\n\nTestcase/Test_Instructions/Test_Stake/Test_Custodial/test_fail.py:109: AssertionError"}, "steps": [{"name": "构建交易——instructions", "status": "passed", "start": 1668138069751, "stop": 1668138070285}, {"name": "交易断言", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2102001 == 2400000\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions/Test_Stake/Test_Custodial/test_fail.py\", line 109, in test_custodial\n    assert stake.json()[\"code\"] == code_check\n"}, "start": 1668138070285, "stop": 1668138070285}], "attachments": [{"name": "log", "source": "c6426598-6c50-4084-9895-3e0a1aaf3d7d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'Custodial账户质押金额大于余额'"}, {"name": "networkCode", "value": "'IRIS'"}, {"name": "symbol", "value": "'IRIS'"}, {"name": "type", "value": "'stake'"}, {"name": "address", "value": "'iaa1vywcfmff44nlhud05nlzlpw0hrlxenptn9ff7r'"}, {"name": "amount", "value": "'100000'"}, {"name": "status_check", "value": "400"}, {"name": "code_check", "value": "2400000"}], "start": 1668138069751, "stop": 1668138070285, "uuid": "3f718694-a9f3-4bb9-9d30-7d3feca22b28", "historyId": "e06d964762534845f6519f9ed18d39c5", "testCaseId": "c6ab16c88b5bfac0d9df421d5f02b8b5", "fullName": "Testcase.Test_Instructions.Test_Stake.Test_Custodial.test_fail.Test_stake_fail#test_custodial", "labels": [{"name": "story", "value": "Custodial_Stake_Success!"}, {"name": "feature", "value": "Stake_Fail!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions.Test_Stake.Test_Custodial"}, {"name": "suite", "value": "test_fail"}, {"name": "subSuite", "value": "Test_stake_fail"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "24065-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions.Test_Stake.Test_Custodial.test_fail"}]}