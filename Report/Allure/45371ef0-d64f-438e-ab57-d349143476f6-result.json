{"name": "GOERLI extarnal账户转账 erc20coin", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_success.Test_transfers_success object at 0x1061b0cd0>, test_title = 'GOERLI extarnal账户转账 erc20coin'\nnetworkCode = 'GOERLI', symbol = 'USDCC'\nprivatekey = 'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'\nfrom_add = '0xe525E7cd17f6Dc950492755A089E452fd5d9d44f', to_add = '0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2'\namount = '0.000123'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"查询账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n>           assert holder.status_code ==200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Transfer/Test_External/test_success.py:45: AssertionError"}, "steps": [{"name": "查询账户holder信息", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_External/test_success.py\", line 45, in test_custodial\n    assert holder.status_code ==200\n"}, "start": 1672312165497, "stop": 1672312195766}], "attachments": [{"name": "log", "source": "57c9bb94-5e16-499d-8f96-3f03490d123b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'GOERLI extarnal账户转账 erc20coin'"}, {"name": "networkCode", "value": "'GOERLI'"}, {"name": "symbol", "value": "'USDCC'"}, {"name": "privatekey", "value": "'dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'"}, {"name": "from_add", "value": "'0xe525E7cd17f6Dc950492755A089E452fd5d9d44f'"}, {"name": "to_add", "value": "'0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2'"}, {"name": "amount", "value": "'0.000123'"}], "start": 1672312165497, "stop": 1672312195768, "uuid": "419c8962-22d5-44d1-bffb-8e9b6805d03a", "historyId": "e32ff5e72adb9227bc6ad6096071ec64", "testCaseId": "2d895effda5c005c5782d6bc35b24852", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "story", "value": "Custodial Transfers Success!"}, {"name": "feature", "value": "Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "10176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_success"}]}