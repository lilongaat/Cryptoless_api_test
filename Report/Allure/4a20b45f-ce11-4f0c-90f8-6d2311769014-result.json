{"name": "MATIC extarnal账户转账nativecoin", "status": "broken", "statusDetails": {"message": "KeyError: '_embedded'", "trace": "self = <test_nonce_fail.Test_transfers_success object at 0x105e0ff40>, test_title = 'MATIC extarnal账户转账nativecoin'\nnetworkCode = 'MATIC', symbol = 'MATIC'\nprivatekey = '100e876b446ee8a356cf2fa8082e12d8b5ff6792aa8fac7a01b534163cbefc33'\nfrom_add = '0x9b532cf5f662e51ba643672797ad3ec1a60bb939', to_add = '0x3d7f18Ad2cEa9B59E54dFAf09b327C1CCd899591'\namount = '0.0000015'\n\n    @allure.story(\"External Transfers Nonce!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"BUILDING\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n    \n        with allure.step(\"rebuild交易\"):\n            params = {\n                \"nonce\":\"1\"\n            }\n            rebuildtx = Http.HttpUtils.rebuild(id,params)\n            assert rebuildtx.status_code == 200\n    \n>           requiredSignings = rebuildtx.json()[\"_embedded\"][\"transactions\"][0][\"requiredSignings\"]\nE           KeyError: '_embedded'\n\nTestcase/Test_Cloud/Test_Transfer/Test_External/test_nonce_fail.py:90: KeyError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1675334590167, "stop": 1675334591403}, {"name": "查询from账户holder信息", "status": "passed", "start": 1675334591403, "stop": 1675334591762}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1675334591762, "stop": 1675334591762}, {"name": "构建交易——instructions", "status": "passed", "start": 1675334591762, "stop": 1675334593836}, {"name": "rebuild交易", "status": "broken", "statusDetails": {"message": "KeyError: '_embedded'\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_External/test_nonce_fail.py\", line 90, in test_custodial\n    requiredSignings = rebuildtx.json()[\"_embedded\"][\"transactions\"][0][\"requiredSignings\"]\n"}, "start": 1675334593836, "stop": 1675334594859}], "attachments": [{"name": "log", "source": "50563676-6369-4c1b-8463-9ccdbfcfa478-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'MATIC extarnal账户转账nativecoin'"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "symbol", "value": "'MATIC'"}, {"name": "privatekey", "value": "'100e876b446ee8a356cf2fa8082e12d8b5ff6792aa8fac7a01b534163cbefc33'"}, {"name": "from_add", "value": "'0x9b532cf5f662e51ba643672797ad3ec1a60bb939'"}, {"name": "to_add", "value": "'0x3d7f18Ad2cEa9B59E54dFAf09b327C1CCd899591'"}, {"name": "amount", "value": "'0.0000015'"}], "start": 1675334590167, "stop": 1675334594860, "uuid": "9c8606b3-ff9b-4efe-9543-3770ab8b594d", "historyId": "de841e28ab16cf984753f569c38c885f", "testCaseId": "8dd814565af50bafecdd3f08529c8c22", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_nonce_fail.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers!"}, {"name": "story", "value": "External Transfers Nonce!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External"}, {"name": "suite", "value": "test_nonce_fail"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "18939-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_External.test_nonce_fail"}]}