{"name": "IRIS Custodial账户质押", "status": "broken", "statusDetails": {"message": "Exception: networkCode No support", "trace": "self = <test_stake_custodial_fail.Test_stake_success object at 0x10fbe46d0>, test_title = 'IRIS Custodial账户质押'\nnetworkCode = '', symbol = 'IRIS', type = 'stake', address = 'iaa1q2eql0hjd345tfxnzat6s7jfpwg3jansv8krwe'\namount = '0.0002', status_code = 400, code = 400\n\n    @allure.story(\"Custodial Stake Fail!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,type,address,amount,status_code,code', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,type,address,amount,status_code,code):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n>           balance = Httpexplore.Balances_explore.query(networkCode,address,symbol)\n\nTestcase/Test_Cloud/Test_Stake/Test_Custodial/test_stake_custodial_fail.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nnetworkCode = '', address = 'iaa1q2eql0hjd345tfxnzat6s7jfpwg3jansv8krwe', symbol = 'IRIS'\n\n    @staticmethod\n    def query(networkCode:str, address:str, symbol=\"USDC\"):\n        if networkCode == \"BTC\":\n            if env_type == 0:\n                response = BTC_Test.balance(address)\n                if response.status_code == 200:\n                    balance = (Decimal(response.json()[\"chain_stats\"][\"funded_txo_sum\"]) - Decimal(response.json()[\"chain_stats\"][\"spent_txo_sum\"]))/Decimal(10**8)\n                else:\n                    balance = None\n            elif env_type == 1:\n                response = BTC.balance(address)\n                if response.status_code == 200:\n                    balance = (Decimal(response.json()[\"chain_stats\"][\"funded_txo_sum\"]) - Decimal(response.json()[\"chain_stats\"][\"spent_txo_sum\"]))/Decimal(10**8)\n        elif networkCode == \"DOGE\":\n            response = DOGE.balance(address)\n            assert response.status_code == 200\n            balance = Decimal(str(response.json()))\n        elif networkCode == \"ETH\":\n            pass\n        elif networkCode == \"GOERLI\":\n            if symbol == \"GoerliETH\":\n                response = GOERLI.balance(address)\n                assert response.status_code == 200\n                balance = Decimal(str(response.json()[\"result\"]))/Decimal(10**18)\n            else:\n                if symbol == \"USDCC\":\n                    tokenaddress = \"0x1eC2CE6108240118Ff2c66eC8AFAC28618D7e066\"\n                response = GOERLI.balance_erc20(address,tokenaddress)\n                assert response.status_code == 200\n                balance = Decimal(str(response.json()[\"result\"]))/Decimal(10**18)\n        elif networkCode == \"BSC\":\n            if symbol == \"BNB\":\n                response = BSC.balance(address)\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n            else:\n                response = BSC.balance_erc20(address,\"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\")\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n        elif networkCode == \"MATIC\":\n            if symbol == \"MATIC\":\n                response = MATIC.balance(address)\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n            else:\n                if symbol == \"USDT\":\n                    tokenaddress = \"0xc2132D05D31c914a87C6611C10748AEb04B58e8F\"\n                elif symbol == \"USDC\":\n                    tokenaddress = \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\"\n                response = MATIC.balance_erc20(address,tokenaddress)\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**6)\n        elif networkCode == \"ATOM\":\n            response = ATOM.balance(address)\n            assert response.status_code == 200\n            balance_ = [b.get(\"amount\") for b in response.json()[\"balances\"] if b.get(\"denom\") == \"uatom\"]\n            balance = (Decimal(int(balance_[0]))/Decimal(10**6))\n        elif networkCode == \"IRIS\":\n            response = IRIS.balance(address)\n            assert response.status_code == 200\n            balance_detail = [b for b in response.json()[\"balances\"] if b.get(\"denom\") == \"uiris\"][0]\n            balance = Decimal(balance_detail[\"amount\"])/Decimal(10**6)\n        elif networkCode == \"CLV\":\n            if env_type == 1:\n                response = CLV.balance(address)\n                assert response.status_code == 200\n                balance_detail = [b for b in response.json()[\"data\"][\"native\"] if b.get(\"symbol\") == \"CLV\"][0]\n                balance = (Decimal(balance_detail[\"balance\"]) - Decimal(balance_detail[\"lock\"]) - Decimal(balance_detail[\"reserved\"]))/Decimal(10**18)\n            elif env_type == 0:\n                response = CLV_Test.balance(address)\n                assert response.status_code == 200\n                balance_detail = [b for b in response.json()[\"data\"][\"native\"] if b.get(\"symbol\") == \"CLV\"][0]\n                balance = (Decimal(balance_detail[\"balance\"]) - Decimal(balance_detail[\"lock\"]) - Decimal(balance_detail[\"reserved\"]))/Decimal(10**18)\n        else:\n>           raise Exception(\"networkCode No support\")\nE           Exception: networkCode No support\n\nCommon/Httpexplore.py:591: Exception"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "broken", "statusDetails": {"message": "Exception: networkCode No support\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Stake/Test_Custodial/test_stake_custodial_fail.py\", line 65, in test_custodial\n    balance = Httpexplore.Balances_explore.query(networkCode,address,symbol)\n  File \"/Users/lilong/Documents/Test_Api/Common/Httpexplore.py\", line 591, in query\n    raise Exception(\"networkCode No support\")\n"}, "start": 1675927472773, "stop": 1675927472773}], "parameters": [{"name": "test_title", "value": "'IRIS Custodial账户质押'"}, {"name": "networkCode", "value": "''"}, {"name": "symbol", "value": "'IRIS'"}, {"name": "type", "value": "'stake'"}, {"name": "address", "value": "'iaa1q2eql0hjd345tfxnzat6s7jfpwg3jansv8krwe'"}, {"name": "amount", "value": "'0.0002'"}, {"name": "status_code", "value": "400"}, {"name": "code", "value": "400"}], "start": 1675927472773, "stop": 1675927472776, "uuid": "6e730346-a03b-4008-9659-027c824176d0", "historyId": "5b627615df67fb0ce962676b6eecd25a", "testCaseId": "ac4e75e203c8633f0adfd84543a62515", "fullName": "Testcase.Test_Cloud.Test_Stake.Test_Custodial.test_stake_custodial_fail.Test_stake_success#test_custodial", "labels": [{"name": "story", "value": "Custodial Stake Fail!"}, {"name": "feature", "value": "Stake!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Stake.Test_Custodial"}, {"name": "suite", "value": "test_stake_custodial_fail"}, {"name": "subSuite", "value": "Test_stake_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "7125-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Stake.Test_Custodial.test_stake_custodial_fail"}]}