{"name": "IRIS Custodial账户质押数量超过余额", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2102001 == 230000", "trace": "self = <test_stake_custodial_fail.Test_stake_success object at 0x111fb8640>, test_title = 'IRIS Custodial账户质押数量超过余额'\nnetworkCode = 'IRIS', symbol = 'IRIS', type = 'stake', address = 'iaa1q2eql0hjd345tfxnzat6s7jfpwg3jansv8krwe'\namount = '10000', status_code = 400, code = 230000\n\n    @allure.story(\"Custodial Stake Fail!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,type,address,amount,status_code,code', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,type,address,amount,status_code,code):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,address,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=address)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n            del balance,quantity\n    \n        with allure.step(\"查询账户staking信息\"):\n            staking = Http.HttpUtils.staking(networkCode,address)\n            assert staking.status_code == 200\n    \n        with allure.step(\"构建交易——instructions\"):\n            if type == \"claim\":\n                body = {\n                    \"networkCode\": networkCode,\n                    \"type\": type,\n                    \"body\": {\n                        \"delegator\":address,\n                        \"coinSymbol\":symbol\n                    },\n                    \"transactionParams\":{\n                        \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                    }\n                }\n            else:\n                body = {\n                    \"networkCode\": networkCode,\n                    \"type\": type,\n                    \"body\": {\n                        \"delegator\":address,\n                        \"coinSymbol\":symbol,\n                        \"amount\":amount\n                    },\n                    \"transactionParams\":{\n                        \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                    }\n                }\n    \n            stake = Http.HttpUtils.instructions(body)\n    \n            assert stake.status_code == status_code\n>           assert stake.json()[\"code\"] == code\nE           assert 2102001 == 230000\n\nTestcase/Test_Cloud/Test_Stake/Test_Custodial/test_stake_custodial_fail.py:112: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1675915134932, "stop": 1675915137798}, {"name": "查询from账户holder信息", "status": "passed", "start": 1675915137798, "stop": 1675915138211}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1675915138211, "stop": 1675915138211}, {"name": "查询账户staking信息", "status": "passed", "start": 1675915138211, "stop": 1675915139233}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2102001 == 230000\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Stake/Test_Custodial/test_stake_custodial_fail.py\", line 112, in test_custodial\n    assert stake.json()[\"code\"] == code\n"}, "start": 1675915139233, "stop": 1675915139746}], "attachments": [{"name": "log", "source": "5519318b-c6eb-4a9e-ae78-5ede0174aaee-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'IRIS Custodial账户质押数量超过余额'"}, {"name": "networkCode", "value": "'IRIS'"}, {"name": "symbol", "value": "'IRIS'"}, {"name": "type", "value": "'stake'"}, {"name": "address", "value": "'iaa1q2eql0hjd345tfxnzat6s7jfpwg3jansv8krwe'"}, {"name": "amount", "value": "'10000'"}, {"name": "status_code", "value": "400"}, {"name": "code", "value": "230000"}], "start": 1675915134932, "stop": 1675915139746, "uuid": "8174071d-3f11-4e2b-8e37-e33fe6224bc1", "historyId": "c08df0bf29a9e4854bbf13b795b0efe1", "testCaseId": "ac4e75e203c8633f0adfd84543a62515", "fullName": "Testcase.Test_Cloud.Test_Stake.Test_Custodial.test_stake_custodial_fail.Test_stake_success#test_custodial", "labels": [{"name": "story", "value": "Custodial Stake Fail!"}, {"name": "feature", "value": "Stake!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Stake.Test_Custodial"}, {"name": "suite", "value": "test_stake_custodial_fail"}, {"name": "subSuite", "value": "Test_stake_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "6254-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Stake.Test_Custodial.test_stake_custodial_fail"}]}