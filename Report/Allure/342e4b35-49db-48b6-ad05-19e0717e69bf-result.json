{"name": "BTC多签账户账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_batch_multisig_success.Test_transfer_success object at 0x107f73880>, test_title = 'BTC多签账户账户转账'\nprivatekey = ['b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe', '320e15269f5d12054ff67dbe1e7984c6af2f58db8f4ca3f429e98fe6a01c9e47']\npublickey = ['02e8852463021b47fe5214c599e87e431f2eb1219044946bbff397afd0518b85a6', '0231e263a7e95bf5107b88b85b49918841b937305cce5dae7dd7ba9b86fc460f70']\nnetworkCode = 'BTC', fromaddress = 'tb1q4t8jtp4fwjg4spfjh7ux5ckhrallj652kwrj48gcvd0rt5g9ea3q4vlm33'\ntoaddress = ['tb1q0558s53xchyghw34tqm4x8t2n8swf666nvhffq', 'tb1qn0qrq4zfxjc89c773s6k86faym3ugpcje9eras', 'tb1qk50y4995th8tffhc90tz7533lygzwz57zxmhtj']\nvalue = ['100', '200', '300']\n\n    @allure.story(\"Transfer Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,privatekey,publickey,networkCode,fromaddress,toaddress,value', test_data)\n    def test_custodial(self,test_title,privatekey,publickey,networkCode,fromaddress,toaddress,value):\n    \n        with allure.step(\"查询地址UTXO\"):\n            utxo = Httpcore.HttpCoreUtils.query_utxo(networkCode,fromaddress)\n            assert utxo.status_code == 200\n            utxos = []\n            for i in range(len(utxo.json())):\n                utxo_ = {\n                    \"amount\": utxo.json()[i][\"value\"],\n                    \"witnessScript\": Conf.Config.witnessScript(publickey),\n                    \"signers\":publickey,\n                    \"txid\": utxo.json()[i][\"mintTxid\"],\n                    \"vout\": utxo.json()[i][\"mintIndex\"],\n                }\n                utxos.append(utxo_)\n    \n        with allure.step(\"Build交易\"):\n            recipients = []\n            for i in range(len(toaddress)):\n                recipient = {\n                    \"address\":toaddress[i],\n                    \"value\":value[i]\n                }\n                recipients.append(recipient)\n            body = {\n                    \"networkCode\": networkCode,\n                    \"payload\": {\n                        \"changer\": fromaddress,\n                        \"recipients\": recipients,\n                        \"utxos\": utxos\n                    },\n                    \"type\": \"TRANSACTION\"\n                }\n    \n            ts = Httpcore.HttpCoreUtils.core_build(body)\n            assert ts.status_code == 200\n            id = ts.json()[\"id\"]\n            requiredSignings = ts.json()[\"requiredSignings\"]\n    \n            signatures = []\n            for i in range(len(requiredSignings)):\n                hash = requiredSignings[i][\"hash\"]\n                for j in range(len(requiredSignings[i][\"publicKeys\"])):\n                    signature = {\n                        \"hash\":hash,\n                        \"publicKey\":requiredSignings[i][\"publicKeys\"][j],\n                        \"signature\":Conf.Config.sign(privatekey[j],hash)\n    \n                    }\n                    signatures.append(signature)\n    \n        with allure.step(\"Sign交易\"):\n            sign = Httpcore.HttpCoreUtils.core_sign(id,signatures)\n            assert sign.status_code == 200\n    \n        with allure.step(\"广播交易\"):\n            send = Httpcore.HttpCoreUtils.core_send(id)\n>           assert send.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcasecore/Test_Transactions/Test_Transfer/Test_Transfer_BTC/test_batch_multisig_success.py:88: AssertionError"}, "steps": [{"name": "查询地址UTXO", "status": "passed", "start": 1670207852047, "stop": 1670207852749}, {"name": "Build交易", "status": "passed", "start": 1670207852749, "stop": 1670207853040}, {"name": "Sign交易", "status": "passed", "start": 1670207853040, "stop": 1670207853284}, {"name": "广播交易", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcasecore/Test_Transactions/Test_Transfer/Test_Transfer_BTC/test_batch_multisig_success.py\", line 88, in test_custodial\n    assert send.status_code == 200\n"}, "start": 1670207853284, "stop": 1670207853543}], "attachments": [{"name": "log", "source": "83cfb2ba-3fea-4a57-90c4-519657d90202-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'BTC多签账户账户转账'"}, {"name": "privatekey", "value": "['b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe', '320e15269f5d12054ff67dbe1e7984c6af2f58db8f4ca3f429e98fe6a01c9e47']"}, {"name": "publickey", "value": "['02e8852463021b47fe5214c599e87e431f2eb1219044946bbff397afd0518b85a6', '0231e263a7e95bf5107b88b85b49918841b937305cce5dae7dd7ba9b86fc460f70']"}, {"name": "networkCode", "value": "'BTC'"}, {"name": "fromaddress", "value": "'tb1q4t8jtp4fwjg4spfjh7ux5ckhrallj652kwrj48gcvd0rt5g9ea3q4vlm33'"}, {"name": "toaddress", "value": "['tb1q0558s53xchyghw34tqm4x8t2n8swf666nvhffq', 'tb1qn0qrq4zfxjc89c773s6k86faym3ugpcje9eras', 'tb1qk50y4995th8tffhc90tz7533lygzwz57zxmhtj']"}, {"name": "value", "value": "['100', '200', '300']"}], "start": 1670207852047, "stop": 1670207853544, "uuid": "4d816297-0446-40d3-b776-8d4cf6e23fcc", "historyId": "1d4740936289408293e4a2084e3f0814", "testCaseId": "7e0822cba809d9bd5cb315a6dbdaba34", "fullName": "Testcasecore.Test_Transactions.Test_Transfer.Test_Transfer_BTC.test_batch_multisig_success.Test_transfer_success#test_custodial", "labels": [{"name": "feature", "value": "Transfer Success!"}, {"name": "story", "value": "Transfer Success!"}, {"name": "parentSuite", "value": "Testcasecore.Test_Transactions.Test_Transfer.Test_Transfer_BTC"}, {"name": "suite", "value": "test_batch_multisig_success"}, {"name": "subSuite", "value": "Test_transfer_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "4032-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcasecore.Test_Transactions.Test_Transfer.Test_Transfer_BTC.test_batch_multisig_success"}]}