{"name": "BTC extarnal账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'BUILDING' == 'SIGNED'\n  - SIGNED\n  + BUILDING", "trace": "self = <test_success.Test_transfers_success object at 0x1082472b0>, test_title = 'BTC extarnal账户转账'\nnetworkCode = 'BTC', symbol = 'BTC', privatekey = 'b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe'\nfrom_add = 'tb1qhcuul2fcyv5rvr5mc5cy5saz0q5p3kx0gsy3c0', to_add = 'tb1qagkvxdz2zq76atvr0rzh8n9lewjmlm25umq0xq'\namount = '0.000008'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n>           assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"SIGNED\"\nE           AssertionError: assert 'BUILDING' == 'SIGNED'\nE             - SIGNED\nE             + BUILDING\n\nTestcase/Test_Instructions_new/Test_Transfer/Test_External/test_success.py:53: AssertionError"}, "steps": [{"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'BUILDING' == 'SIGNED'\n  - SIGNED\n  + BUILDING\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions_new/Test_Transfer/Test_External/test_success.py\", line 53, in test_custodial\n    assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"SIGNED\"\n"}, "start": 1670833478240, "stop": 1670833479309}], "attachments": [{"name": "log", "source": "ac83eb58-0d9d-4622-882d-feb54ee3e2f1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'BTC extarnal账户转账'"}, {"name": "networkCode", "value": "'BTC'"}, {"name": "symbol", "value": "'BTC'"}, {"name": "privatekey", "value": "'b61190f8b2fcb4754ff8527f083bb3df68bf89285d7c5e428276f5f4572b7abe'"}, {"name": "from_add", "value": "'tb1qhcuul2fcyv5rvr5mc5cy5saz0q5p3kx0gsy3c0'"}, {"name": "to_add", "value": "'tb1qagkvxdz2zq76atvr0rzh8n9lewjmlm25umq0xq'"}, {"name": "amount", "value": "'0.000008'"}], "start": 1670833478240, "stop": 1670833479310, "uuid": "ad6fc14d-022d-4edf-a9c4-8e92261ab302", "historyId": "861da461e15da9670b4ac55292061fb0", "testCaseId": "5630cc46eaecad9ce8c9c36f1e5a8c39", "fullName": "Testcase.Test_Instructions_new.Test_Transfer.Test_External.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions_new.Test_Transfer.Test_External"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "9504-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions_new.Test_Transfer.Test_External.test_success"}]}