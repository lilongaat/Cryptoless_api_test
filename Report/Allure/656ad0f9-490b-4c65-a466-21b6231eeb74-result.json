{"name": "MATIC Custodial账户转账 nativecoin", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_success.Test_transfers_success object at 0x1084a6040>, test_title = 'MATIC Custodial账户转账 nativecoin'\nnetworkCode = 'MATIC', symbol = 'MATIC', from_add = '0xa7a9e710f9a3b4184d4f8b7d379cec262f2382c2'\nto_add = '0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2', amount = '0.00012'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,from_add,to_add,amount):\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"SIGNED\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n    \n        with allure.step(\"广播交易\"):\n            send = Http.HttpUtils.send(id)\n>           assert send.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Instructions_new/Test_Transfer/Test_Custodial/Test_EVM/test_success.py:60: AssertionError"}, "steps": [{"name": "构建交易——instructions", "status": "passed", "start": 1670655465997, "stop": 1670655471749}, {"name": "广播交易", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions_new/Test_Transfer/Test_Custodial/Test_EVM/test_success.py\", line 60, in test_custodial\n    assert send.status_code == 200\n"}, "start": 1670655471749, "stop": 1670655471958}], "attachments": [{"name": "log", "source": "68bd6903-9717-457b-b510-c9cf370c8ba4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'MATIC Custodial账户转账 nativecoin'"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "symbol", "value": "'MATIC'"}, {"name": "from_add", "value": "'0xa7a9e710f9a3b4184d4f8b7d379cec262f2382c2'"}, {"name": "to_add", "value": "'0xa7A9E710f9A3B4184D4F8B7d379CEC262f2382c2'"}, {"name": "amount", "value": "'0.00012'"}], "start": 1670655465997, "stop": 1670655471962, "uuid": "80349c8e-a852-4e16-876a-478a8b6f1e66", "historyId": "f3ca9980cae54b8b5e0cadea5cde49ed", "testCaseId": "ae604a14ceabf55ce92ebfecc146de0d", "fullName": "Testcase.Test_Instructions_new.Test_Transfer.Test_Custodial.Test_EVM.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions_new.Test_Transfer.Test_Custodial.Test_EVM"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "4337-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions_new.Test_Transfer.Test_Custodial.Test_EVM.test_success"}]}