{"name": "CLV Custodial账户转账", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not subscriptable", "trace": "self = <test_success.Test_transfers_success object at 0x10eb67b50>, test_title = 'CLV Custodial账户转账'\nnetworkCode = 'CLV', symbol = 'CLV', from_add = '5DNA4hJL6YLKFwajJpPsvYW3ne9SRYcCminoYVMhKiThmBmc'\nto_add = '5CAG6GuiuzFFbXR2fHhkqvuMRL7yVaj75tJpgKChA4EJELvH', amount = '0.00012'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n>           balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n\nTestcase/Test_Cloud/Test_Transfer/Test_Custodial/test_success.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nnetworkCode = 'CLV', address = '5DNA4hJL6YLKFwajJpPsvYW3ne9SRYcCminoYVMhKiThmBmc', symbol = 'CLV'\n\n    @staticmethod\n    def query(networkCode:str, address:str, symbol=\"USDC\"):\n        if networkCode == \"BTC\":\n                    pass\n        elif networkCode == \"DOGE\":\n            response = DOGE.balance(address)\n            assert response.status_code == 200\n            balance = Decimal(str(response.json()))\n        elif networkCode == \"ETH\":\n            pass\n        elif networkCode == \"BSC\":\n            if symbol == \"BNB\":\n                response = BSC.balance(address)\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n            else:\n                response = BSC.balance_erc20(address,\"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\")\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n        elif networkCode == \"MATIC\":\n            if symbol == \"MATIC\":\n                response = MATIC.balance(address)\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**18)\n            else:\n                response = MATIC.balance_erc20(address,\"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\")\n                assert response.status_code == 200\n                balance = Decimal(response.json()[\"result\"])/Decimal(10**6)\n        elif networkCode == \"ATOM\":\n            response = ATOM.balance(address)\n            assert response.status_code == 200\n            balance_ = [b.get(\"amount\") for b in response.json()[\"balances\"] if b.get(\"denom\") == \"uatom\"]\n            balance = (Decimal(int(balance_[0]))/Decimal(10**6))\n        elif networkCode == \"IRIS\":\n            response = IRIS.balance(address)\n            assert response.status_code == 200\n            balance_detail = [b for b in response.json()[\"balances\"] if b.get(\"denom\") == \"uiris\"][0]\n            balance = Decimal(balance_detail[\"amount\"])/Decimal(10**6)\n        elif networkCode == \"CLV\":\n            response = CLV.balance(address)\n            assert response.status_code == 200\n>           balance_detail = [b for b in response.json()[\"data\"][\"native\"] if b.get(\"symbol\") == \"CLV\"][0]\nE           TypeError: 'NoneType' object is not subscriptable\n\nCommon/Httpexplore.py:454: TypeError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not subscriptable\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_Custodial/test_success.py\", line 72, in test_custodial\n    balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n  File \"/Users/lilong/Documents/Test_Api/Common/Httpexplore.py\", line 454, in query\n    balance_detail = [b for b in response.json()[\"data\"][\"native\"] if b.get(\"symbol\") == \"CLV\"][0]\n"}, "start": 1672889210089, "stop": 1672889210669}], "attachments": [{"name": "log", "source": "5803af08-fb19-4a00-abba-d2bb68eb7673-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'CLV Custodial账户转账'"}, {"name": "networkCode", "value": "'CLV'"}, {"name": "symbol", "value": "'CLV'"}, {"name": "from_add", "value": "'5DNA4hJL6YLKFwajJpPsvYW3ne9SRYcCminoYVMhKiThmBmc'"}, {"name": "to_add", "value": "'5CAG6GuiuzFFbXR2fHhkqvuMRL7yVaj75tJpgKChA4EJELvH'"}, {"name": "amount", "value": "'0.00012'"}], "start": 1672889210088, "stop": 1672889210671, "uuid": "73b1c693-24bf-40d8-8578-cd3859c1b92f", "historyId": "407311a42cfc767ce4a395dc0fc8bf9f", "testCaseId": "19b7a47abb98a457c189c4a8c9ed58a8", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_Custodial.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "story", "value": "Custodial Transfers Success!"}, {"name": "feature", "value": "Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Custodial"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "8446-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Custodial.test_success"}]}