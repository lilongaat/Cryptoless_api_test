{"name": "正常SWAP(MATIC-USDC)", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_success_sc.Test_swap_success object at 0x10226d130>, test_title = '正常SWAP(MATIC-USDC)'\nprivatekey = ['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'], networkCode = 'MATIC', from_coin = 'MATIC'\nto_coin = 'USDC', address = '0xe525E7cd17f6Dc950492755A089E452fd5d9d44f', slippage = '1', fromAmount = '0.0002'\n\n    @allure.story(\"External_Swap_Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,privatekey,networkCode,from_coin,to_coin,address,slippage,fromAmount', test_data)\n    def test_external(self,test_title,privatekey,networkCode,from_coin,to_coin,address,slippage,fromAmount):\n    \n        with allure.step(\"查询账户from_coin holders信息——holders\"):\n            holders = Http.HttpUtils.get_holders(networkCode,from_coin,address)\n            assert holders.status_code == 200\n    \n        with allure.step(\"查询账户to_coin holders信息——holders\"):\n            holders = Http.HttpUtils.get_holders(networkCode,to_coin,address)\n            assert holders.status_code == 200\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"from\":from_coin,\n                \"to\":to_coin,\n                \"address\":address,\n                \"fromAmount\":fromAmount,\n                \"slippage\":slippage\n            }\n            transactionParams = {\n                \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n            }\n            transfer = Http.HttpUtils.instructions(\"swap\",body,networkCode,[],transactionParams)\n    \n>           assert transfer.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Instructions/Test_Swap/Test_External/test_success_sc.py:65: AssertionError"}, "steps": [{"name": "查询账户from_coin holders信息——holders", "status": "passed", "start": 1667790255392, "stop": 1667790256231}, {"name": "查询账户to_coin holders信息——holders", "status": "passed", "start": 1667790256232, "stop": 1667790256662}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions/Test_Swap/Test_External/test_success_sc.py\", line 65, in test_external\n    assert transfer.status_code == 200\n"}, "start": 1667790256662, "stop": 1667790257624}], "attachments": [{"name": "log", "source": "2c3c94e4-5d53-4136-97c6-917b35e1425b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'正常SWAP(MATIC-USDC)'"}, {"name": "privatekey", "value": "['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da']"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "from_coin", "value": "'MATIC'"}, {"name": "to_coin", "value": "'USDC'"}, {"name": "address", "value": "'0xe525E7cd17f6Dc950492755A089E452fd5d9d44f'"}, {"name": "slippage", "value": "'1'"}, {"name": "fromAmount", "value": "'0.0002'"}], "start": 1667790255392, "stop": 1667790257624, "uuid": "99318e8c-ce2a-4a0d-93cd-823666c2846e", "historyId": "51e31f421ebd7b341c1bd5cb5f3d5a6d", "testCaseId": "a198ec482161894c5d6ca338eac858d3", "fullName": "Testcase.Test_Instructions.Test_Swap.Test_External.test_success_sc.Test_swap_success#test_external", "labels": [{"name": "story", "value": "External_Swap_Success!"}, {"name": "feature", "value": "Swap_Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions.Test_Swap.Test_External"}, {"name": "suite", "value": "test_success_sc"}, {"name": "subSuite", "value": "Test_swap_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "18026-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions.Test_Swap.Test_External.test_success_sc"}]}