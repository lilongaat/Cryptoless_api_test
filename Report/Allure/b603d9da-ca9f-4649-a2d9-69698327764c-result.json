{"name": "MATIC safe2-3 SWAP:MATIC->USDC", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_swap_safe_success.Test_transfers_success object at 0x105a55c10>\ntest_title = 'MATIC safe2-3 SWAP:MATIC->USDC', networkCode = 'MATIC'\nprivatekey = '100e876b446ee8a356cf2fa8082e12d8b5ff6792aa8fac7a01b534163cbefc33'\naddress = '0xa2109b6a714bb32854f4b9db01859b3b7f092088', from_coin = 'MATIC', to_coin = 'USDC', slippage = '1'\nfromamount = '0.00012'\n\n    @allure.story(\"Safe Swap Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,privatekey,address,from_coin,to_coin,slippage,fromamount', test_data)\n    def test_custodial(self,test_title,networkCode,privatekey,address,from_coin,to_coin,slippage,fromamount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,address,from_coin)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=from_coin,address=address)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n    \n        with allure.step(\"core构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"swap\",\n                \"body\":{\n                    \"address\":address,\n                    \"from\":from_coin,\n                    \"to\":to_coin,\n                    \"fromAmount\":fromamount,\n                    \"slippage\":slippage\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"SIGNING\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n            requiredSignings = transfer.json()[\"_embedded\"][\"transactions\"][0][\"requiredSignings\"]\n            signatures = []\n            for i in range(len(requiredSignings)):\n                hash = requiredSignings[i][\"hash\"]\n                publickey = requiredSignings[i][\"publicKeys\"][0]\n                signature = {\n                    \"hash\":hash,\n                    \"publicKey\":publickey,\n                    \"signature\":Conf.Config.sign(privatekey,hash)\n    \n                }\n                signatures.append(signature)\n    \n        with allure.step(\"签名交易\"):\n            sign = Http.HttpUtils.sign(id,signatures)\n            assert sign.status_code == 200\n    \n        with allure.step(\"广播交易\"):\n            send = Http.HttpUtils.send(id)\n>           assert send.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Cloud/Test_Swap/Test_Safe/test_swap_safe_success.py:95: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1675935616965, "stop": 1675935618286}, {"name": "查询from账户holder信息", "status": "passed", "start": 1675935618286, "stop": 1675935618583}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1675935618583, "stop": 1675935618583}, {"name": "core构建交易——instructions", "status": "passed", "start": 1675935618584, "stop": 1675935621668}, {"name": "签名交易", "status": "passed", "start": 1675935621668, "stop": 1675935624842}, {"name": "广播交易", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Swap/Test_Safe/test_swap_safe_success.py\", line 95, in test_custodial\n    assert send.status_code == 200\n"}, "start": 1675935624842, "stop": 1675935625357}], "attachments": [{"name": "log", "source": "4696cb85-9515-485e-89f8-9b6c894ff4f2-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'MATIC safe2-3 SWAP:MATIC->USDC'"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "privatekey", "value": "'100e876b446ee8a356cf2fa8082e12d8b5ff6792aa8fac7a01b534163cbefc33'"}, {"name": "address", "value": "'0xa2109b6a714bb32854f4b9db01859b3b7f092088'"}, {"name": "from_coin", "value": "'MATIC'"}, {"name": "to_coin", "value": "'USDC'"}, {"name": "slippage", "value": "'1'"}, {"name": "fromamount", "value": "'0.00012'"}], "start": 1675935616965, "stop": 1675935625358, "uuid": "b123a896-e0c1-4c4e-9594-719060a2cf8d", "historyId": "15da1b86657d8b0bb7e822e574c86ec2", "testCaseId": "509b729010926a9b8bff65fa9eb9772a", "fullName": "Testcase.Test_Cloud.Test_Swap.Test_Safe.test_swap_safe_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Swap!"}, {"name": "story", "value": "Safe Swap Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Swap.Test_Safe"}, {"name": "suite", "value": "test_swap_safe_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "3621-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Swap.Test_Safe.test_swap_safe_success"}]}