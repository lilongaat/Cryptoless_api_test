{"name": "IRIS 2-2shared账户转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert Decimal('0.386327') == Decimal('0.406342')", "trace": "self = <test_success.Test_transfers_success object at 0x10603fbe0>, test_title = 'IRIS 2-2shared账户转账'\nnetworkCode = 'IRIS', symbol = 'IRIS'\nprivatekey = ['d10003ebe2876bd53bf2bb2200eb873a089520a3395b63a4f04330c00e9a885b', 'e560c8c3353414a3339f17001c563cd816be808799889aa3827ea5465124a790']\nfrom_add = 'iaa1xul5lny6qp9vqqj42q9lm9rpy0lyafr80fx3h2', to_add = 'iaa15h0lvaa6slvj0hg4d64548j2c5fds2zv8tkvgs'\namount = '0.000015'\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,privatekey,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,privatekey,from_add,to_add,amount):\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n            assert balance == quantity\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n            assert transfer.status_code == 200\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"statusDesc\"] == \"BUILDING\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n            requiredSignings = transfer.json()[\"_embedded\"][\"transactions\"][0][\"requiredSignings\"]\n            signatures = []\n            for i in range(len(requiredSignings)):\n                hash = requiredSignings[i][\"hash\"]\n                publickeys = requiredSignings[i][\"publicKeys\"]\n                threshold = requiredSignings[i][\"threshold\"]\n                for j in range(threshold):\n                    signature = {\n                        \"hash\":hash,\n                        \"publicKey\":publickeys[j],\n                        \"signature\":Conf.Config.sign(privatekey[j],hash)\n    \n                    }\n                    signatures.append(signature)\n    \n        with allure.step(\"签名交易\"):\n            sign  =Http.HttpUtils.sign(id,signatures)\n            assert sign.status_code == 200\n    \n        with allure.step(\"广播交易\"):\n            send = Http.HttpUtils.send(id)\n            assert send.status_code == 200\n            assert send.json()[\"statusDesc\"] == \"PENDING\"\n    \n            hash = send.json()[\"hash\"]\n    \n        # logger.error(\"\\n\\n\"+networkCode+\"--\"+symbol+\"--\"+test_title+\"\\n\"+from_add+\"--\"+quantity+\"\\n\"+hash+\"\\n\\n\")\n    \n        with allure.step(\"通过id查询交易记录\"):\n            sleep(30)\n            for n in range(10):\n                transaction = Http.HttpUtils.transactions_byid(id)\n                assert transaction.status_code == 200\n                statusDesc = transaction.json()[\"statusDesc\"]\n                if statusDesc == \"SETTLED\" and len(transaction.json()[\"balanceChanges\"]) > 0:\n                    break\n                else:\n                    sleep(30)\n            sleep(5)\n    \n        with allure.step(\"浏览器查询from账户balance信息\"):\n            balance = Httpexplore.Balances_explore.query(networkCode,from_add,symbol)\n    \n        with allure.step(\"查询from账户holder信息\"):\n            holder = Http.HttpUtils.holders(networkCode=networkCode,symbol=symbol,address=from_add)\n            assert holder.status_code ==200\n            quantity = Decimal(holder.json()[\"list\"][0][\"quantity\"])\n    \n        logger.debug(\"浏览器查询账户balance为:\" + str(balance))\n        logger.debug(\"查询账户holder为:\" + str(quantity))\n    \n        with allure.step(\"账户余额相等验证 浏览器查询==holder\"):\n>           assert balance == quantity\nE           AssertionError: assert Decimal('0.386327') == Decimal('0.406342')\n\nTestcase/Test_Cloud/Test_Transfer/Test_Share/test_success.py:134: AssertionError"}, "steps": [{"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1673073750810, "stop": 1673073752361}, {"name": "查询from账户holder信息", "status": "passed", "start": 1673073752361, "stop": 1673073752870}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "passed", "start": 1673073752871, "stop": 1673073752871}, {"name": "构建交易——instructions", "status": "passed", "start": 1673073752871, "stop": 1673073755312}, {"name": "签名交易", "status": "passed", "start": 1673073755312, "stop": 1673073755636}, {"name": "广播交易", "status": "passed", "start": 1673073755636, "stop": 1673073765261}, {"name": "通过id查询交易记录", "status": "passed", "start": 1673073765261, "stop": 1673074103997}, {"name": "浏览器查询from账户balance信息", "status": "passed", "start": 1673074103998, "stop": 1673074105135}, {"name": "查询from账户holder信息", "status": "passed", "start": 1673074105135, "stop": 1673074105546}, {"name": "账户余额相等验证 浏览器查询==holder", "status": "failed", "statusDetails": {"message": "AssertionError: assert Decimal('0.386327') == Decimal('0.406342')\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Transfer/Test_Share/test_success.py\", line 134, in test_custodial\n    assert balance == quantity\n"}, "start": 1673074105546, "stop": 1673074105546}], "attachments": [{"name": "log", "source": "eea062a9-18d5-4d18-8a2c-8d8e4911657e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'IRIS 2-2shared账户转账'"}, {"name": "networkCode", "value": "'IRIS'"}, {"name": "symbol", "value": "'IRIS'"}, {"name": "privatekey", "value": "['d10003ebe2876bd53bf2bb2200eb873a089520a3395b63a4f04330c00e9a885b', 'e560c8c3353414a3339f17001c563cd816be808799889aa3827ea5465124a790']"}, {"name": "from_add", "value": "'iaa1xul5lny6qp9vqqj42q9lm9rpy0lyafr80fx3h2'"}, {"name": "to_add", "value": "'iaa15h0lvaa6slvj0hg4d64548j2c5fds2zv8tkvgs'"}, {"name": "amount", "value": "'0.000015'"}], "start": 1673073750810, "stop": 1673074105550, "uuid": "4eda3bad-36fe-42c2-b017-4527ef9f56e6", "historyId": "ac7d330e9958ee0fb37f51373ec414a2", "testCaseId": "f280abede794e675248cc33ca19ba7e5", "fullName": "Testcase.Test_Cloud.Test_Transfer.Test_Share.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Share"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "19128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Transfer.Test_Share.test_success"}]}