{"name": "多签账户Swap-正常Swap(合约地址有matic)!", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_swap_success_matic.Test_swap_success_matic_safe object at 0x109672190>, test_title = '正常Swap(合约地址有matic)!'\nprivatekey = ['ae0f28a2d98211ea6f656ecffa8a821235f78354921d63346c6be48a52610187']\nPublicKeys = ['03f1b7e94f4c83b3c1505cc15e4a14e172323afe0b946295eece18300da6ec2228', '0331e3ab5059c28098131d50856a99fcf40bea39b61f08ea55e1f35fbed131d2c0']\nnetworkCode = 'MATIC', from_coin = 'USDC', to_coin = 'USDT', type = 'swap', address = '0xcb4D1bBF74F2b068Dc7d33c965c1Fdad3d7B4D43', slippage = '1', amount = '0.07'\n\n    @allure.story(\"Swap_MATIC_Success!\")\n    @allure.title('多签账户Swap-{test_title}')\n    @pytest.mark.parametrize('test_title,privatekey,PublicKeys,networkCode,from_coin,to_coin,type,address,slippage,amount', test_data)\n    def test_swap_matic_safe(self,test_title,privatekey,PublicKeys,networkCode,from_coin,to_coin,type,address,slippage,amount):\n    \n        with allure.step(\"构建交易——transfers\"):\n            # transactionParams = {\n            #     \"memo\":\"hahahhahahhahahhaahhahhahhahahaha@@==这是一段描述！！====@@hahahhahahhahahhaahhahhahhahahaha\"\n            # }\n            res = Http.HttpUtils.post_instructions(networkCode,from_coin,to_coin,PublicKeys,address,slippage,amount,type)\n            assert res[0].status_code == 200\n    \n        with allure.step(\"请求签名交易——req_sign\"):\n            requiredSignings = [{\n                \"message\":res[5][0]['hash'],\n                \"publicKey\":res[5][0]['publicKeys'][0]\n                }]\n            reqsign = Http.HttpUtils.post_req_sign(requiredSignings)\n            assert reqsign.status_code == 200\n    \n        with allure.step(\"获取验证码——verify\"):\n            reqverify = Http.HttpUtils.post_req_Verify(reqsign.json()[\"id\"])\n            assert reqverify.status_code == 200\n    \n        with allure.step(\"托管key提交签名——confirm-sign\"):\n            confirmsign = Http.HttpUtils.post_confirm_sign(reqsign.json()[\"id\"],\"000000\")\n>           assert confirmsign.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\nTestcase/Test_Swap/Test_Swap_MATIC/test_swap_success_matic.py:141: AssertionError"}, "steps": [{"name": "构建交易——transfers", "status": "passed", "start": 1659090707776, "stop": 1659090712192}, {"name": "请求签名交易——req_sign", "status": "passed", "start": 1659090712192, "stop": 1659090712489}, {"name": "获取验证码——verify", "status": "passed", "start": 1659090712489, "stop": 1659090713041}, {"name": "托管key提交签名——confirm-sign", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Swap/Test_Swap_MATIC/test_swap_success_matic.py\", line 141, in test_swap_matic_safe\n    assert confirmsign.status_code == 200\n"}, "start": 1659090713041, "stop": 1659090715807}], "attachments": [{"name": "log", "source": "fa1dcd2a-f216-4049-8341-11a808b00d29-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'正常Swap(合约地址有matic)!'"}, {"name": "privatekey", "value": "['ae0f28a2d98211ea6f656ecffa8a821235f78354921d63346c6be48a52610187']"}, {"name": "PublicKeys", "value": "['03f1b7e94f4c83b3c1505cc15e4a14e172323afe0b946295eece18300da6ec2228', '0331e3ab5059c28098131d50856a99fcf40bea39b61f08ea55e1f35fbed131d2c0']"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "from_coin", "value": "'USDC'"}, {"name": "to_coin", "value": "'USDT'"}, {"name": "type", "value": "'swap'"}, {"name": "address", "value": "'0xcb4D1bBF74F2b068Dc7d33c965c1Fdad3d7B4D43'"}, {"name": "slippage", "value": "'1'"}, {"name": "amount", "value": "'0.07'"}], "start": 1659090707776, "stop": 1659090715808, "uuid": "d802a267-bdc5-4971-b088-b235e4bba918", "historyId": "3f5706727742f89b42f26e63fc84a433", "testCaseId": "12aa86bcc440990644313310524e8326", "fullName": "Testcase.Test_Swap.Test_Swap_MATIC.test_swap_success_matic.Test_swap_success_matic_safe#test_swap_matic_safe", "labels": [{"name": "story", "value": "Swap_MATIC_Success!"}, {"name": "feature", "value": "Swap_MATIC!"}, {"name": "parentSuite", "value": "Testcase.Test_Swap.Test_Swap_MATIC"}, {"name": "suite", "value": "test_swap_success_matic"}, {"name": "subSuite", "value": "Test_swap_success_matic_safe"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "58351-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Swap.Test_Swap_MATIC.test_swap_success_matic"}]}