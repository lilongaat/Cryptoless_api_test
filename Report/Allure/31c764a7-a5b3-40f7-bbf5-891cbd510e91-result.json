{"name": "External账户MATIC转账", "status": "failed", "statusDetails": {"message": "AssertionError: assert '0.123084644151315931' == 'maximum'\n  - maximum\n  + 0.123084644151315931", "trace": "self = <test_success.Test_transfers_success object at 0x107d05b50>, test_title = 'External账户MATIC转账'\nprivatekey = ['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da'], networkCode = 'MATIC', symbol = 'MATIC'\nfrom_add = '0xe525E7cd17f6Dc950492755A089E452fd5d9d44f', to_add = '0xe525E7cd17f6Dc950492755A089E452fd5d9d44f', amount = 'maximum'\n\n    @allure.story(\"External_Transfers_Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,privatekey,networkCode,symbol,from_add,to_add,amount', test_data)\n    def test_external(self,test_title,privatekey,networkCode,symbol,from_add,to_add,amount):\n    \n        with allure.step(\"查询From账户holders信息——holders\"):\n            holders = Http.HttpUtils.get_holders(networkCode,symbol,from_add)\n            assert holders.status_code == 200\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"from\":from_add,\n                \"to\":to_add,\n                \"symbol\":symbol,\n                \"amount\":amount\n            }\n            transactionParams = {\n                \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n            }\n            transfer = Http.HttpUtils.instructions(\"transfer\",body,networkCode,[],transactionParams)\n    \n            assert transfer.status_code == 200\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"status\"] == \"BUILDING\"\n            assert transfer.json()[\"body\"][\"symbol\"] == symbol\n>           assert transfer.json()[\"body\"][\"amount\"] == amount\nE           AssertionError: assert '0.123084644151315931' == 'maximum'\nE             - maximum\nE             + 0.123084644151315931\n\nTestcase/Test_Instructions/Test_Transfer/Test_External/test_success.py:78: AssertionError"}, "steps": [{"name": "查询From账户holders信息——holders", "status": "passed", "start": 1669790677021, "stop": 1669790677509}, {"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert '0.123084644151315931' == 'maximum'\n  - maximum\n  + 0.123084644151315931\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions/Test_Transfer/Test_External/test_success.py\", line 78, in test_external\n    assert transfer.json()[\"body\"][\"amount\"] == amount\n"}, "start": 1669790677509, "stop": 1669790682225}], "attachments": [{"name": "log", "source": "28ea92b6-6bd9-4cb6-bd33-d3d46e872163-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'External账户MATIC转账'"}, {"name": "privatekey", "value": "['dca5feaaf2296dca296a015b0ce26d82f89ab8d0f77ec98901a77e96f6e2e2da']"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "symbol", "value": "'MATIC'"}, {"name": "from_add", "value": "'0xe525E7cd17f6Dc950492755A089E452fd5d9d44f'"}, {"name": "to_add", "value": "'0xe525E7cd17f6Dc950492755A089E452fd5d9d44f'"}, {"name": "amount", "value": "'maximum'"}], "start": 1669790677021, "stop": 1669790682226, "uuid": "a15a0362-f0f9-48ed-8e99-1ddf7d33d8d6", "historyId": "7ac3228e7c54a0b5df087210e804a590", "testCaseId": "65c61ec42036af05db5c279b23eee8c5", "fullName": "Testcase.Test_Instructions.Test_Transfer.Test_External.test_success.Test_transfers_success#test_external", "labels": [{"name": "feature", "value": "Transfers_Success!"}, {"name": "story", "value": "External_Transfers_Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions.Test_Transfer.Test_External"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "44156-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions.Test_Transfer.Test_External.test_success"}]}