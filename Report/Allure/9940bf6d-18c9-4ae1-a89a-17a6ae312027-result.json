{"name": "Custodial账户MATIC转账", "status": "broken", "statusDetails": {"message": "Exception: 请求异常", "trace": "self = <test_success.Test_transfers_success object at 0x1047531f0>, test_title = 'Custodial账户MATIC转账', networkCode = 'MATIC'\nsymbol = 'MATIC', from_add = '0x985f8D18a50AF2Cb91f52f9A63d9b5eEc1f60047', to_add = '0xDBA67bAa3CA1e89a2BDf0fEeE4592595b130888A'\namount = '0.0009'\n\n    @allure.story(\"Custodial_Transfers_Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,from_add,to_add,amount', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,from_add,to_add,amount):\n    \n        with allure.step(\"查询From账户holders信息——holders\"):\n            holders = Http.HttpUtils.get_holders(networkCode,symbol,from_add)\n            assert holders.status_code == 200\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"from\":from_add,\n                \"to\":to_add,\n                \"symbol\":symbol,\n                \"amount\":amount\n            }\n            transactionParams = {\n                \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n            }\n            transfer = Http.HttpUtils.instructions(\"transfer\",body,networkCode,[],transactionParams)\n    \n            assert transfer.status_code == 200\n            assert transfer.json()[\"body\"][\"symbol\"] == symbol\n            assert transfer.json()[\"body\"][\"amount\"] == amount\n            assert transfer.json()[\"body\"][\"from\"] == from_add\n            assert transfer.json()[\"body\"][\"to\"] == to_add\n            assert transfer.json()[\"_embedded\"][\"transactions\"][0][\"status\"] == \"SIGNED\"\n    \n            id = transfer.json()[\"_embedded\"][\"transactions\"][0][\"id\"]\n    \n        with allure.step(\"广播交易\"):\n>           send = Http.HttpUtils.send(id)\n\nTestcase/Test_Instructions/Test_Transfer/Test_Custodial/test_success.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nid = '1589878297708703745'\nAuthorization = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNTgzMDE5OTU1NTMwODk1MzYxIiwiZXhwIjoxNjY4NDA2MDg4LCJpYXQiOjE2Njc4MDEyODgsInVzZXJJZCI6MTU4MzAxOTk1NTUzMDg5NTM2MX0.t8TZeGPZfNhs1U3syLsqgadq1-RKf_GU2nGWQWoWW9w'\n\n    @staticmethod\n    # send\n    def send(id: str, Authorization=token):\n        url = url_ + \"/vault/transactions/\" + id\n        headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": Authorization\n        }\n    \n        logger.info('\\n'+\"<-----Send----->\"+\"\\n\"+\"Url:\"+url+'\\n\\n'+'Headers:'+json.dumps(headers)+'\\n\\n')\n    \n        res = requests.patch(url=url, headers=headers, timeout=timeout_)\n        if res.status_code == 200:\n            logger.info('\\n'+\"<-----Send Response----->\"+\"\\n\"+(res.text))\n            return res\n        else:\n            logger.info('\\n'+\"<-----Send Response Error----->\"+\"\\n\"+str(res.status_code)+\"\\n\"+(res.text))\n>           raise Exception(\"请求异常\")\nE           Exception: 请求异常\n\nCommon/Http.py:501: Exception"}, "steps": [{"name": "查询From账户holders信息——holders", "status": "passed", "start": 1667891498438, "stop": 1667891498873}, {"name": "构建交易——instructions", "status": "passed", "start": 1667891498873, "stop": 1667891501436}, {"name": "广播交易", "status": "broken", "statusDetails": {"message": "Exception: 请求异常\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Instructions/Test_Transfer/Test_Custodial/test_success.py\", line 87, in test_custodial\n    send = Http.HttpUtils.send(id)\n  File \"/Users/lilong/Documents/Test_Api/Common/Http.py\", line 501, in send\n    raise Exception(\"请求异常\")\n"}, "start": 1667891501436, "stop": 1667891501976}], "attachments": [{"name": "log", "source": "3194d782-73aa-4ef2-ae6f-1699a3bda74a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'Custodial账户MATIC转账'"}, {"name": "networkCode", "value": "'MATIC'"}, {"name": "symbol", "value": "'MATIC'"}, {"name": "from_add", "value": "'0x985f8D18a50AF2Cb91f52f9A63d9b5eEc1f60047'"}, {"name": "to_add", "value": "'0xDBA67bAa3CA1e89a2BDf0fEeE4592595b130888A'"}, {"name": "amount", "value": "'0.0009'"}], "start": 1667891498438, "stop": 1667891501979, "uuid": "925985ce-2b0b-486a-b32f-472fbe1d6ac0", "historyId": "6fe01074d566b4687e4a8c1ec9d15138", "testCaseId": "011f91c18ce423aec58f0862efb6dff8", "fullName": "Testcase.Test_Instructions.Test_Transfer.Test_Custodial.test_success.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers_Success!"}, {"name": "story", "value": "Custodial_Transfers_Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Instructions.Test_Transfer.Test_Custodial"}, {"name": "suite", "value": "test_success"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "5458-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Instructions.Test_Transfer.Test_Custodial.test_success"}]}