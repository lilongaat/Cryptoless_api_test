{"name": "BTC Custodial账户转账 networkCode不存在", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 400\n +  where 404 = <Response [404]>.status_code", "trace": "self = <test_fail.Test_transfers_success object at 0x105a444f0>, test_title = 'BTC Custodial账户转账 networkCode不存在'\nnetworkCode = 'WBTC', symbol = 'BTC', from_add = 'tb1q78qch48dw8fqc4xc8f374y88f93ys4xldqvunt'\nto_add = 'tb1qagkvxdz2zq76atvr0rzh8n9lewjmlm25umq0xq', amount = '0.00000001', status_code = 400, code = 2100000\n\n    @allure.story(\"Custodial Transfers Success!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,symbol,from_add,to_add,amount,status_code,code', test_data)\n    def test_custodial(self,test_title,networkCode,symbol,from_add,to_add,amount,status_code,code):\n    \n        with allure.step(\"构建交易——instructions\"):\n            body = {\n                \"networkCode\":networkCode,\n                \"type\":\"transfer\",\n                \"body\":{\n                    \"from\":from_add,\n                    \"to\":to_add,\n                    \"symbol\":symbol,\n                    \"amount\":amount\n                },\n                \"transactionParams\":{\n                    \"memo\":''.join(random.sample(string.ascii_letters + string.digits, 10))\n                }\n            }\n            transfer = Http.HttpUtils.instructions(body)\n    \n    \n>           assert transfer.status_code == status_code\nE           assert 404 == 400\nE            +  where 404 = <Response [404]>.status_code\n\nTestcase/Test_Cloud/Test_Instructions/Test_Custodial/test_fail.py:66: AssertionError"}, "steps": [{"name": "构建交易——instructions", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 400\n +  where 404 = <Response [404]>.status_code\n", "trace": "  File \"/Users/lilong/Documents/Test_Api/Testcase/Test_Cloud/Test_Instructions/Test_Custodial/test_fail.py\", line 66, in test_custodial\n    assert transfer.status_code == status_code\n"}, "start": 1670990287185, "stop": 1670990287354}], "attachments": [{"name": "log", "source": "ba1b5846-00b7-4bbf-ac94-79f49f0a7a73-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "'BTC Custodial账户转账 networkCode不存在'"}, {"name": "networkCode", "value": "'WBTC'"}, {"name": "symbol", "value": "'BTC'"}, {"name": "from_add", "value": "'tb1q78qch48dw8fqc4xc8f374y88f93ys4xldqvunt'"}, {"name": "to_add", "value": "'tb1qagkvxdz2zq76atvr0rzh8n9lewjmlm25umq0xq'"}, {"name": "amount", "value": "'0.00000001'"}, {"name": "status_code", "value": "400"}, {"name": "code", "value": "2100000"}], "start": 1670990287185, "stop": 1670990287355, "uuid": "65f503e3-7fb5-4a30-ab37-ffb11e079ce7", "historyId": "9d8501e186b9f747afdf9fc7aa7e5b81", "testCaseId": "1b5deb65cf5a1349b339c3171be38e72", "fullName": "Testcase.Test_Cloud.Test_Instructions.Test_Custodial.test_fail.Test_transfers_success#test_custodial", "labels": [{"name": "feature", "value": "Transfers Success!"}, {"name": "story", "value": "Custodial Transfers Success!"}, {"name": "parentSuite", "value": "Testcase.Test_Cloud.Test_Instructions.Test_Custodial"}, {"name": "suite", "value": "test_fail"}, {"name": "subSuite", "value": "Test_transfers_success"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "19684-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_Cloud.Test_Instructions.Test_Custodial.test_fail"}]}