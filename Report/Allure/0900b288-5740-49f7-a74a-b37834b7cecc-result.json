{"status": "broken", "statusDetails": {"message": "UnboundLocalError: local variable 'block_height_network' referenced before assignment", "trace": "self = <test_blockheight_check.Test_block_height_check object at 0x111abfc40>, test_title = '', networkCode = 'ATOM'\ngaps = 2\n\n    @allure.story(\"Block Height Check!\")\n    @allure.title('{test_title}')\n    @pytest.mark.parametrize('test_title,networkCode,gaps', test_data)\n    def test_custodial(self,test_title,networkCode,gaps):\n    \n        with allure.step(\"浏览器查询块高\"):\n            block_explore = Httpexplore.Block_explore.block_height(networkCode)\n            time_explore = Conf.Config.now_time()\n            if block_explore.status_code == 200:\n                if networkCode == \"BTC\":\n                    block_height = block_explore.json()[\"data\"][0][\"id\"]\n                elif networkCode == \"DOGE\":\n                    block_height = block_explore.json()\n                elif networkCode == \"ETH\":\n                    block_height = int(block_explore.json()[\"result\"],16)\n                elif networkCode == \"GOERLI\":\n                    block_height = int(block_explore.json()[\"result\"],16)\n                elif networkCode == \"BSC\":\n                    block_height = int(block_explore.json()[\"result\"])\n                elif networkCode == \"MATIC\":\n                    block_height = int(block_explore.json()[\"result\"])\n                elif networkCode == \"ATOM\":\n                    block_height = int(block_explore.json()[\"block\"][\"last_commit\"][\"height\"])\n                elif networkCode == \"IRIS\":\n                    block_height = int(block_explore.json()[\"block\"][\"last_commit\"][\"height\"])\n                elif networkCode == \"DOT\":\n                    block_height = block_explore.json()[\"data\"][\"blocks\"][0][\"block_num\"]\n                elif networkCode == \"CLV\":\n                    block_height = block_explore.json()[\"data\"][\"count\"]\n                else:\n                    raise Exception(\"networkCode No Support\")\n            else:\n                block_height = \"Serve Error \" + str(block_explore.status_code)\n    \n        logger.debug(block_height)\n    \n        with allure.step(\"Graphql查询块高\"):\n            block_graphql = Graphql.Graphql.getLatestBlock(networkCode)\n            time_graphql = Conf.Config.now_time()\n            if block_graphql.status_code == 200:\n                block_height_graphql = block_graphql.json()[\"data\"][\"getLatestBlock\"][\"blockNumber\"]\n            else:\n                block_height_graphql = \"Serve Error \" + str(block_graphql.status_code)\n    \n        with allure.step(\"Network查询块高\"):\n            networks = Http.HttpUtils.networks(networkCode)\n            time_network = Conf.Config.now_time()\n            if networks.status_code == 200:\n                block_height_network_list = ([n.get(\"blocks\") for n in networks.json() if n.get(\"code\") == networkCode])\n                if block_height_network_list == [None]:\n                    Httpfs.HttpFs.send_msg((networkCode + 'Height!\\n' + \"浏览器查询最新高度(\" + time_explore + \"): \" + str(block_height) + \"\\n\" + \"Graphql查询最新高度(\" + time_graphql + \"): \" + str(block_height_graphql) + \"\\n\" + \"NetWork查询最新高度(\" + time_network + \"): \" + str(block_height_network_list[0])))\n                else:\n                    block_height_network = int(block_height_network_list[0])\n            else:\n                block_height_network = \"Serve Error \" + str(networks.status_code)\n    \n>       logger.debug(\"Block_Height Gaps:\" + str(abs(block_height - block_height_network)))\nE       UnboundLocalError: local variable 'block_height_network' referenced before assignment\n\nTestcase/Test_NetworkCode/Test_block/test_blockheight_check.py:88: UnboundLocalError"}, "steps": [{"name": "浏览器查询块高", "status": "passed", "start": 1673518729753, "stop": 1673518731210}, {"name": "Graphql查询块高", "status": "passed", "start": 1673518731211, "stop": 1673518731299}, {"name": "Network查询块高", "status": "passed", "start": 1673518731299, "stop": 1673518732129}], "attachments": [{"name": "log", "source": "1c6465b9-2a26-4748-9609-5a8d590962da-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_title", "value": "''"}, {"name": "networkCode", "value": "'ATOM'"}, {"name": "gaps", "value": "2"}], "start": 1673518729753, "stop": 1673518732130, "uuid": "02e6e2d4-eed4-42f1-9159-f75c871e57a5", "historyId": "664ae2a811a35da44ff3c6768cb90831", "testCaseId": "d4b9d66082e3449859d4337f913a04f9", "fullName": "Testcase.Test_NetworkCode.Test_block.test_blockheight_check.Test_block_height_check#test_custodial", "labels": [{"name": "feature", "value": "Block Height!"}, {"name": "story", "value": "Block Height Check!"}, {"name": "parentSuite", "value": "Testcase.Test_NetworkCode.Test_block"}, {"name": "suite", "value": "test_blockheight_check"}, {"name": "subSuite", "value": "Test_block_height_check"}, {"name": "host", "value": "lilongdeMacBook-Pro.local"}, {"name": "thread", "value": "8678-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.Test_NetworkCode.Test_block.test_blockheight_check"}]}